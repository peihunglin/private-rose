=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
    registers:
        ax      = { defs={} expr=v48[32] }
        cx      = { defs={} expr=v49[32] }
        dx      = { defs={} expr=v50[32] }
        bx      = { defs={} expr=v51[32] }
        sp      = { defs={0x080482c8} expr=(add[32] v52[32] -4[32]) }
        bp      = { defs={} expr=v53[32] }
        si      = { defs={} expr=v54[32] }
        di      = { defs={} expr=v55[32] }
        es      = { defs={} expr=v56[16] }
        cs      = { defs={} expr=v57[16] }
        ss      = { defs={} expr=v58[16] }
        ds      = { defs={} expr=v59[16] }
        fs      = { defs={} expr=v60[16] }
        gs      = { defs={} expr=v61[16] }
        cf      = { defs={} expr=v62[1] }
        ?1      = { defs={} expr=v63[1] }
        pf      = { defs={} expr=v64[1] }
        ?3      = { defs={} expr=v65[1] }
        af      = { defs={} expr=v66[1] }
        ?5      = { defs={} expr=v67[1] }
        zf      = { defs={} expr=v68[1] }
        sf      = { defs={} expr=v69[1] }
        tf      = { defs={} expr=v70[1] }
        if      = { defs={} expr=v71[1] }
        df      = { defs={} expr=v72[1] }
        of      = { defs={} expr=v73[1] }
        iopl0   = { defs={} expr=v74[1] }
        iopl1   = { defs={} expr=v75[1] }
        nt      = { defs={} expr=v76[1] }
        ?15     = { defs={} expr=v77[1] }
        rf      = { defs={} expr=v78[1] }
        vm      = { defs={} expr=v79[1] }
        ac      = { defs={} expr=v80[1] }
        vif     = { defs={} expr=v81[1] }
        vip     = { defs={} expr=v82[1] }
        id      = { defs={} expr=v83[1] }
        ?22     = { defs={} expr=v84[1] }
        ?23     = { defs={} expr=v85[1] }
        ?24     = { defs={} expr=v86[1] }
        ?25     = { defs={} expr=v87[1] }
        ?26     = { defs={} expr=v88[1] }
        ?27     = { defs={} expr=v89[1] }
        ?28     = { defs={} expr=v90[1] }
        ?29     = { defs={} expr=v91[1] }
        ?30     = { defs={} expr=v92[1] }
        ?31     = { defs={} expr=v93[1] }
        ip      = { defs={0x080482c8} expr=0x080482c9[32] }
    memory:
        address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 3[32]) }
          value = { defs={0x080482c8} expr=(extract[8] 24[32] 32[32] v53[32]) }
          flags = { }
        address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 2[32]) }
          value = { defs={0x080482c8} expr=(extract[8] 16[32] 24[32] v53[32]) }
          flags = { }
        address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 1[32]) }
          value = { defs={0x080482c8} expr=(extract[8] 8[32] 16[32] v53[32]) }
          flags = { }
        address = { defs={0x080482c8} expr=(add[32] v52[32] -4[32]) }
          value = { defs={0x080482c8} expr=(extract[8] 0[32] 8[32] v53[32]) }
          flags = { }
    init mem:
0x80482c9:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v48[32] }
        cx      = { defs={} expr=v49[32] }
        dx      = { defs={} expr=v50[32] }
        bx      = { defs={} expr=v51[32] }
        sp      = { defs={0x080482c8} expr=(add[32] v52[32] -4[32]) }
        bp      = { defs={0x080482c8,0x080482c9} expr=(add[32] v52[32] -4[32]) }
        si      = { defs={} expr=v54[32] }
        di      = { defs={} expr=v55[32] }
        es      = { defs={} expr=v56[16] }
        cs      = { defs={} expr=v57[16] }
        ss      = { defs={} expr=v58[16] }
        ds      = { defs={} expr=v59[16] }
        fs      = { defs={} expr=v60[16] }
        gs      = { defs={} expr=v61[16] }
        cf      = { defs={} expr=v62[1] }
        ?1      = { defs={} expr=v63[1] }
        pf      = { defs={} expr=v64[1] }
        ?3      = { defs={} expr=v65[1] }
        af      = { defs={} expr=v66[1] }
        ?5      = { defs={} expr=v67[1] }
        zf      = { defs={} expr=v68[1] }
        sf      = { defs={} expr=v69[1] }
        tf      = { defs={} expr=v70[1] }
        if      = { defs={} expr=v71[1] }
        df      = { defs={} expr=v72[1] }
        of      = { defs={} expr=v73[1] }
        iopl0   = { defs={} expr=v74[1] }
        iopl1   = { defs={} expr=v75[1] }
        nt      = { defs={} expr=v76[1] }
        ?15     = { defs={} expr=v77[1] }
        rf      = { defs={} expr=v78[1] }
        vm      = { defs={} expr=v79[1] }
        ac      = { defs={} expr=v80[1] }
        vif     = { defs={} expr=v81[1] }
        vip     = { defs={} expr=v82[1] }
        id      = { defs={} expr=v83[1] }
        ?22     = { defs={} expr=v84[1] }
        ?23     = { defs={} expr=v85[1] }
        ?24     = { defs={} expr=v86[1] }
        ?25     = { defs={} expr=v87[1] }
        ?26     = { defs={} expr=v88[1] }
        ?27     = { defs={} expr=v89[1] }
        ?28     = { defs={} expr=v90[1] }
        ?29     = { defs={} expr=v91[1] }
        ?30     = { defs={} expr=v92[1] }
        ?31     = { defs={} expr=v93[1] }
        ip      = { defs={0x080482c8,0x080482c9} expr=0x080482cb[32] }
    memory:
        address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 3[32]) }
          value = { defs={0x080482c8} expr=(extract[8] 24[32] 32[32] v53[32]) }
          flags = { }
        address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 2[32]) }
          value = { defs={0x080482c8} expr=(extract[8] 16[32] 24[32] v53[32]) }
          flags = { }
        address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 1[32]) }
          value = { defs={0x080482c8} expr=(extract[8] 8[32] 16[32] v53[32]) }
          flags = { }
        address = { defs={0x080482c8} expr=(add[32] v52[32] -4[32]) }
          value = { defs={0x080482c8} expr=(extract[8] 0[32] 8[32] v53[32]) }
          flags = { }
    init mem:
0x80482cb:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v48[32] }
        cx      = { defs={} expr=v49[32] }
        dx      = { defs={} expr=v50[32] }
        bx      = { defs={} expr=v51[32] }
        sp      = { defs={0x080482c8,0x080482cb} expr=(add[32] (add[32] v52[32] -4[32]) -8[32]) }
        bp      = { defs={0x080482c8,0x080482c9} expr=(add[32] v52[32] -4[32]) }
        si      = { defs={} expr=v54[32] }
        di      = { defs={} expr=v55[32] }
        es      = { defs={} expr=v56[16] }
        cs      = { defs={} expr=v57[16] }
        ss      = { defs={} expr=v58[16] }
        ds      = { defs={} expr=v59[16] }
        fs      = { defs={} expr=v60[16] }
        gs      = { defs={} expr=v61[16] }
        cf      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v63[1] }
        pf      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v65[1] }
        af      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v67[1] }
        zf      = { defs={0x080482c8,0x080482cb} expr=(zerop[1] (add[32] (add[32] v52[32] -4[32]) -8[32])) }
        sf      = { defs={0x080482c8,0x080482cb} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v52[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v70[1] }
        if      = { defs={} expr=v71[1] }
        df      = { defs={} expr=v72[1] }
        of      = { defs={0x080482c8,0x080482cb} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v74[1] }
        iopl1   = { defs={} expr=v75[1] }
        nt      = { defs={} expr=v76[1] }
        ?15     = { defs={} expr=v77[1] }
        rf      = { defs={} expr=v78[1] }
        vm      = { defs={} expr=v79[1] }
        ac      = { defs={} expr=v80[1] }
        vif     = { defs={} expr=v81[1] }
        vip     = { defs={} expr=v82[1] }
        id      = { defs={} expr=v83[1] }
        ?22     = { defs={} expr=v84[1] }
        ?23     = { defs={} expr=v85[1] }
        ?24     = { defs={} expr=v86[1] }
        ?25     = { defs={} expr=v87[1] }
        ?26     = { defs={} expr=v88[1] }
        ?27     = { defs={} expr=v89[1] }
        ?28     = { defs={} expr=v90[1] }
        ?29     = { defs={} expr=v91[1] }
        ?30     = { defs={} expr=v92[1] }
        ?31     = { defs={} expr=v93[1] }
        ip      = { defs={0x080482c8,0x080482c9,0x080482cb} expr=0x080482ce[32] }
    memory:
        address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 3[32]) }
          value = { defs={0x080482c8} expr=(extract[8] 24[32] 32[32] v53[32]) }
          flags = { }
        address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 2[32]) }
          value = { defs={0x080482c8} expr=(extract[8] 16[32] 24[32] v53[32]) }
          flags = { }
        address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 1[32]) }
          value = { defs={0x080482c8} expr=(extract[8] 8[32] 16[32] v53[32]) }
          flags = { }
        address = { defs={0x080482c8} expr=(add[32] v52[32] -4[32]) }
          value = { defs={0x080482c8} expr=(extract[8] 0[32] 8[32] v53[32]) }
          flags = { }
    init mem:
0x80482ce:call   0x08048364<call_gmon_start>
    registers:
        ax      = { defs={} expr=v48[32] }
        cx      = { defs={} expr=v49[32] }
        dx      = { defs={} expr=v50[32] }
        bx      = { defs={} expr=v51[32] }
        sp      = { defs={0x080482c8,0x080482cb,0x080482ce} expr=(add[32] (add[32] (add[32] v52[32] -4[32]) -8[32]) -4[32]) }
        bp      = { defs={0x080482c8,0x080482c9} expr=(add[32] v52[32] -4[32]) }
        si      = { defs={} expr=v54[32] }
        di      = { defs={} expr=v55[32] }
        es      = { defs={} expr=v56[16] }
        cs      = { defs={} expr=v57[16] }
        ss      = { defs={} expr=v58[16] }
        ds      = { defs={} expr=v59[16] }
        fs      = { defs={} expr=v60[16] }
        gs      = { defs={} expr=v61[16] }
        cf      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v63[1] }
        pf      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v65[1] }
        af      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v67[1] }
        zf      = { defs={0x080482c8,0x080482cb} expr=(zerop[1] (add[32] (add[32] v52[32] -4[32]) -8[32])) }
        sf      = { defs={0x080482c8,0x080482cb} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v52[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v70[1] }
        if      = { defs={} expr=v71[1] }
        df      = { defs={} expr=v72[1] }
        of      = { defs={0x080482c8,0x080482cb} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v74[1] }
        iopl1   = { defs={} expr=v75[1] }
        nt      = { defs={} expr=v76[1] }
        ?15     = { defs={} expr=v77[1] }
        rf      = { defs={} expr=v78[1] }
        vm      = { defs={} expr=v79[1] }
        ac      = { defs={} expr=v80[1] }
        vif     = { defs={} expr=v81[1] }
        vip     = { defs={} expr=v82[1] }
        id      = { defs={} expr=v83[1] }
        ?22     = { defs={} expr=v84[1] }
        ?23     = { defs={} expr=v85[1] }
        ?24     = { defs={} expr=v86[1] }
        ?25     = { defs={} expr=v87[1] }
        ?26     = { defs={} expr=v88[1] }
        ?27     = { defs={} expr=v89[1] }
        ?28     = { defs={} expr=v90[1] }
        ?29     = { defs={} expr=v91[1] }
        ?30     = { defs={} expr=v92[1] }
        ?31     = { defs={} expr=v93[1] }
        ip      = { defs={0x080482ce} expr=0x08048364[32] }
    memory:
        address = { defs={0x080482c8,0x080482cb,0x080482ce} expr=(add[32] (add[32] (add[32] (add[32] v52[32] -4[32]) -8[32]) -4[32]) 3[32]) }
          value = { defs={0x080482c8,0x080482c9,0x080482cb,0x080482ce} expr=8[8] }
          flags = { }
        address = { defs={0x080482c8,0x080482cb,0x080482ce} expr=(add[32] (add[32] (add[32] (add[32] v52[32] -4[32]) -8[32]) -4[32]) 2[32]) }
          value = { defs={0x080482c8,0x080482c9,0x080482cb,0x080482ce} expr=4[8] }
          flags = { }
        address = { defs={0x080482c8,0x080482cb,0x080482ce} expr=(add[32] (add[32] (add[32] (add[32] v52[32] -4[32]) -8[32]) -4[32]) 1[32]) }
          value = { defs={0x080482c8,0x080482c9,0x080482cb,0x080482ce} expr=-126[8] }
          flags = { }
        address = { defs={0x080482c8,0x080482cb,0x080482ce} expr=(add[32] (add[32] (add[32] v52[32] -4[32]) -8[32]) -4[32]) }
          value = { defs={0x080482c8,0x080482c9,0x080482cb,0x080482ce} expr=-45[8] }
          flags = { }
        address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 3[32]) }
          value = { defs={0x080482c8} expr=(extract[8] 24[32] 32[32] v53[32]) }
          flags = { }
        address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 2[32]) }
          value = { defs={0x080482c8} expr=(extract[8] 16[32] 24[32] v53[32]) }
          flags = { }
        address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 1[32]) }
          value = { defs={0x080482c8} expr=(extract[8] 8[32] 16[32] v53[32]) }
          flags = { }
        address = { defs={0x080482c8} expr=(add[32] v52[32] -4[32]) }
          value = { defs={0x080482c8} expr=(extract[8] 0[32] 8[32] v53[32]) }
          flags = { }
    init mem:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0<frame_dummy>
    registers:
        ax      = { defs={} expr=v231[32] }
        cx      = { defs={} expr=v232[32] }
        dx      = { defs={} expr=v233[32] }
        bx      = { defs={} expr=v234[32] }
        sp      = { defs={0x080482d3} expr=(add[32] v235[32] -4[32]) }
        bp      = { defs={} expr=v236[32] }
        si      = { defs={} expr=v237[32] }
        di      = { defs={} expr=v238[32] }
        es      = { defs={} expr=v239[16] }
        cs      = { defs={} expr=v240[16] }
        ss      = { defs={} expr=v241[16] }
        ds      = { defs={} expr=v242[16] }
        fs      = { defs={} expr=v243[16] }
        gs      = { defs={} expr=v244[16] }
        cf      = { defs={} expr=v245[1] }
        ?1      = { defs={} expr=v246[1] }
        pf      = { defs={} expr=v247[1] }
        ?3      = { defs={} expr=v248[1] }
        af      = { defs={} expr=v249[1] }
        ?5      = { defs={} expr=v250[1] }
        zf      = { defs={} expr=v251[1] }
        sf      = { defs={} expr=v252[1] }
        tf      = { defs={} expr=v253[1] }
        if      = { defs={} expr=v254[1] }
        df      = { defs={} expr=v255[1] }
        of      = { defs={} expr=v256[1] }
        iopl0   = { defs={} expr=v257[1] }
        iopl1   = { defs={} expr=v258[1] }
        nt      = { defs={} expr=v259[1] }
        ?15     = { defs={} expr=v260[1] }
        rf      = { defs={} expr=v261[1] }
        vm      = { defs={} expr=v262[1] }
        ac      = { defs={} expr=v263[1] }
        vif     = { defs={} expr=v264[1] }
        vip     = { defs={} expr=v265[1] }
        id      = { defs={} expr=v266[1] }
        ?22     = { defs={} expr=v267[1] }
        ?23     = { defs={} expr=v268[1] }
        ?24     = { defs={} expr=v269[1] }
        ?25     = { defs={} expr=v270[1] }
        ?26     = { defs={} expr=v271[1] }
        ?27     = { defs={} expr=v272[1] }
        ?28     = { defs={} expr=v273[1] }
        ?29     = { defs={} expr=v274[1] }
        ?30     = { defs={} expr=v275[1] }
        ?31     = { defs={} expr=v276[1] }
        ip      = { defs={0x080482d3} expr=0x080483d0[32] }
    memory:
        address = { defs={0x080482d3} expr=(add[32] (add[32] v235[32] -4[32]) 3[32]) }
          value = { defs={0x080482d3} expr=8[8] }
          flags = { }
        address = { defs={0x080482d3} expr=(add[32] (add[32] v235[32] -4[32]) 2[32]) }
          value = { defs={0x080482d3} expr=4[8] }
          flags = { }
        address = { defs={0x080482d3} expr=(add[32] (add[32] v235[32] -4[32]) 1[32]) }
          value = { defs={0x080482d3} expr=-126[8] }
          flags = { }
        address = { defs={0x080482d3} expr=(add[32] v235[32] -4[32]) }
          value = { defs={0x080482d3} expr=-40[8] }
          flags = { }
    init mem:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580<__do_global_ctors_aux>
    registers:
        ax      = { defs={} expr=v342[32] }
        cx      = { defs={} expr=v343[32] }
        dx      = { defs={} expr=v344[32] }
        bx      = { defs={} expr=v345[32] }
        sp      = { defs={0x080482d8} expr=(add[32] v346[32] -4[32]) }
        bp      = { defs={} expr=v347[32] }
        si      = { defs={} expr=v348[32] }
        di      = { defs={} expr=v349[32] }
        es      = { defs={} expr=v350[16] }
        cs      = { defs={} expr=v351[16] }
        ss      = { defs={} expr=v352[16] }
        ds      = { defs={} expr=v353[16] }
        fs      = { defs={} expr=v354[16] }
        gs      = { defs={} expr=v355[16] }
        cf      = { defs={} expr=v356[1] }
        ?1      = { defs={} expr=v357[1] }
        pf      = { defs={} expr=v358[1] }
        ?3      = { defs={} expr=v359[1] }
        af      = { defs={} expr=v360[1] }
        ?5      = { defs={} expr=v361[1] }
        zf      = { defs={} expr=v362[1] }
        sf      = { defs={} expr=v363[1] }
        tf      = { defs={} expr=v364[1] }
        if      = { defs={} expr=v365[1] }
        df      = { defs={} expr=v366[1] }
        of      = { defs={} expr=v367[1] }
        iopl0   = { defs={} expr=v368[1] }
        iopl1   = { defs={} expr=v369[1] }
        nt      = { defs={} expr=v370[1] }
        ?15     = { defs={} expr=v371[1] }
        rf      = { defs={} expr=v372[1] }
        vm      = { defs={} expr=v373[1] }
        ac      = { defs={} expr=v374[1] }
        vif     = { defs={} expr=v375[1] }
        vip     = { defs={} expr=v376[1] }
        id      = { defs={} expr=v377[1] }
        ?22     = { defs={} expr=v378[1] }
        ?23     = { defs={} expr=v379[1] }
        ?24     = { defs={} expr=v380[1] }
        ?25     = { defs={} expr=v381[1] }
        ?26     = { defs={} expr=v382[1] }
        ?27     = { defs={} expr=v383[1] }
        ?28     = { defs={} expr=v384[1] }
        ?29     = { defs={} expr=v385[1] }
        ?30     = { defs={} expr=v386[1] }
        ?31     = { defs={} expr=v387[1] }
        ip      = { defs={0x080482d8} expr=0x08048580[32] }
    memory:
        address = { defs={0x080482d8} expr=(add[32] (add[32] v346[32] -4[32]) 3[32]) }
          value = { defs={0x080482d8} expr=8[8] }
          flags = { }
        address = { defs={0x080482d8} expr=(add[32] (add[32] v346[32] -4[32]) 2[32]) }
          value = { defs={0x080482d8} expr=4[8] }
          flags = { }
        address = { defs={0x080482d8} expr=(add[32] (add[32] v346[32] -4[32]) 1[32]) }
          value = { defs={0x080482d8} expr=-126[8] }
          flags = { }
        address = { defs={0x080482d8} expr=(add[32] v346[32] -4[32]) }
          value = { defs={0x080482d8} expr=-35[8] }
          flags = { }
    init mem:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
    registers:
        ax      = { defs={} expr=v453[32] }
        cx      = { defs={} expr=v454[32] }
        dx      = { defs={} expr=v455[32] }
        bx      = { defs={} expr=v456[32] }
        sp      = { defs={0x080482dd} expr=(add[32] v458[32] 4[32]) }
        bp      = { defs={0x080482dd} expr=v507[32] }
        si      = { defs={} expr=v459[32] }
        di      = { defs={} expr=v460[32] }
        es      = { defs={} expr=v461[16] }
        cs      = { defs={} expr=v462[16] }
        ss      = { defs={} expr=v463[16] }
        ds      = { defs={} expr=v464[16] }
        fs      = { defs={} expr=v465[16] }
        gs      = { defs={} expr=v466[16] }
        cf      = { defs={} expr=v467[1] }
        ?1      = { defs={} expr=v468[1] }
        pf      = { defs={} expr=v469[1] }
        ?3      = { defs={} expr=v470[1] }
        af      = { defs={} expr=v471[1] }
        ?5      = { defs={} expr=v472[1] }
        zf      = { defs={} expr=v473[1] }
        sf      = { defs={} expr=v474[1] }
        tf      = { defs={} expr=v475[1] }
        if      = { defs={} expr=v476[1] }
        df      = { defs={} expr=v477[1] }
        of      = { defs={} expr=v478[1] }
        iopl0   = { defs={} expr=v479[1] }
        iopl1   = { defs={} expr=v480[1] }
        nt      = { defs={} expr=v481[1] }
        ?15     = { defs={} expr=v482[1] }
        rf      = { defs={} expr=v483[1] }
        vm      = { defs={} expr=v484[1] }
        ac      = { defs={} expr=v485[1] }
        vif     = { defs={} expr=v486[1] }
        vip     = { defs={} expr=v487[1] }
        id      = { defs={} expr=v488[1] }
        ?22     = { defs={} expr=v489[1] }
        ?23     = { defs={} expr=v490[1] }
        ?24     = { defs={} expr=v491[1] }
        ?25     = { defs={} expr=v492[1] }
        ?26     = { defs={} expr=v493[1] }
        ?27     = { defs={} expr=v494[1] }
        ?28     = { defs={} expr=v495[1] }
        ?29     = { defs={} expr=v496[1] }
        ?30     = { defs={} expr=v497[1] }
        ?31     = { defs={} expr=v498[1] }
        ip      = { defs={0x080482dd} expr=0x080482de[32] }
    memory:
    init mem:
        address = { defs={0x080482dd} expr=(add[32] v458[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v507[32]) }
          flags = { rdonly }
        address = { defs={0x080482dd} expr=(add[32] v458[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v507[32]) }
          flags = { rdonly }
        address = { defs={0x080482dd} expr=(add[32] v458[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v507[32]) }
          flags = { rdonly }
        address = { defs={0x080482dd} expr=v458[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v507[32]) }
          flags = { rdonly }
0x80482de:ret    
    registers:
        ax      = { defs={} expr=v453[32] }
        cx      = { defs={} expr=v454[32] }
        dx      = { defs={} expr=v455[32] }
        bx      = { defs={} expr=v456[32] }
        sp      = { defs={0x080482dd,0x080482de} expr=(add[32] (add[32] v458[32] 4[32]) 4[32]) }
        bp      = { defs={0x080482dd} expr=v507[32] }
        si      = { defs={} expr=v459[32] }
        di      = { defs={} expr=v460[32] }
        es      = { defs={} expr=v461[16] }
        cs      = { defs={} expr=v462[16] }
        ss      = { defs={} expr=v463[16] }
        ds      = { defs={} expr=v464[16] }
        fs      = { defs={} expr=v465[16] }
        gs      = { defs={} expr=v466[16] }
        cf      = { defs={} expr=v467[1] }
        ?1      = { defs={} expr=v468[1] }
        pf      = { defs={} expr=v469[1] }
        ?3      = { defs={} expr=v470[1] }
        af      = { defs={} expr=v471[1] }
        ?5      = { defs={} expr=v472[1] }
        zf      = { defs={} expr=v473[1] }
        sf      = { defs={} expr=v474[1] }
        tf      = { defs={} expr=v475[1] }
        if      = { defs={} expr=v476[1] }
        df      = { defs={} expr=v477[1] }
        of      = { defs={} expr=v478[1] }
        iopl0   = { defs={} expr=v479[1] }
        iopl1   = { defs={} expr=v480[1] }
        nt      = { defs={} expr=v481[1] }
        ?15     = { defs={} expr=v482[1] }
        rf      = { defs={} expr=v483[1] }
        vm      = { defs={} expr=v484[1] }
        ac      = { defs={} expr=v485[1] }
        vif     = { defs={} expr=v486[1] }
        vip     = { defs={} expr=v487[1] }
        id      = { defs={} expr=v488[1] }
        ?22     = { defs={} expr=v489[1] }
        ?23     = { defs={} expr=v490[1] }
        ?24     = { defs={} expr=v491[1] }
        ?25     = { defs={} expr=v492[1] }
        ?26     = { defs={} expr=v493[1] }
        ?27     = { defs={} expr=v494[1] }
        ?28     = { defs={} expr=v495[1] }
        ?29     = { defs={} expr=v496[1] }
        ?30     = { defs={} expr=v497[1] }
        ?31     = { defs={} expr=v498[1] }
        ip      = { defs={0x080482de} expr=v526[32] }
    memory:
    init mem:
        address = { defs={0x080482dd} expr=(add[32] (add[32] v458[32] 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v526[32]) }
          flags = { rdonly }
        address = { defs={0x080482dd} expr=(add[32] (add[32] v458[32] 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v526[32]) }
          flags = { rdonly }
        address = { defs={0x080482dd} expr=(add[32] (add[32] v458[32] 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v526[32]) }
          flags = { rdonly }
        address = { defs={0x080482dd} expr=(add[32] v458[32] 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v526[32]) }
          flags = { rdonly }
        address = { defs={0x080482dd} expr=(add[32] v458[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v507[32]) }
          flags = { rdonly }
        address = { defs={0x080482dd} expr=(add[32] v458[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v507[32]) }
          flags = { rdonly }
        address = { defs={0x080482dd} expr=(add[32] v458[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v507[32]) }
          flags = { rdonly }
        address = { defs={0x080482dd} expr=v458[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v507[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4<.got.plt+0x0c>]
    registers:
        ax      = { defs={} expr=v587[32] }
        cx      = { defs={} expr=v588[32] }
        dx      = { defs={} expr=v589[32] }
        bx      = { defs={} expr=v590[32] }
        sp      = { defs={} expr=v591[32] }
        bp      = { defs={} expr=v592[32] }
        si      = { defs={} expr=v593[32] }
        di      = { defs={} expr=v594[32] }
        es      = { defs={} expr=v595[16] }
        cs      = { defs={} expr=v596[16] }
        ss      = { defs={} expr=v597[16] }
        ds      = { defs={} expr=v598[16] }
        fs      = { defs={} expr=v599[16] }
        gs      = { defs={} expr=v600[16] }
        cf      = { defs={} expr=v601[1] }
        ?1      = { defs={} expr=v602[1] }
        pf      = { defs={} expr=v603[1] }
        ?3      = { defs={} expr=v604[1] }
        af      = { defs={} expr=v605[1] }
        ?5      = { defs={} expr=v606[1] }
        zf      = { defs={} expr=v607[1] }
        sf      = { defs={} expr=v608[1] }
        tf      = { defs={} expr=v609[1] }
        if      = { defs={} expr=v610[1] }
        df      = { defs={} expr=v611[1] }
        of      = { defs={} expr=v612[1] }
        iopl0   = { defs={} expr=v613[1] }
        iopl1   = { defs={} expr=v614[1] }
        nt      = { defs={} expr=v615[1] }
        ?15     = { defs={} expr=v616[1] }
        rf      = { defs={} expr=v617[1] }
        vm      = { defs={} expr=v618[1] }
        ac      = { defs={} expr=v619[1] }
        vif     = { defs={} expr=v620[1] }
        vip     = { defs={} expr=v621[1] }
        id      = { defs={} expr=v622[1] }
        ?22     = { defs={} expr=v623[1] }
        ?23     = { defs={} expr=v624[1] }
        ?24     = { defs={} expr=v625[1] }
        ?25     = { defs={} expr=v626[1] }
        ?26     = { defs={} expr=v627[1] }
        ?27     = { defs={} expr=v628[1] }
        ?28     = { defs={} expr=v629[1] }
        ?29     = { defs={} expr=v630[1] }
        ?30     = { defs={} expr=v631[1] }
        ?31     = { defs={} expr=v632[1] }
        ip      = { defs={0x080482f0} expr=v637[32] }
    memory:
    init mem:
        address = { defs={0x080482f0} expr=0x080496d7[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v637[32]) }
          flags = { rdonly }
        address = { defs={0x080482f0} expr=0x080496d6[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v637[32]) }
          flags = { rdonly }
        address = { defs={0x080482f0} expr=0x080496d5[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v637[32]) }
          flags = { rdonly }
        address = { defs={0x080482f0} expr=0x080496d4[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v637[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8<.got.plt+0x10>]
    registers:
        ax      = { defs={} expr=v697[32] }
        cx      = { defs={} expr=v698[32] }
        dx      = { defs={} expr=v699[32] }
        bx      = { defs={} expr=v700[32] }
        sp      = { defs={} expr=v701[32] }
        bp      = { defs={} expr=v702[32] }
        si      = { defs={} expr=v703[32] }
        di      = { defs={} expr=v704[32] }
        es      = { defs={} expr=v705[16] }
        cs      = { defs={} expr=v706[16] }
        ss      = { defs={} expr=v707[16] }
        ds      = { defs={} expr=v708[16] }
        fs      = { defs={} expr=v709[16] }
        gs      = { defs={} expr=v710[16] }
        cf      = { defs={} expr=v711[1] }
        ?1      = { defs={} expr=v712[1] }
        pf      = { defs={} expr=v713[1] }
        ?3      = { defs={} expr=v714[1] }
        af      = { defs={} expr=v715[1] }
        ?5      = { defs={} expr=v716[1] }
        zf      = { defs={} expr=v717[1] }
        sf      = { defs={} expr=v718[1] }
        tf      = { defs={} expr=v719[1] }
        if      = { defs={} expr=v720[1] }
        df      = { defs={} expr=v721[1] }
        of      = { defs={} expr=v722[1] }
        iopl0   = { defs={} expr=v723[1] }
        iopl1   = { defs={} expr=v724[1] }
        nt      = { defs={} expr=v725[1] }
        ?15     = { defs={} expr=v726[1] }
        rf      = { defs={} expr=v727[1] }
        vm      = { defs={} expr=v728[1] }
        ac      = { defs={} expr=v729[1] }
        vif     = { defs={} expr=v730[1] }
        vip     = { defs={} expr=v731[1] }
        id      = { defs={} expr=v732[1] }
        ?22     = { defs={} expr=v733[1] }
        ?23     = { defs={} expr=v734[1] }
        ?24     = { defs={} expr=v735[1] }
        ?25     = { defs={} expr=v736[1] }
        ?26     = { defs={} expr=v737[1] }
        ?27     = { defs={} expr=v738[1] }
        ?28     = { defs={} expr=v739[1] }
        ?29     = { defs={} expr=v740[1] }
        ?30     = { defs={} expr=v741[1] }
        ?31     = { defs={} expr=v742[1] }
        ip      = { defs={0x08048300} expr=v747[32] }
    memory:
    init mem:
        address = { defs={0x08048300} expr=0x080496db[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v747[32]) }
          flags = { rdonly }
        address = { defs={0x08048300} expr=0x080496da[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v747[32]) }
          flags = { rdonly }
        address = { defs={0x08048300} expr=0x080496d9[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v747[32]) }
          flags = { rdonly }
        address = { defs={0x08048300} expr=0x080496d8[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v747[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc<.got.plt+0x14>]
    registers:
        ax      = { defs={} expr=v807[32] }
        cx      = { defs={} expr=v808[32] }
        dx      = { defs={} expr=v809[32] }
        bx      = { defs={} expr=v810[32] }
        sp      = { defs={} expr=v811[32] }
        bp      = { defs={} expr=v812[32] }
        si      = { defs={} expr=v813[32] }
        di      = { defs={} expr=v814[32] }
        es      = { defs={} expr=v815[16] }
        cs      = { defs={} expr=v816[16] }
        ss      = { defs={} expr=v817[16] }
        ds      = { defs={} expr=v818[16] }
        fs      = { defs={} expr=v819[16] }
        gs      = { defs={} expr=v820[16] }
        cf      = { defs={} expr=v821[1] }
        ?1      = { defs={} expr=v822[1] }
        pf      = { defs={} expr=v823[1] }
        ?3      = { defs={} expr=v824[1] }
        af      = { defs={} expr=v825[1] }
        ?5      = { defs={} expr=v826[1] }
        zf      = { defs={} expr=v827[1] }
        sf      = { defs={} expr=v828[1] }
        tf      = { defs={} expr=v829[1] }
        if      = { defs={} expr=v830[1] }
        df      = { defs={} expr=v831[1] }
        of      = { defs={} expr=v832[1] }
        iopl0   = { defs={} expr=v833[1] }
        iopl1   = { defs={} expr=v834[1] }
        nt      = { defs={} expr=v835[1] }
        ?15     = { defs={} expr=v836[1] }
        rf      = { defs={} expr=v837[1] }
        vm      = { defs={} expr=v838[1] }
        ac      = { defs={} expr=v839[1] }
        vif     = { defs={} expr=v840[1] }
        vip     = { defs={} expr=v841[1] }
        id      = { defs={} expr=v842[1] }
        ?22     = { defs={} expr=v843[1] }
        ?23     = { defs={} expr=v844[1] }
        ?24     = { defs={} expr=v845[1] }
        ?25     = { defs={} expr=v846[1] }
        ?26     = { defs={} expr=v847[1] }
        ?27     = { defs={} expr=v848[1] }
        ?28     = { defs={} expr=v849[1] }
        ?29     = { defs={} expr=v850[1] }
        ?30     = { defs={} expr=v851[1] }
        ?31     = { defs={} expr=v852[1] }
        ip      = { defs={0x08048310} expr=v857[32] }
    memory:
    init mem:
        address = { defs={0x08048310} expr=0x080496df[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v857[32]) }
          flags = { rdonly }
        address = { defs={0x08048310} expr=0x080496de[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v857[32]) }
          flags = { rdonly }
        address = { defs={0x08048310} expr=0x080496dd[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v857[32]) }
          flags = { rdonly }
        address = { defs={0x08048310} expr=0x080496dc[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v857[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0<.got.plt+0x18>]
    registers:
        ax      = { defs={} expr=v917[32] }
        cx      = { defs={} expr=v918[32] }
        dx      = { defs={} expr=v919[32] }
        bx      = { defs={} expr=v920[32] }
        sp      = { defs={} expr=v921[32] }
        bp      = { defs={} expr=v922[32] }
        si      = { defs={} expr=v923[32] }
        di      = { defs={} expr=v924[32] }
        es      = { defs={} expr=v925[16] }
        cs      = { defs={} expr=v926[16] }
        ss      = { defs={} expr=v927[16] }
        ds      = { defs={} expr=v928[16] }
        fs      = { defs={} expr=v929[16] }
        gs      = { defs={} expr=v930[16] }
        cf      = { defs={} expr=v931[1] }
        ?1      = { defs={} expr=v932[1] }
        pf      = { defs={} expr=v933[1] }
        ?3      = { defs={} expr=v934[1] }
        af      = { defs={} expr=v935[1] }
        ?5      = { defs={} expr=v936[1] }
        zf      = { defs={} expr=v937[1] }
        sf      = { defs={} expr=v938[1] }
        tf      = { defs={} expr=v939[1] }
        if      = { defs={} expr=v940[1] }
        df      = { defs={} expr=v941[1] }
        of      = { defs={} expr=v942[1] }
        iopl0   = { defs={} expr=v943[1] }
        iopl1   = { defs={} expr=v944[1] }
        nt      = { defs={} expr=v945[1] }
        ?15     = { defs={} expr=v946[1] }
        rf      = { defs={} expr=v947[1] }
        vm      = { defs={} expr=v948[1] }
        ac      = { defs={} expr=v949[1] }
        vif     = { defs={} expr=v950[1] }
        vip     = { defs={} expr=v951[1] }
        id      = { defs={} expr=v952[1] }
        ?22     = { defs={} expr=v953[1] }
        ?23     = { defs={} expr=v954[1] }
        ?24     = { defs={} expr=v955[1] }
        ?25     = { defs={} expr=v956[1] }
        ?26     = { defs={} expr=v957[1] }
        ?27     = { defs={} expr=v958[1] }
        ?28     = { defs={} expr=v959[1] }
        ?29     = { defs={} expr=v960[1] }
        ?30     = { defs={} expr=v961[1] }
        ?31     = { defs={} expr=v962[1] }
        ip      = { defs={0x08048320} expr=v967[32] }
    memory:
    init mem:
        address = { defs={0x08048320} expr=0x080496e3[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v967[32]) }
          flags = { rdonly }
        address = { defs={0x08048320} expr=0x080496e2[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v967[32]) }
          flags = { rdonly }
        address = { defs={0x08048320} expr=0x080496e1[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v967[32]) }
          flags = { rdonly }
        address = { defs={0x08048320} expr=0x080496e0[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v967[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4<.got.plt+0x1c>]
    registers:
        ax      = { defs={} expr=v1027[32] }
        cx      = { defs={} expr=v1028[32] }
        dx      = { defs={} expr=v1029[32] }
        bx      = { defs={} expr=v1030[32] }
        sp      = { defs={} expr=v1031[32] }
        bp      = { defs={} expr=v1032[32] }
        si      = { defs={} expr=v1033[32] }
        di      = { defs={} expr=v1034[32] }
        es      = { defs={} expr=v1035[16] }
        cs      = { defs={} expr=v1036[16] }
        ss      = { defs={} expr=v1037[16] }
        ds      = { defs={} expr=v1038[16] }
        fs      = { defs={} expr=v1039[16] }
        gs      = { defs={} expr=v1040[16] }
        cf      = { defs={} expr=v1041[1] }
        ?1      = { defs={} expr=v1042[1] }
        pf      = { defs={} expr=v1043[1] }
        ?3      = { defs={} expr=v1044[1] }
        af      = { defs={} expr=v1045[1] }
        ?5      = { defs={} expr=v1046[1] }
        zf      = { defs={} expr=v1047[1] }
        sf      = { defs={} expr=v1048[1] }
        tf      = { defs={} expr=v1049[1] }
        if      = { defs={} expr=v1050[1] }
        df      = { defs={} expr=v1051[1] }
        of      = { defs={} expr=v1052[1] }
        iopl0   = { defs={} expr=v1053[1] }
        iopl1   = { defs={} expr=v1054[1] }
        nt      = { defs={} expr=v1055[1] }
        ?15     = { defs={} expr=v1056[1] }
        rf      = { defs={} expr=v1057[1] }
        vm      = { defs={} expr=v1058[1] }
        ac      = { defs={} expr=v1059[1] }
        vif     = { defs={} expr=v1060[1] }
        vip     = { defs={} expr=v1061[1] }
        id      = { defs={} expr=v1062[1] }
        ?22     = { defs={} expr=v1063[1] }
        ?23     = { defs={} expr=v1064[1] }
        ?24     = { defs={} expr=v1065[1] }
        ?25     = { defs={} expr=v1066[1] }
        ?26     = { defs={} expr=v1067[1] }
        ?27     = { defs={} expr=v1068[1] }
        ?28     = { defs={} expr=v1069[1] }
        ?29     = { defs={} expr=v1070[1] }
        ?30     = { defs={} expr=v1071[1] }
        ?31     = { defs={} expr=v1072[1] }
        ip      = { defs={0x08048330} expr=v1077[32] }
    memory:
    init mem:
        address = { defs={0x08048330} expr=0x080496e7[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1077[32]) }
          flags = { rdonly }
        address = { defs={0x08048330} expr=0x080496e6[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1077[32]) }
          flags = { rdonly }
        address = { defs={0x08048330} expr=0x080496e5[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1077[32]) }
          flags = { rdonly }
        address = { defs={0x08048330} expr=0x080496e4[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1077[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
    registers:
        ax      = { defs={} expr=v1137[32] }
        cx      = { defs={} expr=v1138[32] }
        dx      = { defs={} expr=v1139[32] }
        bx      = { defs={} expr=v1140[32] }
        sp      = { defs={} expr=v1141[32] }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={} expr=v1143[32] }
        di      = { defs={} expr=v1144[32] }
        es      = { defs={} expr=v1145[16] }
        cs      = { defs={} expr=v1146[16] }
        ss      = { defs={} expr=v1147[16] }
        ds      = { defs={} expr=v1148[16] }
        fs      = { defs={} expr=v1149[16] }
        gs      = { defs={} expr=v1150[16] }
        cf      = { defs={0x08048340} expr=0[1] }
        ?1      = { defs={} expr=v1152[1] }
        pf      = { defs={0x08048340} expr=1[1] }
        ?3      = { defs={} expr=v1154[1] }
        af      = { defs={0x08048340} expr=v1216[1] }
        ?5      = { defs={} expr=v1156[1] }
        zf      = { defs={0x08048340} expr=1[1] }
        sf      = { defs={0x08048340} expr=0[1] }
        tf      = { defs={} expr=v1159[1] }
        if      = { defs={} expr=v1160[1] }
        df      = { defs={} expr=v1161[1] }
        of      = { defs={0x08048340} expr=0[1] }
        iopl0   = { defs={} expr=v1163[1] }
        iopl1   = { defs={} expr=v1164[1] }
        nt      = { defs={} expr=v1165[1] }
        ?15     = { defs={} expr=v1166[1] }
        rf      = { defs={} expr=v1167[1] }
        vm      = { defs={} expr=v1168[1] }
        ac      = { defs={} expr=v1169[1] }
        vif     = { defs={} expr=v1170[1] }
        vip     = { defs={} expr=v1171[1] }
        id      = { defs={} expr=v1172[1] }
        ?22     = { defs={} expr=v1173[1] }
        ?23     = { defs={} expr=v1174[1] }
        ?24     = { defs={} expr=v1175[1] }
        ?25     = { defs={} expr=v1176[1] }
        ?26     = { defs={} expr=v1177[1] }
        ?27     = { defs={} expr=v1178[1] }
        ?28     = { defs={} expr=v1179[1] }
        ?29     = { defs={} expr=v1180[1] }
        ?30     = { defs={} expr=v1181[1] }
        ?31     = { defs={} expr=v1182[1] }
        ip      = { defs={0x08048340} expr=0x08048342[32] }
    memory:
    init mem:
0x8048342:pop    esi
    registers:
        ax      = { defs={} expr=v1137[32] }
        cx      = { defs={} expr=v1138[32] }
        dx      = { defs={} expr=v1139[32] }
        bx      = { defs={} expr=v1140[32] }
        sp      = { defs={0x08048342} expr=(add[32] v1141[32] 4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v1225[32] }
        di      = { defs={} expr=v1144[32] }
        es      = { defs={} expr=v1145[16] }
        cs      = { defs={} expr=v1146[16] }
        ss      = { defs={} expr=v1147[16] }
        ds      = { defs={} expr=v1148[16] }
        fs      = { defs={} expr=v1149[16] }
        gs      = { defs={} expr=v1150[16] }
        cf      = { defs={0x08048340} expr=0[1] }
        ?1      = { defs={} expr=v1152[1] }
        pf      = { defs={0x08048340} expr=1[1] }
        ?3      = { defs={} expr=v1154[1] }
        af      = { defs={0x08048340} expr=v1216[1] }
        ?5      = { defs={} expr=v1156[1] }
        zf      = { defs={0x08048340} expr=1[1] }
        sf      = { defs={0x08048340} expr=0[1] }
        tf      = { defs={} expr=v1159[1] }
        if      = { defs={} expr=v1160[1] }
        df      = { defs={} expr=v1161[1] }
        of      = { defs={0x08048340} expr=0[1] }
        iopl0   = { defs={} expr=v1163[1] }
        iopl1   = { defs={} expr=v1164[1] }
        nt      = { defs={} expr=v1165[1] }
        ?15     = { defs={} expr=v1166[1] }
        rf      = { defs={} expr=v1167[1] }
        vm      = { defs={} expr=v1168[1] }
        ac      = { defs={} expr=v1169[1] }
        vif     = { defs={} expr=v1170[1] }
        vip     = { defs={} expr=v1171[1] }
        id      = { defs={} expr=v1172[1] }
        ?22     = { defs={} expr=v1173[1] }
        ?23     = { defs={} expr=v1174[1] }
        ?24     = { defs={} expr=v1175[1] }
        ?25     = { defs={} expr=v1176[1] }
        ?26     = { defs={} expr=v1177[1] }
        ?27     = { defs={} expr=v1178[1] }
        ?28     = { defs={} expr=v1179[1] }
        ?29     = { defs={} expr=v1180[1] }
        ?30     = { defs={} expr=v1181[1] }
        ?31     = { defs={} expr=v1182[1] }
        ip      = { defs={0x08048340,0x08048342} expr=0x08048343[32] }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v1141[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=v1141[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1225[32]) }
          flags = { rdonly }
0x8048343:mov    ecx, esp
    registers:
        ax      = { defs={} expr=v1137[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1141[32] 4[32]) }
        dx      = { defs={} expr=v1139[32] }
        bx      = { defs={} expr=v1140[32] }
        sp      = { defs={0x08048342} expr=(add[32] v1141[32] 4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v1225[32] }
        di      = { defs={} expr=v1144[32] }
        es      = { defs={} expr=v1145[16] }
        cs      = { defs={} expr=v1146[16] }
        ss      = { defs={} expr=v1147[16] }
        ds      = { defs={} expr=v1148[16] }
        fs      = { defs={} expr=v1149[16] }
        gs      = { defs={} expr=v1150[16] }
        cf      = { defs={0x08048340} expr=0[1] }
        ?1      = { defs={} expr=v1152[1] }
        pf      = { defs={0x08048340} expr=1[1] }
        ?3      = { defs={} expr=v1154[1] }
        af      = { defs={0x08048340} expr=v1216[1] }
        ?5      = { defs={} expr=v1156[1] }
        zf      = { defs={0x08048340} expr=1[1] }
        sf      = { defs={0x08048340} expr=0[1] }
        tf      = { defs={} expr=v1159[1] }
        if      = { defs={} expr=v1160[1] }
        df      = { defs={} expr=v1161[1] }
        of      = { defs={0x08048340} expr=0[1] }
        iopl0   = { defs={} expr=v1163[1] }
        iopl1   = { defs={} expr=v1164[1] }
        nt      = { defs={} expr=v1165[1] }
        ?15     = { defs={} expr=v1166[1] }
        rf      = { defs={} expr=v1167[1] }
        vm      = { defs={} expr=v1168[1] }
        ac      = { defs={} expr=v1169[1] }
        vif     = { defs={} expr=v1170[1] }
        vip     = { defs={} expr=v1171[1] }
        id      = { defs={} expr=v1172[1] }
        ?22     = { defs={} expr=v1173[1] }
        ?23     = { defs={} expr=v1174[1] }
        ?24     = { defs={} expr=v1175[1] }
        ?25     = { defs={} expr=v1176[1] }
        ?26     = { defs={} expr=v1177[1] }
        ?27     = { defs={} expr=v1178[1] }
        ?28     = { defs={} expr=v1179[1] }
        ?29     = { defs={} expr=v1180[1] }
        ?30     = { defs={} expr=v1181[1] }
        ?31     = { defs={} expr=v1182[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343} expr=0x08048345[32] }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v1141[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=v1141[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1225[32]) }
          flags = { rdonly }
0x8048345:and    esp, 0xf0<-0x10>
    registers:
        ax      = { defs={} expr=v1137[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1141[32] 4[32]) }
        dx      = { defs={} expr=v1139[32] }
        bx      = { defs={} expr=v1140[32] }
        sp      = { defs={0x08048342,0x08048345} expr=(bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v1225[32] }
        di      = { defs={} expr=v1144[32] }
        es      = { defs={} expr=v1145[16] }
        cs      = { defs={} expr=v1146[16] }
        ss      = { defs={} expr=v1147[16] }
        ds      = { defs={} expr=v1148[16] }
        fs      = { defs={} expr=v1149[16] }
        gs      = { defs={} expr=v1150[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v1152[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v1154[1] }
        af      = { defs={0x08048345} expr=v1273[1] }
        ?5      = { defs={} expr=v1156[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v1159[1] }
        if      = { defs={} expr=v1160[1] }
        df      = { defs={} expr=v1161[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v1163[1] }
        iopl1   = { defs={} expr=v1164[1] }
        nt      = { defs={} expr=v1165[1] }
        ?15     = { defs={} expr=v1166[1] }
        rf      = { defs={} expr=v1167[1] }
        vm      = { defs={} expr=v1168[1] }
        ac      = { defs={} expr=v1169[1] }
        vif     = { defs={} expr=v1170[1] }
        vip     = { defs={} expr=v1171[1] }
        id      = { defs={} expr=v1172[1] }
        ?22     = { defs={} expr=v1173[1] }
        ?23     = { defs={} expr=v1174[1] }
        ?24     = { defs={} expr=v1175[1] }
        ?25     = { defs={} expr=v1176[1] }
        ?26     = { defs={} expr=v1177[1] }
        ?27     = { defs={} expr=v1178[1] }
        ?28     = { defs={} expr=v1179[1] }
        ?29     = { defs={} expr=v1180[1] }
        ?30     = { defs={} expr=v1181[1] }
        ?31     = { defs={} expr=v1182[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345} expr=0x08048348[32] }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v1141[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=v1141[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1225[32]) }
          flags = { rdonly }
0x8048348:push   eax
    registers:
        ax      = { defs={} expr=v1137[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1141[32] 4[32]) }
        dx      = { defs={} expr=v1139[32] }
        bx      = { defs={} expr=v1140[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v1225[32] }
        di      = { defs={} expr=v1144[32] }
        es      = { defs={} expr=v1145[16] }
        cs      = { defs={} expr=v1146[16] }
        ss      = { defs={} expr=v1147[16] }
        ds      = { defs={} expr=v1148[16] }
        fs      = { defs={} expr=v1149[16] }
        gs      = { defs={} expr=v1150[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v1152[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v1154[1] }
        af      = { defs={0x08048345} expr=v1273[1] }
        ?5      = { defs={} expr=v1156[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v1159[1] }
        if      = { defs={} expr=v1160[1] }
        df      = { defs={} expr=v1161[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v1163[1] }
        iopl1   = { defs={} expr=v1164[1] }
        nt      = { defs={} expr=v1165[1] }
        ?15     = { defs={} expr=v1166[1] }
        rf      = { defs={} expr=v1167[1] }
        vm      = { defs={} expr=v1168[1] }
        ac      = { defs={} expr=v1169[1] }
        vif     = { defs={} expr=v1170[1] }
        vip     = { defs={} expr=v1171[1] }
        id      = { defs={} expr=v1172[1] }
        ?22     = { defs={} expr=v1173[1] }
        ?23     = { defs={} expr=v1174[1] }
        ?24     = { defs={} expr=v1175[1] }
        ?25     = { defs={} expr=v1176[1] }
        ?26     = { defs={} expr=v1177[1] }
        ?27     = { defs={} expr=v1178[1] }
        ?28     = { defs={} expr=v1179[1] }
        ?29     = { defs={} expr=v1180[1] }
        ?30     = { defs={} expr=v1181[1] }
        ?31     = { defs={} expr=v1182[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348} expr=0x08048349[32] }
    memory:
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 3[32]) }
          value = { defs={0x08048348} expr=(extract[8] 24[32] 32[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 2[32]) }
          value = { defs={0x08048348} expr=(extract[8] 16[32] 24[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 1[32]) }
          value = { defs={0x08048348} expr=(extract[8] 8[32] 16[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=(extract[8] 0[32] 8[32] v1137[32]) }
          flags = { }
    init mem:
        address = { defs={} expr=(add[32] v1141[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=v1141[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1225[32]) }
          flags = { rdonly }
0x8048349:push   esp
    registers:
        ax      = { defs={} expr=v1137[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1141[32] 4[32]) }
        dx      = { defs={} expr=v1139[32] }
        bx      = { defs={} expr=v1140[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v1225[32] }
        di      = { defs={} expr=v1144[32] }
        es      = { defs={} expr=v1145[16] }
        cs      = { defs={} expr=v1146[16] }
        ss      = { defs={} expr=v1147[16] }
        ds      = { defs={} expr=v1148[16] }
        fs      = { defs={} expr=v1149[16] }
        gs      = { defs={} expr=v1150[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v1152[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v1154[1] }
        af      = { defs={0x08048345} expr=v1273[1] }
        ?5      = { defs={} expr=v1156[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v1159[1] }
        if      = { defs={} expr=v1160[1] }
        df      = { defs={} expr=v1161[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v1163[1] }
        iopl1   = { defs={} expr=v1164[1] }
        nt      = { defs={} expr=v1165[1] }
        ?15     = { defs={} expr=v1166[1] }
        rf      = { defs={} expr=v1167[1] }
        vm      = { defs={} expr=v1168[1] }
        ac      = { defs={} expr=v1169[1] }
        vif     = { defs={} expr=v1170[1] }
        vip     = { defs={} expr=v1171[1] }
        id      = { defs={} expr=v1172[1] }
        ?22     = { defs={} expr=v1173[1] }
        ?23     = { defs={} expr=v1174[1] }
        ?24     = { defs={} expr=v1175[1] }
        ?25     = { defs={} expr=v1176[1] }
        ?26     = { defs={} expr=v1177[1] }
        ?27     = { defs={} expr=v1178[1] }
        ?28     = { defs={} expr=v1179[1] }
        ?29     = { defs={} expr=v1180[1] }
        ?30     = { defs={} expr=v1181[1] }
        ?31     = { defs={} expr=v1182[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349} expr=0x0804834a[32] }
    memory:
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 3[32]) }
          value = { defs={0x08048348} expr=(extract[8] 24[32] 32[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 2[32]) }
          value = { defs={0x08048348} expr=(extract[8] 16[32] 24[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 1[32]) }
          value = { defs={0x08048348} expr=(extract[8] 8[32] 16[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=(extract[8] 0[32] 8[32] v1137[32]) }
          flags = { }
    init mem:
        address = { defs={} expr=(add[32] v1141[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=v1141[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1225[32]) }
          flags = { rdonly }
0x804834a:push   edx
    registers:
        ax      = { defs={} expr=v1137[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1141[32] 4[32]) }
        dx      = { defs={} expr=v1139[32] }
        bx      = { defs={} expr=v1140[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v1225[32] }
        di      = { defs={} expr=v1144[32] }
        es      = { defs={} expr=v1145[16] }
        cs      = { defs={} expr=v1146[16] }
        ss      = { defs={} expr=v1147[16] }
        ds      = { defs={} expr=v1148[16] }
        fs      = { defs={} expr=v1149[16] }
        gs      = { defs={} expr=v1150[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v1152[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v1154[1] }
        af      = { defs={0x08048345} expr=v1273[1] }
        ?5      = { defs={} expr=v1156[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v1159[1] }
        if      = { defs={} expr=v1160[1] }
        df      = { defs={} expr=v1161[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v1163[1] }
        iopl1   = { defs={} expr=v1164[1] }
        nt      = { defs={} expr=v1165[1] }
        ?15     = { defs={} expr=v1166[1] }
        rf      = { defs={} expr=v1167[1] }
        vm      = { defs={} expr=v1168[1] }
        ac      = { defs={} expr=v1169[1] }
        vif     = { defs={} expr=v1170[1] }
        vip     = { defs={} expr=v1171[1] }
        id      = { defs={} expr=v1172[1] }
        ?22     = { defs={} expr=v1173[1] }
        ?23     = { defs={} expr=v1174[1] }
        ?24     = { defs={} expr=v1175[1] }
        ?25     = { defs={} expr=v1176[1] }
        ?26     = { defs={} expr=v1177[1] }
        ?27     = { defs={} expr=v1178[1] }
        ?28     = { defs={} expr=v1179[1] }
        ?29     = { defs={} expr=v1180[1] }
        ?30     = { defs={} expr=v1181[1] }
        ?31     = { defs={} expr=v1182[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a} expr=0x0804834b[32] }
    memory:
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 24[32] 32[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 16[32] 24[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 8[32] 16[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 0[32] 8[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 3[32]) }
          value = { defs={0x08048348} expr=(extract[8] 24[32] 32[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 2[32]) }
          value = { defs={0x08048348} expr=(extract[8] 16[32] 24[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 1[32]) }
          value = { defs={0x08048348} expr=(extract[8] 8[32] 16[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=(extract[8] 0[32] 8[32] v1137[32]) }
          flags = { }
    init mem:
        address = { defs={} expr=(add[32] v1141[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=v1141[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1225[32]) }
          flags = { rdonly }
0x804834b:push   0x08048520<__libc_csu_fini>
    registers:
        ax      = { defs={} expr=v1137[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1141[32] 4[32]) }
        dx      = { defs={} expr=v1139[32] }
        bx      = { defs={} expr=v1140[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v1225[32] }
        di      = { defs={} expr=v1144[32] }
        es      = { defs={} expr=v1145[16] }
        cs      = { defs={} expr=v1146[16] }
        ss      = { defs={} expr=v1147[16] }
        ds      = { defs={} expr=v1148[16] }
        fs      = { defs={} expr=v1149[16] }
        gs      = { defs={} expr=v1150[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v1152[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v1154[1] }
        af      = { defs={0x08048345} expr=v1273[1] }
        ?5      = { defs={} expr=v1156[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v1159[1] }
        if      = { defs={} expr=v1160[1] }
        df      = { defs={} expr=v1161[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v1163[1] }
        iopl1   = { defs={} expr=v1164[1] }
        nt      = { defs={} expr=v1165[1] }
        ?15     = { defs={} expr=v1166[1] }
        rf      = { defs={} expr=v1167[1] }
        vm      = { defs={} expr=v1168[1] }
        ac      = { defs={} expr=v1169[1] }
        vif     = { defs={} expr=v1170[1] }
        vip     = { defs={} expr=v1171[1] }
        id      = { defs={} expr=v1172[1] }
        ?22     = { defs={} expr=v1173[1] }
        ?23     = { defs={} expr=v1174[1] }
        ?24     = { defs={} expr=v1175[1] }
        ?25     = { defs={} expr=v1176[1] }
        ?26     = { defs={} expr=v1177[1] }
        ?27     = { defs={} expr=v1178[1] }
        ?28     = { defs={} expr=v1179[1] }
        ?29     = { defs={} expr=v1180[1] }
        ?30     = { defs={} expr=v1181[1] }
        ?31     = { defs={} expr=v1182[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=0x08048350[32] }
    memory:
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x0804834b} expr=8[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x0804834b} expr=4[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x0804834b} expr=-123[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834b} expr=32[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 24[32] 32[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 16[32] 24[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 8[32] 16[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 0[32] 8[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 3[32]) }
          value = { defs={0x08048348} expr=(extract[8] 24[32] 32[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 2[32]) }
          value = { defs={0x08048348} expr=(extract[8] 16[32] 24[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 1[32]) }
          value = { defs={0x08048348} expr=(extract[8] 8[32] 16[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=(extract[8] 0[32] 8[32] v1137[32]) }
          flags = { }
    init mem:
        address = { defs={} expr=(add[32] v1141[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=v1141[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1225[32]) }
          flags = { rdonly }
0x8048350:push   0x080484b0<__libc_csu_init>
    registers:
        ax      = { defs={} expr=v1137[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1141[32] 4[32]) }
        dx      = { defs={} expr=v1139[32] }
        bx      = { defs={} expr=v1140[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v1225[32] }
        di      = { defs={} expr=v1144[32] }
        es      = { defs={} expr=v1145[16] }
        cs      = { defs={} expr=v1146[16] }
        ss      = { defs={} expr=v1147[16] }
        ds      = { defs={} expr=v1148[16] }
        fs      = { defs={} expr=v1149[16] }
        gs      = { defs={} expr=v1150[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v1152[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v1154[1] }
        af      = { defs={0x08048345} expr=v1273[1] }
        ?5      = { defs={} expr=v1156[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v1159[1] }
        if      = { defs={} expr=v1160[1] }
        df      = { defs={} expr=v1161[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v1163[1] }
        iopl1   = { defs={} expr=v1164[1] }
        nt      = { defs={} expr=v1165[1] }
        ?15     = { defs={} expr=v1166[1] }
        rf      = { defs={} expr=v1167[1] }
        vm      = { defs={} expr=v1168[1] }
        ac      = { defs={} expr=v1169[1] }
        vif     = { defs={} expr=v1170[1] }
        vip     = { defs={} expr=v1171[1] }
        id      = { defs={} expr=v1172[1] }
        ?22     = { defs={} expr=v1173[1] }
        ?23     = { defs={} expr=v1174[1] }
        ?24     = { defs={} expr=v1175[1] }
        ?25     = { defs={} expr=v1176[1] }
        ?26     = { defs={} expr=v1177[1] }
        ?27     = { defs={} expr=v1178[1] }
        ?28     = { defs={} expr=v1179[1] }
        ?29     = { defs={} expr=v1180[1] }
        ?30     = { defs={} expr=v1181[1] }
        ?31     = { defs={} expr=v1182[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=0x08048355[32] }
    memory:
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048350} expr=8[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048350} expr=4[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048350} expr=-124[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048350} expr=-80[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x0804834b} expr=8[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x0804834b} expr=4[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x0804834b} expr=-123[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834b} expr=32[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 24[32] 32[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 16[32] 24[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 8[32] 16[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 0[32] 8[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 3[32]) }
          value = { defs={0x08048348} expr=(extract[8] 24[32] 32[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 2[32]) }
          value = { defs={0x08048348} expr=(extract[8] 16[32] 24[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 1[32]) }
          value = { defs={0x08048348} expr=(extract[8] 8[32] 16[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=(extract[8] 0[32] 8[32] v1137[32]) }
          flags = { }
    init mem:
        address = { defs={} expr=(add[32] v1141[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=v1141[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1225[32]) }
          flags = { rdonly }
0x8048355:push   ecx
    registers:
        ax      = { defs={} expr=v1137[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1141[32] 4[32]) }
        dx      = { defs={} expr=v1139[32] }
        bx      = { defs={} expr=v1140[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v1225[32] }
        di      = { defs={} expr=v1144[32] }
        es      = { defs={} expr=v1145[16] }
        cs      = { defs={} expr=v1146[16] }
        ss      = { defs={} expr=v1147[16] }
        ds      = { defs={} expr=v1148[16] }
        fs      = { defs={} expr=v1149[16] }
        gs      = { defs={} expr=v1150[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v1152[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v1154[1] }
        af      = { defs={0x08048345} expr=v1273[1] }
        ?5      = { defs={} expr=v1156[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v1159[1] }
        if      = { defs={} expr=v1160[1] }
        df      = { defs={} expr=v1161[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v1163[1] }
        iopl1   = { defs={} expr=v1164[1] }
        nt      = { defs={} expr=v1165[1] }
        ?15     = { defs={} expr=v1166[1] }
        rf      = { defs={} expr=v1167[1] }
        vm      = { defs={} expr=v1168[1] }
        ac      = { defs={} expr=v1169[1] }
        vif     = { defs={} expr=v1170[1] }
        vip     = { defs={} expr=v1171[1] }
        id      = { defs={} expr=v1172[1] }
        ?22     = { defs={} expr=v1173[1] }
        ?23     = { defs={} expr=v1174[1] }
        ?24     = { defs={} expr=v1175[1] }
        ?25     = { defs={} expr=v1176[1] }
        ?26     = { defs={} expr=v1177[1] }
        ?27     = { defs={} expr=v1178[1] }
        ?28     = { defs={} expr=v1179[1] }
        ?29     = { defs={} expr=v1180[1] }
        ?30     = { defs={} expr=v1181[1] }
        ?31     = { defs={} expr=v1182[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=0x08048356[32] }
    memory:
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 24[32] 32[32] (add[32] v1141[32] 4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 16[32] 24[32] (add[32] v1141[32] 4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 8[32] 16[32] (add[32] v1141[32] 4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 0[32] 8[32] (add[32] v1141[32] 4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048350} expr=8[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048350} expr=4[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048350} expr=-124[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048350} expr=-80[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x0804834b} expr=8[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x0804834b} expr=4[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x0804834b} expr=-123[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834b} expr=32[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 24[32] 32[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 16[32] 24[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 8[32] 16[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 0[32] 8[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 3[32]) }
          value = { defs={0x08048348} expr=(extract[8] 24[32] 32[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 2[32]) }
          value = { defs={0x08048348} expr=(extract[8] 16[32] 24[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 1[32]) }
          value = { defs={0x08048348} expr=(extract[8] 8[32] 16[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=(extract[8] 0[32] 8[32] v1137[32]) }
          flags = { }
    init mem:
        address = { defs={} expr=(add[32] v1141[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=v1141[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1225[32]) }
          flags = { rdonly }
0x8048356:push   esi
    registers:
        ax      = { defs={} expr=v1137[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1141[32] 4[32]) }
        dx      = { defs={} expr=v1139[32] }
        bx      = { defs={} expr=v1140[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v1225[32] }
        di      = { defs={} expr=v1144[32] }
        es      = { defs={} expr=v1145[16] }
        cs      = { defs={} expr=v1146[16] }
        ss      = { defs={} expr=v1147[16] }
        ds      = { defs={} expr=v1148[16] }
        fs      = { defs={} expr=v1149[16] }
        gs      = { defs={} expr=v1150[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v1152[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v1154[1] }
        af      = { defs={0x08048345} expr=v1273[1] }
        ?5      = { defs={} expr=v1156[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v1159[1] }
        if      = { defs={} expr=v1160[1] }
        df      = { defs={} expr=v1161[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v1163[1] }
        iopl1   = { defs={} expr=v1164[1] }
        nt      = { defs={} expr=v1165[1] }
        ?15     = { defs={} expr=v1166[1] }
        rf      = { defs={} expr=v1167[1] }
        vm      = { defs={} expr=v1168[1] }
        ac      = { defs={} expr=v1169[1] }
        vif     = { defs={} expr=v1170[1] }
        vip     = { defs={} expr=v1171[1] }
        id      = { defs={} expr=v1172[1] }
        ?22     = { defs={} expr=v1173[1] }
        ?23     = { defs={} expr=v1174[1] }
        ?24     = { defs={} expr=v1175[1] }
        ?25     = { defs={} expr=v1176[1] }
        ?26     = { defs={} expr=v1177[1] }
        ?27     = { defs={} expr=v1178[1] }
        ?28     = { defs={} expr=v1179[1] }
        ?29     = { defs={} expr=v1180[1] }
        ?30     = { defs={} expr=v1181[1] }
        ?31     = { defs={} expr=v1182[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=0x08048357[32] }
    memory:
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048342,0x08048356} expr=(extract[8] 24[32] 32[32] v1225[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048342,0x08048356} expr=(extract[8] 16[32] 24[32] v1225[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048342,0x08048356} expr=(extract[8] 8[32] 16[32] v1225[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048356} expr=(extract[8] 0[32] 8[32] v1225[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 24[32] 32[32] (add[32] v1141[32] 4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 16[32] 24[32] (add[32] v1141[32] 4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 8[32] 16[32] (add[32] v1141[32] 4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 0[32] 8[32] (add[32] v1141[32] 4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048350} expr=8[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048350} expr=4[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048350} expr=-124[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048350} expr=-80[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x0804834b} expr=8[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x0804834b} expr=4[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x0804834b} expr=-123[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834b} expr=32[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 24[32] 32[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 16[32] 24[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 8[32] 16[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 0[32] 8[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 3[32]) }
          value = { defs={0x08048348} expr=(extract[8] 24[32] 32[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 2[32]) }
          value = { defs={0x08048348} expr=(extract[8] 16[32] 24[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 1[32]) }
          value = { defs={0x08048348} expr=(extract[8] 8[32] 16[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=(extract[8] 0[32] 8[32] v1137[32]) }
          flags = { }
    init mem:
        address = { defs={} expr=(add[32] v1141[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=v1141[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1225[32]) }
          flags = { rdonly }
0x8048357:push   0x08048410<main>
    registers:
        ax      = { defs={} expr=v1137[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1141[32] 4[32]) }
        dx      = { defs={} expr=v1139[32] }
        bx      = { defs={} expr=v1140[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v1225[32] }
        di      = { defs={} expr=v1144[32] }
        es      = { defs={} expr=v1145[16] }
        cs      = { defs={} expr=v1146[16] }
        ss      = { defs={} expr=v1147[16] }
        ds      = { defs={} expr=v1148[16] }
        fs      = { defs={} expr=v1149[16] }
        gs      = { defs={} expr=v1150[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v1152[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v1154[1] }
        af      = { defs={0x08048345} expr=v1273[1] }
        ?5      = { defs={} expr=v1156[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v1159[1] }
        if      = { defs={} expr=v1160[1] }
        df      = { defs={} expr=v1161[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v1163[1] }
        iopl1   = { defs={} expr=v1164[1] }
        nt      = { defs={} expr=v1165[1] }
        ?15     = { defs={} expr=v1166[1] }
        rf      = { defs={} expr=v1167[1] }
        vm      = { defs={} expr=v1168[1] }
        ac      = { defs={} expr=v1169[1] }
        vif     = { defs={} expr=v1170[1] }
        vip     = { defs={} expr=v1171[1] }
        id      = { defs={} expr=v1172[1] }
        ?22     = { defs={} expr=v1173[1] }
        ?23     = { defs={} expr=v1174[1] }
        ?24     = { defs={} expr=v1175[1] }
        ?25     = { defs={} expr=v1176[1] }
        ?26     = { defs={} expr=v1177[1] }
        ?27     = { defs={} expr=v1178[1] }
        ?28     = { defs={} expr=v1179[1] }
        ?29     = { defs={} expr=v1180[1] }
        ?30     = { defs={} expr=v1181[1] }
        ?31     = { defs={} expr=v1182[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=0x0804835c[32] }
    memory:
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048357} expr=8[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048357} expr=4[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048357} expr=-124[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048357} expr=16[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048342,0x08048356} expr=(extract[8] 24[32] 32[32] v1225[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048342,0x08048356} expr=(extract[8] 16[32] 24[32] v1225[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048342,0x08048356} expr=(extract[8] 8[32] 16[32] v1225[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048356} expr=(extract[8] 0[32] 8[32] v1225[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 24[32] 32[32] (add[32] v1141[32] 4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 16[32] 24[32] (add[32] v1141[32] 4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 8[32] 16[32] (add[32] v1141[32] 4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 0[32] 8[32] (add[32] v1141[32] 4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048350} expr=8[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048350} expr=4[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048350} expr=-124[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048350} expr=-80[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x0804834b} expr=8[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x0804834b} expr=4[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x0804834b} expr=-123[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834b} expr=32[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 24[32] 32[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 16[32] 24[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 8[32] 16[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 0[32] 8[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 3[32]) }
          value = { defs={0x08048348} expr=(extract[8] 24[32] 32[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 2[32]) }
          value = { defs={0x08048348} expr=(extract[8] 16[32] 24[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 1[32]) }
          value = { defs={0x08048348} expr=(extract[8] 8[32] 16[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=(extract[8] 0[32] 8[32] v1137[32]) }
          flags = { }
    init mem:
        address = { defs={} expr=(add[32] v1141[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=v1141[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1225[32]) }
          flags = { rdonly }
0x804835c:call   0x08048310<__libc_start_main@plt>
    registers:
        ax      = { defs={} expr=v1137[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1141[32] 4[32]) }
        dx      = { defs={} expr=v1139[32] }
        bx      = { defs={} expr=v1140[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v1225[32] }
        di      = { defs={} expr=v1144[32] }
        es      = { defs={} expr=v1145[16] }
        cs      = { defs={} expr=v1146[16] }
        ss      = { defs={} expr=v1147[16] }
        ds      = { defs={} expr=v1148[16] }
        fs      = { defs={} expr=v1149[16] }
        gs      = { defs={} expr=v1150[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v1152[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v1154[1] }
        af      = { defs={0x08048345} expr=v1273[1] }
        ?5      = { defs={} expr=v1156[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v1159[1] }
        if      = { defs={} expr=v1160[1] }
        df      = { defs={} expr=v1161[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v1163[1] }
        iopl1   = { defs={} expr=v1164[1] }
        nt      = { defs={} expr=v1165[1] }
        ?15     = { defs={} expr=v1166[1] }
        rf      = { defs={} expr=v1167[1] }
        vm      = { defs={} expr=v1168[1] }
        ac      = { defs={} expr=v1169[1] }
        vif     = { defs={} expr=v1170[1] }
        vip     = { defs={} expr=v1171[1] }
        id      = { defs={} expr=v1172[1] }
        ?22     = { defs={} expr=v1173[1] }
        ?23     = { defs={} expr=v1174[1] }
        ?24     = { defs={} expr=v1175[1] }
        ?25     = { defs={} expr=v1176[1] }
        ?26     = { defs={} expr=v1177[1] }
        ?27     = { defs={} expr=v1178[1] }
        ?28     = { defs={} expr=v1179[1] }
        ?29     = { defs={} expr=v1180[1] }
        ?30     = { defs={} expr=v1181[1] }
        ?31     = { defs={} expr=v1182[1] }
        ip      = { defs={0x0804835c} expr=0x08048310[32] }
    memory:
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=8[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=4[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=-125[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=97[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048357} expr=8[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048357} expr=4[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048357} expr=-124[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048357} expr=16[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048342,0x08048356} expr=(extract[8] 24[32] 32[32] v1225[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048342,0x08048356} expr=(extract[8] 16[32] 24[32] v1225[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048342,0x08048356} expr=(extract[8] 8[32] 16[32] v1225[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048356} expr=(extract[8] 0[32] 8[32] v1225[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 24[32] 32[32] (add[32] v1141[32] 4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 16[32] 24[32] (add[32] v1141[32] 4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 8[32] 16[32] (add[32] v1141[32] 4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 0[32] 8[32] (add[32] v1141[32] 4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048350} expr=8[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048350} expr=4[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048350} expr=-124[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048350} expr=-80[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x0804834b} expr=8[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x0804834b} expr=4[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x0804834b} expr=-123[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834b} expr=32[8] }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 24[32] 32[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 16[32] 24[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 8[32] 16[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=(extract[8] 0[32] 8[32] v1139[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32])) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 3[32]) }
          value = { defs={0x08048348} expr=(extract[8] 24[32] 32[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 2[32]) }
          value = { defs={0x08048348} expr=(extract[8] 16[32] 24[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) 1[32]) }
          value = { defs={0x08048348} expr=(extract[8] 8[32] 16[32] v1137[32]) }
          flags = { }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v1141[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=(extract[8] 0[32] 8[32] v1137[32]) }
          flags = { }
    init mem:
        address = { defs={} expr=(add[32] v1141[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1141[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1225[32]) }
          flags = { rdonly }
        address = { defs={} expr=v1141[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1225[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
    registers:
        ax      = { defs={} expr=v1457[32] }
        cx      = { defs={} expr=v1458[32] }
        dx      = { defs={} expr=v1459[32] }
        bx      = { defs={} expr=v1460[32] }
        sp      = { defs={} expr=v1461[32] }
        bp      = { defs={} expr=v1462[32] }
        si      = { defs={} expr=v1463[32] }
        di      = { defs={} expr=v1464[32] }
        es      = { defs={} expr=v1465[16] }
        cs      = { defs={} expr=v1466[16] }
        ss      = { defs={} expr=v1467[16] }
        ds      = { defs={} expr=v1468[16] }
        fs      = { defs={} expr=v1469[16] }
        gs      = { defs={} expr=v1470[16] }
        cf      = { defs={} expr=v1471[1] }
        ?1      = { defs={} expr=v1472[1] }
        pf      = { defs={} expr=v1473[1] }
        ?3      = { defs={} expr=v1474[1] }
        af      = { defs={} expr=v1475[1] }
        ?5      = { defs={} expr=v1476[1] }
        zf      = { defs={} expr=v1477[1] }
        sf      = { defs={} expr=v1478[1] }
        tf      = { defs={} expr=v1479[1] }
        if      = { defs={} expr=v1480[1] }
        df      = { defs={} expr=v1481[1] }
        of      = { defs={} expr=v1482[1] }
        iopl0   = { defs={} expr=v1483[1] }
        iopl1   = { defs={} expr=v1484[1] }
        nt      = { defs={} expr=v1485[1] }
        ?15     = { defs={} expr=v1486[1] }
        rf      = { defs={} expr=v1487[1] }
        vm      = { defs={} expr=v1488[1] }
        ac      = { defs={} expr=v1489[1] }
        vif     = { defs={} expr=v1490[1] }
        vip     = { defs={} expr=v1491[1] }
        id      = { defs={} expr=v1492[1] }
        ?22     = { defs={} expr=v1493[1] }
        ?23     = { defs={} expr=v1494[1] }
        ?24     = { defs={} expr=v1495[1] }
        ?25     = { defs={} expr=v1496[1] }
        ?26     = { defs={} expr=v1497[1] }
        ?27     = { defs={} expr=v1498[1] }
        ?28     = { defs={} expr=v1499[1] }
        ?29     = { defs={} expr=v1500[1] }
        ?30     = { defs={} expr=v1501[1] }
        ?31     = { defs={} expr=v1502[1] }
        ip      = { defs={0x08048361} expr=0x08048361[32] }
    memory:
    init mem:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048364:push   ebp
    registers:
        ax      = { defs={} expr=v1556[32] }
        cx      = { defs={} expr=v1557[32] }
        dx      = { defs={} expr=v1558[32] }
        bx      = { defs={} expr=v1559[32] }
        sp      = { defs={0x08048364} expr=(add[32] v1560[32] -4[32]) }
        bp      = { defs={} expr=v1561[32] }
        si      = { defs={} expr=v1562[32] }
        di      = { defs={} expr=v1563[32] }
        es      = { defs={} expr=v1564[16] }
        cs      = { defs={} expr=v1565[16] }
        ss      = { defs={} expr=v1566[16] }
        ds      = { defs={} expr=v1567[16] }
        fs      = { defs={} expr=v1568[16] }
        gs      = { defs={} expr=v1569[16] }
        cf      = { defs={} expr=v1570[1] }
        ?1      = { defs={} expr=v1571[1] }
        pf      = { defs={} expr=v1572[1] }
        ?3      = { defs={} expr=v1573[1] }
        af      = { defs={} expr=v1574[1] }
        ?5      = { defs={} expr=v1575[1] }
        zf      = { defs={} expr=v1576[1] }
        sf      = { defs={} expr=v1577[1] }
        tf      = { defs={} expr=v1578[1] }
        if      = { defs={} expr=v1579[1] }
        df      = { defs={} expr=v1580[1] }
        of      = { defs={} expr=v1581[1] }
        iopl0   = { defs={} expr=v1582[1] }
        iopl1   = { defs={} expr=v1583[1] }
        nt      = { defs={} expr=v1584[1] }
        ?15     = { defs={} expr=v1585[1] }
        rf      = { defs={} expr=v1586[1] }
        vm      = { defs={} expr=v1587[1] }
        ac      = { defs={} expr=v1588[1] }
        vif     = { defs={} expr=v1589[1] }
        vip     = { defs={} expr=v1590[1] }
        id      = { defs={} expr=v1591[1] }
        ?22     = { defs={} expr=v1592[1] }
        ?23     = { defs={} expr=v1593[1] }
        ?24     = { defs={} expr=v1594[1] }
        ?25     = { defs={} expr=v1595[1] }
        ?26     = { defs={} expr=v1596[1] }
        ?27     = { defs={} expr=v1597[1] }
        ?28     = { defs={} expr=v1598[1] }
        ?29     = { defs={} expr=v1599[1] }
        ?30     = { defs={} expr=v1600[1] }
        ?31     = { defs={} expr=v1601[1] }
        ip      = { defs={0x08048364} expr=0x08048365[32] }
    memory:
        address = { defs={0x08048364} expr=(add[32] (add[32] v1560[32] -4[32]) 3[32]) }
          value = { defs={0x08048364} expr=(extract[8] 24[32] 32[32] v1561[32]) }
          flags = { }
        address = { defs={0x08048364} expr=(add[32] (add[32] v1560[32] -4[32]) 2[32]) }
          value = { defs={0x08048364} expr=(extract[8] 16[32] 24[32] v1561[32]) }
          flags = { }
        address = { defs={0x08048364} expr=(add[32] (add[32] v1560[32] -4[32]) 1[32]) }
          value = { defs={0x08048364} expr=(extract[8] 8[32] 16[32] v1561[32]) }
          flags = { }
        address = { defs={0x08048364} expr=(add[32] v1560[32] -4[32]) }
          value = { defs={0x08048364} expr=(extract[8] 0[32] 8[32] v1561[32]) }
          flags = { }
    init mem:
0x8048365:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v1556[32] }
        cx      = { defs={} expr=v1557[32] }
        dx      = { defs={} expr=v1558[32] }
        bx      = { defs={} expr=v1559[32] }
        sp      = { defs={0x08048364} expr=(add[32] v1560[32] -4[32]) }
        bp      = { defs={0x08048364,0x08048365} expr=(add[32] v1560[32] -4[32]) }
        si      = { defs={} expr=v1562[32] }
        di      = { defs={} expr=v1563[32] }
        es      = { defs={} expr=v1564[16] }
        cs      = { defs={} expr=v1565[16] }
        ss      = { defs={} expr=v1566[16] }
        ds      = { defs={} expr=v1567[16] }
        fs      = { defs={} expr=v1568[16] }
        gs      = { defs={} expr=v1569[16] }
        cf      = { defs={} expr=v1570[1] }
        ?1      = { defs={} expr=v1571[1] }
        pf      = { defs={} expr=v1572[1] }
        ?3      = { defs={} expr=v1573[1] }
        af      = { defs={} expr=v1574[1] }
        ?5      = { defs={} expr=v1575[1] }
        zf      = { defs={} expr=v1576[1] }
        sf      = { defs={} expr=v1577[1] }
        tf      = { defs={} expr=v1578[1] }
        if      = { defs={} expr=v1579[1] }
        df      = { defs={} expr=v1580[1] }
        of      = { defs={} expr=v1581[1] }
        iopl0   = { defs={} expr=v1582[1] }
        iopl1   = { defs={} expr=v1583[1] }
        nt      = { defs={} expr=v1584[1] }
        ?15     = { defs={} expr=v1585[1] }
        rf      = { defs={} expr=v1586[1] }
        vm      = { defs={} expr=v1587[1] }
        ac      = { defs={} expr=v1588[1] }
        vif     = { defs={} expr=v1589[1] }
        vip     = { defs={} expr=v1590[1] }
        id      = { defs={} expr=v1591[1] }
        ?22     = { defs={} expr=v1592[1] }
        ?23     = { defs={} expr=v1593[1] }
        ?24     = { defs={} expr=v1594[1] }
        ?25     = { defs={} expr=v1595[1] }
        ?26     = { defs={} expr=v1596[1] }
        ?27     = { defs={} expr=v1597[1] }
        ?28     = { defs={} expr=v1598[1] }
        ?29     = { defs={} expr=v1599[1] }
        ?30     = { defs={} expr=v1600[1] }
        ?31     = { defs={} expr=v1601[1] }
        ip      = { defs={0x08048364,0x08048365} expr=0x08048367[32] }
    memory:
        address = { defs={0x08048364} expr=(add[32] (add[32] v1560[32] -4[32]) 3[32]) }
          value = { defs={0x08048364} expr=(extract[8] 24[32] 32[32] v1561[32]) }
          flags = { }
        address = { defs={0x08048364} expr=(add[32] (add[32] v1560[32] -4[32]) 2[32]) }
          value = { defs={0x08048364} expr=(extract[8] 16[32] 24[32] v1561[32]) }
          flags = { }
        address = { defs={0x08048364} expr=(add[32] (add[32] v1560[32] -4[32]) 1[32]) }
          value = { defs={0x08048364} expr=(extract[8] 8[32] 16[32] v1561[32]) }
          flags = { }
        address = { defs={0x08048364} expr=(add[32] v1560[32] -4[32]) }
          value = { defs={0x08048364} expr=(extract[8] 0[32] 8[32] v1561[32]) }
          flags = { }
    init mem:
0x8048367:push   ebx
    registers:
        ax      = { defs={} expr=v1556[32] }
        cx      = { defs={} expr=v1557[32] }
        dx      = { defs={} expr=v1558[32] }
        bx      = { defs={} expr=v1559[32] }
        sp      = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] v1560[32] -4[32]) -4[32]) }
        bp      = { defs={0x08048364,0x08048365} expr=(add[32] v1560[32] -4[32]) }
        si      = { defs={} expr=v1562[32] }
        di      = { defs={} expr=v1563[32] }
        es      = { defs={} expr=v1564[16] }
        cs      = { defs={} expr=v1565[16] }
        ss      = { defs={} expr=v1566[16] }
        ds      = { defs={} expr=v1567[16] }
        fs      = { defs={} expr=v1568[16] }
        gs      = { defs={} expr=v1569[16] }
        cf      = { defs={} expr=v1570[1] }
        ?1      = { defs={} expr=v1571[1] }
        pf      = { defs={} expr=v1572[1] }
        ?3      = { defs={} expr=v1573[1] }
        af      = { defs={} expr=v1574[1] }
        ?5      = { defs={} expr=v1575[1] }
        zf      = { defs={} expr=v1576[1] }
        sf      = { defs={} expr=v1577[1] }
        tf      = { defs={} expr=v1578[1] }
        if      = { defs={} expr=v1579[1] }
        df      = { defs={} expr=v1580[1] }
        of      = { defs={} expr=v1581[1] }
        iopl0   = { defs={} expr=v1582[1] }
        iopl1   = { defs={} expr=v1583[1] }
        nt      = { defs={} expr=v1584[1] }
        ?15     = { defs={} expr=v1585[1] }
        rf      = { defs={} expr=v1586[1] }
        vm      = { defs={} expr=v1587[1] }
        ac      = { defs={} expr=v1588[1] }
        vif     = { defs={} expr=v1589[1] }
        vip     = { defs={} expr=v1590[1] }
        id      = { defs={} expr=v1591[1] }
        ?22     = { defs={} expr=v1592[1] }
        ?23     = { defs={} expr=v1593[1] }
        ?24     = { defs={} expr=v1594[1] }
        ?25     = { defs={} expr=v1595[1] }
        ?26     = { defs={} expr=v1596[1] }
        ?27     = { defs={} expr=v1597[1] }
        ?28     = { defs={} expr=v1598[1] }
        ?29     = { defs={} expr=v1599[1] }
        ?30     = { defs={} expr=v1600[1] }
        ?31     = { defs={} expr=v1601[1] }
        ip      = { defs={0x08048364,0x08048365,0x08048367} expr=0x08048368[32] }
    memory:
        address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048367} expr=(extract[8] 24[32] 32[32] v1559[32]) }
          flags = { }
        address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048367} expr=(extract[8] 16[32] 24[32] v1559[32]) }
          flags = { }
        address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048367} expr=(extract[8] 8[32] 16[32] v1559[32]) }
          flags = { }
        address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] v1560[32] -4[32]) -4[32]) }
          value = { defs={0x08048367} expr=(extract[8] 0[32] 8[32] v1559[32]) }
          flags = { }
        address = { defs={0x08048364} expr=(add[32] (add[32] v1560[32] -4[32]) 3[32]) }
          value = { defs={0x08048364} expr=(extract[8] 24[32] 32[32] v1561[32]) }
          flags = { }
        address = { defs={0x08048364} expr=(add[32] (add[32] v1560[32] -4[32]) 2[32]) }
          value = { defs={0x08048364} expr=(extract[8] 16[32] 24[32] v1561[32]) }
          flags = { }
        address = { defs={0x08048364} expr=(add[32] (add[32] v1560[32] -4[32]) 1[32]) }
          value = { defs={0x08048364} expr=(extract[8] 8[32] 16[32] v1561[32]) }
          flags = { }
        address = { defs={0x08048364} expr=(add[32] v1560[32] -4[32]) }
          value = { defs={0x08048364} expr=(extract[8] 0[32] 8[32] v1561[32]) }
          flags = { }
    init mem:
0x8048368:push   ecx
    registers:
        ax      = { defs={} expr=v1556[32] }
        cx      = { defs={} expr=v1557[32] }
        dx      = { defs={} expr=v1558[32] }
        bx      = { defs={} expr=v1559[32] }
        sp      = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048364,0x08048365} expr=(add[32] v1560[32] -4[32]) }
        si      = { defs={} expr=v1562[32] }
        di      = { defs={} expr=v1563[32] }
        es      = { defs={} expr=v1564[16] }
        cs      = { defs={} expr=v1565[16] }
        ss      = { defs={} expr=v1566[16] }
        ds      = { defs={} expr=v1567[16] }
        fs      = { defs={} expr=v1568[16] }
        gs      = { defs={} expr=v1569[16] }
        cf      = { defs={} expr=v1570[1] }
        ?1      = { defs={} expr=v1571[1] }
        pf      = { defs={} expr=v1572[1] }
        ?3      = { defs={} expr=v1573[1] }
        af      = { defs={} expr=v1574[1] }
        ?5      = { defs={} expr=v1575[1] }
        zf      = { defs={} expr=v1576[1] }
        sf      = { defs={} expr=v1577[1] }
        tf      = { defs={} expr=v1578[1] }
        if      = { defs={} expr=v1579[1] }
        df      = { defs={} expr=v1580[1] }
        of      = { defs={} expr=v1581[1] }
        iopl0   = { defs={} expr=v1582[1] }
        iopl1   = { defs={} expr=v1583[1] }
        nt      = { defs={} expr=v1584[1] }
        ?15     = { defs={} expr=v1585[1] }
        rf      = { defs={} expr=v1586[1] }
        vm      = { defs={} expr=v1587[1] }
        ac      = { defs={} expr=v1588[1] }
        vif     = { defs={} expr=v1589[1] }
        vip     = { defs={} expr=v1590[1] }
        id      = { defs={} expr=v1591[1] }
        ?22     = { defs={} expr=v1592[1] }
        ?23     = { defs={} expr=v1593[1] }
        ?24     = { defs={} expr=v1594[1] }
        ?25     = { defs={} expr=v1595[1] }
        ?26     = { defs={} expr=v1596[1] }
        ?27     = { defs={} expr=v1597[1] }
        ?28     = { defs={} expr=v1598[1] }
        ?29     = { defs={} expr=v1599[1] }
        ?30     = { defs={} expr=v1600[1] }
        ?31     = { defs={} expr=v1601[1] }
        ip      = { defs={0x08048364,0x08048365,0x08048367,0x08048368} expr=0x08048369[32] }
    memory:
        address = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048368} expr=(extract[8] 24[32] 32[32] v1557[32]) }
          flags = { }
        address = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048368} expr=(extract[8] 16[32] 24[32] v1557[32]) }
          flags = { }
        address = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048368} expr=(extract[8] 8[32] 16[32] v1557[32]) }
          flags = { }
        address = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048368} expr=(extract[8] 0[32] 8[32] v1557[32]) }
          flags = { }
        address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048367} expr=(extract[8] 24[32] 32[32] v1559[32]) }
          flags = { }
        address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048367} expr=(extract[8] 16[32] 24[32] v1559[32]) }
          flags = { }
        address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048367} expr=(extract[8] 8[32] 16[32] v1559[32]) }
          flags = { }
        address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] v1560[32] -4[32]) -4[32]) }
          value = { defs={0x08048367} expr=(extract[8] 0[32] 8[32] v1559[32]) }
          flags = { }
        address = { defs={0x08048364} expr=(add[32] (add[32] v1560[32] -4[32]) 3[32]) }
          value = { defs={0x08048364} expr=(extract[8] 24[32] 32[32] v1561[32]) }
          flags = { }
        address = { defs={0x08048364} expr=(add[32] (add[32] v1560[32] -4[32]) 2[32]) }
          value = { defs={0x08048364} expr=(extract[8] 16[32] 24[32] v1561[32]) }
          flags = { }
        address = { defs={0x08048364} expr=(add[32] (add[32] v1560[32] -4[32]) 1[32]) }
          value = { defs={0x08048364} expr=(extract[8] 8[32] 16[32] v1561[32]) }
          flags = { }
        address = { defs={0x08048364} expr=(add[32] v1560[32] -4[32]) }
          value = { defs={0x08048364} expr=(extract[8] 0[32] 8[32] v1561[32]) }
          flags = { }
    init mem:
0x8048369:call   0x0804836e<<Insn>>
    registers:
        ax      = { defs={} expr=v1556[32] }
        cx      = { defs={} expr=v1557[32] }
        dx      = { defs={} expr=v1558[32] }
        bx      = { defs={} expr=v1559[32] }
        sp      = { defs={0x08048364,0x08048367,0x08048368,0x08048369} expr=(add[32] (add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048364,0x08048365} expr=(add[32] v1560[32] -4[32]) }
        si      = { defs={} expr=v1562[32] }
        di      = { defs={} expr=v1563[32] }
        es      = { defs={} expr=v1564[16] }
        cs      = { defs={} expr=v1565[16] }
        ss      = { defs={} expr=v1566[16] }
        ds      = { defs={} expr=v1567[16] }
        fs      = { defs={} expr=v1568[16] }
        gs      = { defs={} expr=v1569[16] }
        cf      = { defs={} expr=v1570[1] }
        ?1      = { defs={} expr=v1571[1] }
        pf      = { defs={} expr=v1572[1] }
        ?3      = { defs={} expr=v1573[1] }
        af      = { defs={} expr=v1574[1] }
        ?5      = { defs={} expr=v1575[1] }
        zf      = { defs={} expr=v1576[1] }
        sf      = { defs={} expr=v1577[1] }
        tf      = { defs={} expr=v1578[1] }
        if      = { defs={} expr=v1579[1] }
        df      = { defs={} expr=v1580[1] }
        of      = { defs={} expr=v1581[1] }
        iopl0   = { defs={} expr=v1582[1] }
        iopl1   = { defs={} expr=v1583[1] }
        nt      = { defs={} expr=v1584[1] }
        ?15     = { defs={} expr=v1585[1] }
        rf      = { defs={} expr=v1586[1] }
        vm      = { defs={} expr=v1587[1] }
        ac      = { defs={} expr=v1588[1] }
        vif     = { defs={} expr=v1589[1] }
        vip     = { defs={} expr=v1590[1] }
        id      = { defs={} expr=v1591[1] }
        ?22     = { defs={} expr=v1592[1] }
        ?23     = { defs={} expr=v1593[1] }
        ?24     = { defs={} expr=v1594[1] }
        ?25     = { defs={} expr=v1595[1] }
        ?26     = { defs={} expr=v1596[1] }
        ?27     = { defs={} expr=v1597[1] }
        ?28     = { defs={} expr=v1598[1] }
        ?29     = { defs={} expr=v1599[1] }
        ?30     = { defs={} expr=v1600[1] }
        ?31     = { defs={} expr=v1601[1] }
        ip      = { defs={0x08048369} expr=0x0804836e[32] }
    memory:
        address = { defs={0x08048364,0x08048367,0x08048368,0x08048369} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048364,0x08048365,0x08048367,0x08048368,0x08048369} expr=8[8] }
          flags = { }
        address = { defs={0x08048364,0x08048367,0x08048368,0x08048369} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048364,0x08048365,0x08048367,0x08048368,0x08048369} expr=4[8] }
          flags = { }
        address = { defs={0x08048364,0x08048367,0x08048368,0x08048369} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048364,0x08048365,0x08048367,0x08048368,0x08048369} expr=-125[8] }
          flags = { }
        address = { defs={0x08048364,0x08048367,0x08048368,0x08048369} expr=(add[32] (add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048364,0x08048365,0x08048367,0x08048368,0x08048369} expr=110[8] }
          flags = { }
        address = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048368} expr=(extract[8] 24[32] 32[32] v1557[32]) }
          flags = { }
        address = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048368} expr=(extract[8] 16[32] 24[32] v1557[32]) }
          flags = { }
        address = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048368} expr=(extract[8] 8[32] 16[32] v1557[32]) }
          flags = { }
        address = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048368} expr=(extract[8] 0[32] 8[32] v1557[32]) }
          flags = { }
        address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048367} expr=(extract[8] 24[32] 32[32] v1559[32]) }
          flags = { }
        address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048367} expr=(extract[8] 16[32] 24[32] v1559[32]) }
          flags = { }
        address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] (add[32] v1560[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048367} expr=(extract[8] 8[32] 16[32] v1559[32]) }
          flags = { }
        address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] v1560[32] -4[32]) -4[32]) }
          value = { defs={0x08048367} expr=(extract[8] 0[32] 8[32] v1559[32]) }
          flags = { }
        address = { defs={0x08048364} expr=(add[32] (add[32] v1560[32] -4[32]) 3[32]) }
          value = { defs={0x08048364} expr=(extract[8] 24[32] 32[32] v1561[32]) }
          flags = { }
        address = { defs={0x08048364} expr=(add[32] (add[32] v1560[32] -4[32]) 2[32]) }
          value = { defs={0x08048364} expr=(extract[8] 16[32] 24[32] v1561[32]) }
          flags = { }
        address = { defs={0x08048364} expr=(add[32] (add[32] v1560[32] -4[32]) 1[32]) }
          value = { defs={0x08048364} expr=(extract[8] 8[32] 16[32] v1561[32]) }
          flags = { }
        address = { defs={0x08048364} expr=(add[32] v1560[32] -4[32]) }
          value = { defs={0x08048364} expr=(extract[8] 0[32] 8[32] v1561[32]) }
          flags = { }
    init mem:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
    registers:
        ax      = { defs={} expr=v1717[32] }
        cx      = { defs={} expr=v1718[32] }
        dx      = { defs={} expr=v1719[32] }
        bx      = { defs={0x0804836e} expr=v1770[32] }
        sp      = { defs={0x0804836e} expr=(add[32] v1721[32] 4[32]) }
        bp      = { defs={} expr=v1722[32] }
        si      = { defs={} expr=v1723[32] }
        di      = { defs={} expr=v1724[32] }
        es      = { defs={} expr=v1725[16] }
        cs      = { defs={} expr=v1726[16] }
        ss      = { defs={} expr=v1727[16] }
        ds      = { defs={} expr=v1728[16] }
        fs      = { defs={} expr=v1729[16] }
        gs      = { defs={} expr=v1730[16] }
        cf      = { defs={} expr=v1731[1] }
        ?1      = { defs={} expr=v1732[1] }
        pf      = { defs={} expr=v1733[1] }
        ?3      = { defs={} expr=v1734[1] }
        af      = { defs={} expr=v1735[1] }
        ?5      = { defs={} expr=v1736[1] }
        zf      = { defs={} expr=v1737[1] }
        sf      = { defs={} expr=v1738[1] }
        tf      = { defs={} expr=v1739[1] }
        if      = { defs={} expr=v1740[1] }
        df      = { defs={} expr=v1741[1] }
        of      = { defs={} expr=v1742[1] }
        iopl0   = { defs={} expr=v1743[1] }
        iopl1   = { defs={} expr=v1744[1] }
        nt      = { defs={} expr=v1745[1] }
        ?15     = { defs={} expr=v1746[1] }
        rf      = { defs={} expr=v1747[1] }
        vm      = { defs={} expr=v1748[1] }
        ac      = { defs={} expr=v1749[1] }
        vif     = { defs={} expr=v1750[1] }
        vip     = { defs={} expr=v1751[1] }
        id      = { defs={} expr=v1752[1] }
        ?22     = { defs={} expr=v1753[1] }
        ?23     = { defs={} expr=v1754[1] }
        ?24     = { defs={} expr=v1755[1] }
        ?25     = { defs={} expr=v1756[1] }
        ?26     = { defs={} expr=v1757[1] }
        ?27     = { defs={} expr=v1758[1] }
        ?28     = { defs={} expr=v1759[1] }
        ?29     = { defs={} expr=v1760[1] }
        ?30     = { defs={} expr=v1761[1] }
        ?31     = { defs={} expr=v1762[1] }
        ip      = { defs={0x0804836e} expr=0x0804836f[32] }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v1721[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1770[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1721[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1770[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1721[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1770[32]) }
          flags = { rdonly }
        address = { defs={} expr=v1721[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1770[32]) }
          flags = { rdonly }
0x804836f:add    ebx, 0x0000135a
    registers:
        ax      = { defs={} expr=v1717[32] }
        cx      = { defs={} expr=v1718[32] }
        dx      = { defs={} expr=v1719[32] }
        bx      = { defs={0x0804836e,0x0804836f} expr=(add[32] v1770[32] 4954[32]) }
        sp      = { defs={0x0804836e} expr=(add[32] v1721[32] 4[32]) }
        bp      = { defs={} expr=v1722[32] }
        si      = { defs={} expr=v1723[32] }
        di      = { defs={} expr=v1724[32] }
        es      = { defs={} expr=v1725[16] }
        cs      = { defs={} expr=v1726[16] }
        ss      = { defs={} expr=v1727[16] }
        ds      = { defs={} expr=v1728[16] }
        fs      = { defs={} expr=v1729[16] }
        gs      = { defs={} expr=v1730[16] }
        cf      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1770[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v1770[32]) 4954[33]))))) }
        ?1      = { defs={} expr=v1732[1] }
        pf      = { defs={0x0804836e,0x0804836f} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1770[32] 4954[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1770[32] 4954[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1770[32] 4954[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1770[32] 4954[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1770[32] 4954[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1770[32] 4954[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1770[32] 4954[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1770[32] 4954[32]))))))) }
        ?3      = { defs={} expr=v1734[1] }
        af      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1770[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v1770[32]) 4954[33]))))) }
        ?5      = { defs={} expr=v1736[1] }
        zf      = { defs={0x0804836e,0x0804836f} expr=(zerop[1] (add[32] v1770[32] 4954[32])) }
        sf      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 31[32] 32[32] (add[32] v1770[32] 4954[32])) }
        tf      = { defs={} expr=v1739[1] }
        if      = { defs={} expr=v1740[1] }
        df      = { defs={} expr=v1741[1] }
        of      = { defs={0x0804836e,0x0804836f} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1770[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v1770[32]) 4954[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1770[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v1770[32]) 4954[33])))))) }
        iopl0   = { defs={} expr=v1743[1] }
        iopl1   = { defs={} expr=v1744[1] }
        nt      = { defs={} expr=v1745[1] }
        ?15     = { defs={} expr=v1746[1] }
        rf      = { defs={} expr=v1747[1] }
        vm      = { defs={} expr=v1748[1] }
        ac      = { defs={} expr=v1749[1] }
        vif     = { defs={} expr=v1750[1] }
        vip     = { defs={} expr=v1751[1] }
        id      = { defs={} expr=v1752[1] }
        ?22     = { defs={} expr=v1753[1] }
        ?23     = { defs={} expr=v1754[1] }
        ?24     = { defs={} expr=v1755[1] }
        ?25     = { defs={} expr=v1756[1] }
        ?26     = { defs={} expr=v1757[1] }
        ?27     = { defs={} expr=v1758[1] }
        ?28     = { defs={} expr=v1759[1] }
        ?29     = { defs={} expr=v1760[1] }
        ?30     = { defs={} expr=v1761[1] }
        ?31     = { defs={} expr=v1762[1] }
        ip      = { defs={0x0804836e,0x0804836f} expr=0x08048375[32] }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v1721[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1770[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1721[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1770[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1721[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1770[32]) }
          flags = { rdonly }
        address = { defs={} expr=v1721[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1770[32]) }
          flags = { rdonly }
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
    registers:
        ax      = { defs={} expr=v1717[32] }
        cx      = { defs={} expr=v1718[32] }
        dx      = { defs={0x08048375} expr=v1835[32] }
        bx      = { defs={0x0804836e,0x0804836f} expr=(add[32] v1770[32] 4954[32]) }
        sp      = { defs={0x0804836e} expr=(add[32] v1721[32] 4[32]) }
        bp      = { defs={} expr=v1722[32] }
        si      = { defs={} expr=v1723[32] }
        di      = { defs={} expr=v1724[32] }
        es      = { defs={} expr=v1725[16] }
        cs      = { defs={} expr=v1726[16] }
        ss      = { defs={} expr=v1727[16] }
        ds      = { defs={} expr=v1728[16] }
        fs      = { defs={} expr=v1729[16] }
        gs      = { defs={} expr=v1730[16] }
        cf      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1770[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v1770[32]) 4954[33]))))) }
        ?1      = { defs={} expr=v1732[1] }
        pf      = { defs={0x0804836e,0x0804836f} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1770[32] 4954[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1770[32] 4954[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1770[32] 4954[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1770[32] 4954[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1770[32] 4954[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1770[32] 4954[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1770[32] 4954[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1770[32] 4954[32]))))))) }
        ?3      = { defs={} expr=v1734[1] }
        af      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1770[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v1770[32]) 4954[33]))))) }
        ?5      = { defs={} expr=v1736[1] }
        zf      = { defs={0x0804836e,0x0804836f} expr=(zerop[1] (add[32] v1770[32] 4954[32])) }
        sf      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 31[32] 32[32] (add[32] v1770[32] 4954[32])) }
        tf      = { defs={} expr=v1739[1] }
        if      = { defs={} expr=v1740[1] }
        df      = { defs={} expr=v1741[1] }
        of      = { defs={0x0804836e,0x0804836f} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1770[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v1770[32]) 4954[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1770[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v1770[32]) 4954[33])))))) }
        iopl0   = { defs={} expr=v1743[1] }
        iopl1   = { defs={} expr=v1744[1] }
        nt      = { defs={} expr=v1745[1] }
        ?15     = { defs={} expr=v1746[1] }
        rf      = { defs={} expr=v1747[1] }
        vm      = { defs={} expr=v1748[1] }
        ac      = { defs={} expr=v1749[1] }
        vif     = { defs={} expr=v1750[1] }
        vip     = { defs={} expr=v1751[1] }
        id      = { defs={} expr=v1752[1] }
        ?22     = { defs={} expr=v1753[1] }
        ?23     = { defs={} expr=v1754[1] }
        ?24     = { defs={} expr=v1755[1] }
        ?25     = { defs={} expr=v1756[1] }
        ?26     = { defs={} expr=v1757[1] }
        ?27     = { defs={} expr=v1758[1] }
        ?28     = { defs={} expr=v1759[1] }
        ?29     = { defs={} expr=v1760[1] }
        ?30     = { defs={} expr=v1761[1] }
        ?31     = { defs={} expr=v1762[1] }
        ip      = { defs={0x0804836e,0x0804836f,0x08048375} expr=0x0804837b[32] }
    memory:
    init mem:
        address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] (add[32] v1770[32] 4954[32]) -4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1835[32]) }
          flags = { rdonly }
        address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] (add[32] v1770[32] 4954[32]) -4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1835[32]) }
          flags = { rdonly }
        address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] (add[32] v1770[32] 4954[32]) -4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1835[32]) }
          flags = { rdonly }
        address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] v1770[32] 4954[32]) -4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1835[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1721[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1770[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1721[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1770[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1721[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1770[32]) }
          flags = { rdonly }
        address = { defs={} expr=v1721[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1770[32]) }
          flags = { rdonly }
0x804837b:test   edx, edx
    registers:
        ax      = { defs={} expr=v1717[32] }
        cx      = { defs={} expr=v1718[32] }
        dx      = { defs={0x08048375} expr=v1835[32] }
        bx      = { defs={0x0804836e,0x0804836f} expr=(add[32] v1770[32] 4954[32]) }
        sp      = { defs={0x0804836e} expr=(add[32] v1721[32] 4[32]) }
        bp      = { defs={} expr=v1722[32] }
        si      = { defs={} expr=v1723[32] }
        di      = { defs={} expr=v1724[32] }
        es      = { defs={} expr=v1725[16] }
        cs      = { defs={} expr=v1726[16] }
        ss      = { defs={} expr=v1727[16] }
        ds      = { defs={} expr=v1728[16] }
        fs      = { defs={} expr=v1729[16] }
        gs      = { defs={} expr=v1730[16] }
        cf      = { defs={0x0804837b} expr=0[1] }
        ?1      = { defs={} expr=v1732[1] }
        pf      = { defs={0x08048375,0x0804837b} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1835[32] v1835[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1835[32] v1835[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1835[32] v1835[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1835[32] v1835[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1835[32] v1835[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1835[32] v1835[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1835[32] v1835[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1835[32] v1835[32]))))))) }
        ?3      = { defs={} expr=v1734[1] }
        af      = { defs={0x0804837b} expr=v1878[1] }
        ?5      = { defs={} expr=v1736[1] }
        zf      = { defs={0x08048375,0x0804837b} expr=(zerop[1] (bv-and[32] v1835[32] v1835[32])) }
        sf      = { defs={0x08048375,0x0804837b} expr=(extract[1] 31[32] 32[32] (bv-and[32] v1835[32] v1835[32])) }
        tf      = { defs={} expr=v1739[1] }
        if      = { defs={} expr=v1740[1] }
        df      = { defs={} expr=v1741[1] }
        of      = { defs={0x0804837b} expr=0[1] }
        iopl0   = { defs={} expr=v1743[1] }
        iopl1   = { defs={} expr=v1744[1] }
        nt      = { defs={} expr=v1745[1] }
        ?15     = { defs={} expr=v1746[1] }
        rf      = { defs={} expr=v1747[1] }
        vm      = { defs={} expr=v1748[1] }
        ac      = { defs={} expr=v1749[1] }
        vif     = { defs={} expr=v1750[1] }
        vip     = { defs={} expr=v1751[1] }
        id      = { defs={} expr=v1752[1] }
        ?22     = { defs={} expr=v1753[1] }
        ?23     = { defs={} expr=v1754[1] }
        ?24     = { defs={} expr=v1755[1] }
        ?25     = { defs={} expr=v1756[1] }
        ?26     = { defs={} expr=v1757[1] }
        ?27     = { defs={} expr=v1758[1] }
        ?28     = { defs={} expr=v1759[1] }
        ?29     = { defs={} expr=v1760[1] }
        ?30     = { defs={} expr=v1761[1] }
        ?31     = { defs={} expr=v1762[1] }
        ip      = { defs={0x0804836e,0x0804836f,0x08048375,0x0804837b} expr=0x0804837d[32] }
    memory:
    init mem:
        address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] (add[32] v1770[32] 4954[32]) -4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1835[32]) }
          flags = { rdonly }
        address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] (add[32] v1770[32] 4954[32]) -4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1835[32]) }
          flags = { rdonly }
        address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] (add[32] v1770[32] 4954[32]) -4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1835[32]) }
          flags = { rdonly }
        address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] v1770[32] 4954[32]) -4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1835[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1721[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1770[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1721[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1770[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1721[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1770[32]) }
          flags = { rdonly }
        address = { defs={} expr=v1721[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1770[32]) }
          flags = { rdonly }
0x804837d:je     0x08048384<<Insn>>
    registers:
        ax      = { defs={} expr=v1717[32] }
        cx      = { defs={} expr=v1718[32] }
        dx      = { defs={0x08048375} expr=v1835[32] }
        bx      = { defs={0x0804836e,0x0804836f} expr=(add[32] v1770[32] 4954[32]) }
        sp      = { defs={0x0804836e} expr=(add[32] v1721[32] 4[32]) }
        bp      = { defs={} expr=v1722[32] }
        si      = { defs={} expr=v1723[32] }
        di      = { defs={} expr=v1724[32] }
        es      = { defs={} expr=v1725[16] }
        cs      = { defs={} expr=v1726[16] }
        ss      = { defs={} expr=v1727[16] }
        ds      = { defs={} expr=v1728[16] }
        fs      = { defs={} expr=v1729[16] }
        gs      = { defs={} expr=v1730[16] }
        cf      = { defs={0x0804837b} expr=0[1] }
        ?1      = { defs={} expr=v1732[1] }
        pf      = { defs={0x08048375,0x0804837b} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1835[32] v1835[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1835[32] v1835[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1835[32] v1835[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1835[32] v1835[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1835[32] v1835[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1835[32] v1835[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1835[32] v1835[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1835[32] v1835[32]))))))) }
        ?3      = { defs={} expr=v1734[1] }
        af      = { defs={0x0804837b} expr=v1878[1] }
        ?5      = { defs={} expr=v1736[1] }
        zf      = { defs={0x08048375,0x0804837b} expr=(zerop[1] (bv-and[32] v1835[32] v1835[32])) }
        sf      = { defs={0x08048375,0x0804837b} expr=(extract[1] 31[32] 32[32] (bv-and[32] v1835[32] v1835[32])) }
        tf      = { defs={} expr=v1739[1] }
        if      = { defs={} expr=v1740[1] }
        df      = { defs={} expr=v1741[1] }
        of      = { defs={0x0804837b} expr=0[1] }
        iopl0   = { defs={} expr=v1743[1] }
        iopl1   = { defs={} expr=v1744[1] }
        nt      = { defs={} expr=v1745[1] }
        ?15     = { defs={} expr=v1746[1] }
        rf      = { defs={} expr=v1747[1] }
        vm      = { defs={} expr=v1748[1] }
        ac      = { defs={} expr=v1749[1] }
        vif     = { defs={} expr=v1750[1] }
        vip     = { defs={} expr=v1751[1] }
        id      = { defs={} expr=v1752[1] }
        ?22     = { defs={} expr=v1753[1] }
        ?23     = { defs={} expr=v1754[1] }
        ?24     = { defs={} expr=v1755[1] }
        ?25     = { defs={} expr=v1756[1] }
        ?26     = { defs={} expr=v1757[1] }
        ?27     = { defs={} expr=v1758[1] }
        ?28     = { defs={} expr=v1759[1] }
        ?29     = { defs={} expr=v1760[1] }
        ?30     = { defs={} expr=v1761[1] }
        ?31     = { defs={} expr=v1762[1] }
        ip      = { defs={0x0804836e,0x0804836f,0x08048375,0x0804837b,0x0804837d} expr=(ite[32] (zerop[1] (bv-and[32] v1835[32] v1835[32])) 0x08048384[32] 0x0804837f[32]) }
    memory:
    init mem:
        address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] (add[32] v1770[32] 4954[32]) -4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1835[32]) }
          flags = { rdonly }
        address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] (add[32] v1770[32] 4954[32]) -4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1835[32]) }
          flags = { rdonly }
        address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] (add[32] v1770[32] 4954[32]) -4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1835[32]) }
          flags = { rdonly }
        address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] v1770[32] 4954[32]) -4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1835[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1721[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v1770[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1721[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v1770[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v1721[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v1770[32]) }
          flags = { rdonly }
        address = { defs={} expr=v1721[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v1770[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330<__gmon_start__@plt>
    registers:
        ax      = { defs={} expr=v1936[32] }
        cx      = { defs={} expr=v1937[32] }
        dx      = { defs={} expr=v1938[32] }
        bx      = { defs={} expr=v1939[32] }
        sp      = { defs={0x0804837f} expr=(add[32] v1940[32] -4[32]) }
        bp      = { defs={} expr=v1941[32] }
        si      = { defs={} expr=v1942[32] }
        di      = { defs={} expr=v1943[32] }
        es      = { defs={} expr=v1944[16] }
        cs      = { defs={} expr=v1945[16] }
        ss      = { defs={} expr=v1946[16] }
        ds      = { defs={} expr=v1947[16] }
        fs      = { defs={} expr=v1948[16] }
        gs      = { defs={} expr=v1949[16] }
        cf      = { defs={} expr=v1950[1] }
        ?1      = { defs={} expr=v1951[1] }
        pf      = { defs={} expr=v1952[1] }
        ?3      = { defs={} expr=v1953[1] }
        af      = { defs={} expr=v1954[1] }
        ?5      = { defs={} expr=v1955[1] }
        zf      = { defs={} expr=v1956[1] }
        sf      = { defs={} expr=v1957[1] }
        tf      = { defs={} expr=v1958[1] }
        if      = { defs={} expr=v1959[1] }
        df      = { defs={} expr=v1960[1] }
        of      = { defs={} expr=v1961[1] }
        iopl0   = { defs={} expr=v1962[1] }
        iopl1   = { defs={} expr=v1963[1] }
        nt      = { defs={} expr=v1964[1] }
        ?15     = { defs={} expr=v1965[1] }
        rf      = { defs={} expr=v1966[1] }
        vm      = { defs={} expr=v1967[1] }
        ac      = { defs={} expr=v1968[1] }
        vif     = { defs={} expr=v1969[1] }
        vip     = { defs={} expr=v1970[1] }
        id      = { defs={} expr=v1971[1] }
        ?22     = { defs={} expr=v1972[1] }
        ?23     = { defs={} expr=v1973[1] }
        ?24     = { defs={} expr=v1974[1] }
        ?25     = { defs={} expr=v1975[1] }
        ?26     = { defs={} expr=v1976[1] }
        ?27     = { defs={} expr=v1977[1] }
        ?28     = { defs={} expr=v1978[1] }
        ?29     = { defs={} expr=v1979[1] }
        ?30     = { defs={} expr=v1980[1] }
        ?31     = { defs={} expr=v1981[1] }
        ip      = { defs={0x0804837f} expr=0x08048330[32] }
    memory:
        address = { defs={0x0804837f} expr=(add[32] (add[32] v1940[32] -4[32]) 3[32]) }
          value = { defs={0x0804837f} expr=8[8] }
          flags = { }
        address = { defs={0x0804837f} expr=(add[32] (add[32] v1940[32] -4[32]) 2[32]) }
          value = { defs={0x0804837f} expr=4[8] }
          flags = { }
        address = { defs={0x0804837f} expr=(add[32] (add[32] v1940[32] -4[32]) 1[32]) }
          value = { defs={0x0804837f} expr=-125[8] }
          flags = { }
        address = { defs={0x0804837f} expr=(add[32] v1940[32] -4[32]) }
          value = { defs={0x0804837f} expr=-124[8] }
          flags = { }
    init mem:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
    registers:
        ax      = { defs={0x08048384} expr=v2100[32] }
        cx      = { defs={} expr=v2048[32] }
        dx      = { defs={} expr=v2049[32] }
        bx      = { defs={} expr=v2050[32] }
        sp      = { defs={0x08048384} expr=(add[32] v2051[32] 4[32]) }
        bp      = { defs={} expr=v2052[32] }
        si      = { defs={} expr=v2053[32] }
        di      = { defs={} expr=v2054[32] }
        es      = { defs={} expr=v2055[16] }
        cs      = { defs={} expr=v2056[16] }
        ss      = { defs={} expr=v2057[16] }
        ds      = { defs={} expr=v2058[16] }
        fs      = { defs={} expr=v2059[16] }
        gs      = { defs={} expr=v2060[16] }
        cf      = { defs={} expr=v2061[1] }
        ?1      = { defs={} expr=v2062[1] }
        pf      = { defs={} expr=v2063[1] }
        ?3      = { defs={} expr=v2064[1] }
        af      = { defs={} expr=v2065[1] }
        ?5      = { defs={} expr=v2066[1] }
        zf      = { defs={} expr=v2067[1] }
        sf      = { defs={} expr=v2068[1] }
        tf      = { defs={} expr=v2069[1] }
        if      = { defs={} expr=v2070[1] }
        df      = { defs={} expr=v2071[1] }
        of      = { defs={} expr=v2072[1] }
        iopl0   = { defs={} expr=v2073[1] }
        iopl1   = { defs={} expr=v2074[1] }
        nt      = { defs={} expr=v2075[1] }
        ?15     = { defs={} expr=v2076[1] }
        rf      = { defs={} expr=v2077[1] }
        vm      = { defs={} expr=v2078[1] }
        ac      = { defs={} expr=v2079[1] }
        vif     = { defs={} expr=v2080[1] }
        vip     = { defs={} expr=v2081[1] }
        id      = { defs={} expr=v2082[1] }
        ?22     = { defs={} expr=v2083[1] }
        ?23     = { defs={} expr=v2084[1] }
        ?24     = { defs={} expr=v2085[1] }
        ?25     = { defs={} expr=v2086[1] }
        ?26     = { defs={} expr=v2087[1] }
        ?27     = { defs={} expr=v2088[1] }
        ?28     = { defs={} expr=v2089[1] }
        ?29     = { defs={} expr=v2090[1] }
        ?30     = { defs={} expr=v2091[1] }
        ?31     = { defs={} expr=v2092[1] }
        ip      = { defs={0x08048384} expr=0x08048385[32] }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v2051[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2100[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v2051[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2100[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v2051[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2100[32]) }
          flags = { rdonly }
        address = { defs={} expr=v2051[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2100[32]) }
          flags = { rdonly }
0x8048385:pop    ebx
    registers:
        ax      = { defs={0x08048384} expr=v2100[32] }
        cx      = { defs={} expr=v2048[32] }
        dx      = { defs={} expr=v2049[32] }
        bx      = { defs={0x08048385} expr=v2118[32] }
        sp      = { defs={0x08048384,0x08048385} expr=(add[32] (add[32] v2051[32] 4[32]) 4[32]) }
        bp      = { defs={} expr=v2052[32] }
        si      = { defs={} expr=v2053[32] }
        di      = { defs={} expr=v2054[32] }
        es      = { defs={} expr=v2055[16] }
        cs      = { defs={} expr=v2056[16] }
        ss      = { defs={} expr=v2057[16] }
        ds      = { defs={} expr=v2058[16] }
        fs      = { defs={} expr=v2059[16] }
        gs      = { defs={} expr=v2060[16] }
        cf      = { defs={} expr=v2061[1] }
        ?1      = { defs={} expr=v2062[1] }
        pf      = { defs={} expr=v2063[1] }
        ?3      = { defs={} expr=v2064[1] }
        af      = { defs={} expr=v2065[1] }
        ?5      = { defs={} expr=v2066[1] }
        zf      = { defs={} expr=v2067[1] }
        sf      = { defs={} expr=v2068[1] }
        tf      = { defs={} expr=v2069[1] }
        if      = { defs={} expr=v2070[1] }
        df      = { defs={} expr=v2071[1] }
        of      = { defs={} expr=v2072[1] }
        iopl0   = { defs={} expr=v2073[1] }
        iopl1   = { defs={} expr=v2074[1] }
        nt      = { defs={} expr=v2075[1] }
        ?15     = { defs={} expr=v2076[1] }
        rf      = { defs={} expr=v2077[1] }
        vm      = { defs={} expr=v2078[1] }
        ac      = { defs={} expr=v2079[1] }
        vif     = { defs={} expr=v2080[1] }
        vip     = { defs={} expr=v2081[1] }
        id      = { defs={} expr=v2082[1] }
        ?22     = { defs={} expr=v2083[1] }
        ?23     = { defs={} expr=v2084[1] }
        ?24     = { defs={} expr=v2085[1] }
        ?25     = { defs={} expr=v2086[1] }
        ?26     = { defs={} expr=v2087[1] }
        ?27     = { defs={} expr=v2088[1] }
        ?28     = { defs={} expr=v2089[1] }
        ?29     = { defs={} expr=v2090[1] }
        ?30     = { defs={} expr=v2091[1] }
        ?31     = { defs={} expr=v2092[1] }
        ip      = { defs={0x08048384,0x08048385} expr=0x08048386[32] }
    memory:
    init mem:
        address = { defs={0x08048384} expr=(add[32] (add[32] v2051[32] 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2118[32]) }
          flags = { rdonly }
        address = { defs={0x08048384} expr=(add[32] (add[32] v2051[32] 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2118[32]) }
          flags = { rdonly }
        address = { defs={0x08048384} expr=(add[32] (add[32] v2051[32] 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2118[32]) }
          flags = { rdonly }
        address = { defs={0x08048384} expr=(add[32] v2051[32] 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2118[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v2051[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2100[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v2051[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2100[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v2051[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2100[32]) }
          flags = { rdonly }
        address = { defs={} expr=v2051[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2100[32]) }
          flags = { rdonly }
0x8048386:leave  
    registers:
        ax      = { defs={0x08048384} expr=v2100[32] }
        cx      = { defs={} expr=v2048[32] }
        dx      = { defs={} expr=v2049[32] }
        bx      = { defs={0x08048385} expr=v2118[32] }
        sp      = { defs={0x08048386} expr=(add[32] v2052[32] 4[32]) }
        bp      = { defs={0x08048386} expr=v2137[32] }
        si      = { defs={} expr=v2053[32] }
        di      = { defs={} expr=v2054[32] }
        es      = { defs={} expr=v2055[16] }
        cs      = { defs={} expr=v2056[16] }
        ss      = { defs={} expr=v2057[16] }
        ds      = { defs={} expr=v2058[16] }
        fs      = { defs={} expr=v2059[16] }
        gs      = { defs={} expr=v2060[16] }
        cf      = { defs={} expr=v2061[1] }
        ?1      = { defs={} expr=v2062[1] }
        pf      = { defs={} expr=v2063[1] }
        ?3      = { defs={} expr=v2064[1] }
        af      = { defs={} expr=v2065[1] }
        ?5      = { defs={} expr=v2066[1] }
        zf      = { defs={} expr=v2067[1] }
        sf      = { defs={} expr=v2068[1] }
        tf      = { defs={} expr=v2069[1] }
        if      = { defs={} expr=v2070[1] }
        df      = { defs={} expr=v2071[1] }
        of      = { defs={} expr=v2072[1] }
        iopl0   = { defs={} expr=v2073[1] }
        iopl1   = { defs={} expr=v2074[1] }
        nt      = { defs={} expr=v2075[1] }
        ?15     = { defs={} expr=v2076[1] }
        rf      = { defs={} expr=v2077[1] }
        vm      = { defs={} expr=v2078[1] }
        ac      = { defs={} expr=v2079[1] }
        vif     = { defs={} expr=v2080[1] }
        vip     = { defs={} expr=v2081[1] }
        id      = { defs={} expr=v2082[1] }
        ?22     = { defs={} expr=v2083[1] }
        ?23     = { defs={} expr=v2084[1] }
        ?24     = { defs={} expr=v2085[1] }
        ?25     = { defs={} expr=v2086[1] }
        ?26     = { defs={} expr=v2087[1] }
        ?27     = { defs={} expr=v2088[1] }
        ?28     = { defs={} expr=v2089[1] }
        ?29     = { defs={} expr=v2090[1] }
        ?30     = { defs={} expr=v2091[1] }
        ?31     = { defs={} expr=v2092[1] }
        ip      = { defs={0x08048384,0x08048385,0x08048386} expr=0x08048387[32] }
    memory:
    init mem:
        address = { defs={0x08048386} expr=(add[32] v2052[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2137[32]) }
          flags = { rdonly }
        address = { defs={0x08048386} expr=(add[32] v2052[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2137[32]) }
          flags = { rdonly }
        address = { defs={0x08048386} expr=(add[32] v2052[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2137[32]) }
          flags = { rdonly }
        address = { defs={0x08048386} expr=v2052[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2137[32]) }
          flags = { rdonly }
        address = { defs={0x08048384} expr=(add[32] (add[32] v2051[32] 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2118[32]) }
          flags = { rdonly }
        address = { defs={0x08048384} expr=(add[32] (add[32] v2051[32] 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2118[32]) }
          flags = { rdonly }
        address = { defs={0x08048384} expr=(add[32] (add[32] v2051[32] 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2118[32]) }
          flags = { rdonly }
        address = { defs={0x08048384} expr=(add[32] v2051[32] 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2118[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v2051[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2100[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v2051[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2100[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v2051[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2100[32]) }
          flags = { rdonly }
        address = { defs={} expr=v2051[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2100[32]) }
          flags = { rdonly }
0x8048387:ret    
    registers:
        ax      = { defs={0x08048384} expr=v2100[32] }
        cx      = { defs={} expr=v2048[32] }
        dx      = { defs={} expr=v2049[32] }
        bx      = { defs={0x08048385} expr=v2118[32] }
        sp      = { defs={0x08048386,0x08048387} expr=(add[32] (add[32] v2052[32] 4[32]) 4[32]) }
        bp      = { defs={0x08048386} expr=v2137[32] }
        si      = { defs={} expr=v2053[32] }
        di      = { defs={} expr=v2054[32] }
        es      = { defs={} expr=v2055[16] }
        cs      = { defs={} expr=v2056[16] }
        ss      = { defs={} expr=v2057[16] }
        ds      = { defs={} expr=v2058[16] }
        fs      = { defs={} expr=v2059[16] }
        gs      = { defs={} expr=v2060[16] }
        cf      = { defs={} expr=v2061[1] }
        ?1      = { defs={} expr=v2062[1] }
        pf      = { defs={} expr=v2063[1] }
        ?3      = { defs={} expr=v2064[1] }
        af      = { defs={} expr=v2065[1] }
        ?5      = { defs={} expr=v2066[1] }
        zf      = { defs={} expr=v2067[1] }
        sf      = { defs={} expr=v2068[1] }
        tf      = { defs={} expr=v2069[1] }
        if      = { defs={} expr=v2070[1] }
        df      = { defs={} expr=v2071[1] }
        of      = { defs={} expr=v2072[1] }
        iopl0   = { defs={} expr=v2073[1] }
        iopl1   = { defs={} expr=v2074[1] }
        nt      = { defs={} expr=v2075[1] }
        ?15     = { defs={} expr=v2076[1] }
        rf      = { defs={} expr=v2077[1] }
        vm      = { defs={} expr=v2078[1] }
        ac      = { defs={} expr=v2079[1] }
        vif     = { defs={} expr=v2080[1] }
        vip     = { defs={} expr=v2081[1] }
        id      = { defs={} expr=v2082[1] }
        ?22     = { defs={} expr=v2083[1] }
        ?23     = { defs={} expr=v2084[1] }
        ?24     = { defs={} expr=v2085[1] }
        ?25     = { defs={} expr=v2086[1] }
        ?26     = { defs={} expr=v2087[1] }
        ?27     = { defs={} expr=v2088[1] }
        ?28     = { defs={} expr=v2089[1] }
        ?29     = { defs={} expr=v2090[1] }
        ?30     = { defs={} expr=v2091[1] }
        ?31     = { defs={} expr=v2092[1] }
        ip      = { defs={0x08048387} expr=v2156[32] }
    memory:
    init mem:
        address = { defs={0x08048386} expr=(add[32] (add[32] v2052[32] 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2156[32]) }
          flags = { rdonly }
        address = { defs={0x08048386} expr=(add[32] (add[32] v2052[32] 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2156[32]) }
          flags = { rdonly }
        address = { defs={0x08048386} expr=(add[32] (add[32] v2052[32] 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2156[32]) }
          flags = { rdonly }
        address = { defs={0x08048386} expr=(add[32] v2052[32] 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2156[32]) }
          flags = { rdonly }
        address = { defs={0x08048386} expr=(add[32] v2052[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2137[32]) }
          flags = { rdonly }
        address = { defs={0x08048386} expr=(add[32] v2052[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2137[32]) }
          flags = { rdonly }
        address = { defs={0x08048386} expr=(add[32] v2052[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2137[32]) }
          flags = { rdonly }
        address = { defs={0x08048386} expr=v2052[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2137[32]) }
          flags = { rdonly }
        address = { defs={0x08048384} expr=(add[32] (add[32] v2051[32] 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2118[32]) }
          flags = { rdonly }
        address = { defs={0x08048384} expr=(add[32] (add[32] v2051[32] 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2118[32]) }
          flags = { rdonly }
        address = { defs={0x08048384} expr=(add[32] (add[32] v2051[32] 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2118[32]) }
          flags = { rdonly }
        address = { defs={0x08048384} expr=(add[32] v2051[32] 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2118[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v2051[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2100[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v2051[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2100[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v2051[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2100[32]) }
          flags = { rdonly }
        address = { defs={} expr=v2051[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2100[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048390:push   ebp
    registers:
        ax      = { defs={} expr=v2217[32] }
        cx      = { defs={} expr=v2218[32] }
        dx      = { defs={} expr=v2219[32] }
        bx      = { defs={} expr=v2220[32] }
        sp      = { defs={0x08048390} expr=(add[32] v2221[32] -4[32]) }
        bp      = { defs={} expr=v2222[32] }
        si      = { defs={} expr=v2223[32] }
        di      = { defs={} expr=v2224[32] }
        es      = { defs={} expr=v2225[16] }
        cs      = { defs={} expr=v2226[16] }
        ss      = { defs={} expr=v2227[16] }
        ds      = { defs={} expr=v2228[16] }
        fs      = { defs={} expr=v2229[16] }
        gs      = { defs={} expr=v2230[16] }
        cf      = { defs={} expr=v2231[1] }
        ?1      = { defs={} expr=v2232[1] }
        pf      = { defs={} expr=v2233[1] }
        ?3      = { defs={} expr=v2234[1] }
        af      = { defs={} expr=v2235[1] }
        ?5      = { defs={} expr=v2236[1] }
        zf      = { defs={} expr=v2237[1] }
        sf      = { defs={} expr=v2238[1] }
        tf      = { defs={} expr=v2239[1] }
        if      = { defs={} expr=v2240[1] }
        df      = { defs={} expr=v2241[1] }
        of      = { defs={} expr=v2242[1] }
        iopl0   = { defs={} expr=v2243[1] }
        iopl1   = { defs={} expr=v2244[1] }
        nt      = { defs={} expr=v2245[1] }
        ?15     = { defs={} expr=v2246[1] }
        rf      = { defs={} expr=v2247[1] }
        vm      = { defs={} expr=v2248[1] }
        ac      = { defs={} expr=v2249[1] }
        vif     = { defs={} expr=v2250[1] }
        vip     = { defs={} expr=v2251[1] }
        id      = { defs={} expr=v2252[1] }
        ?22     = { defs={} expr=v2253[1] }
        ?23     = { defs={} expr=v2254[1] }
        ?24     = { defs={} expr=v2255[1] }
        ?25     = { defs={} expr=v2256[1] }
        ?26     = { defs={} expr=v2257[1] }
        ?27     = { defs={} expr=v2258[1] }
        ?28     = { defs={} expr=v2259[1] }
        ?29     = { defs={} expr=v2260[1] }
        ?30     = { defs={} expr=v2261[1] }
        ?31     = { defs={} expr=v2262[1] }
        ip      = { defs={0x08048390} expr=0x08048391[32] }
    memory:
        address = { defs={0x08048390} expr=(add[32] (add[32] v2221[32] -4[32]) 3[32]) }
          value = { defs={0x08048390} expr=(extract[8] 24[32] 32[32] v2222[32]) }
          flags = { }
        address = { defs={0x08048390} expr=(add[32] (add[32] v2221[32] -4[32]) 2[32]) }
          value = { defs={0x08048390} expr=(extract[8] 16[32] 24[32] v2222[32]) }
          flags = { }
        address = { defs={0x08048390} expr=(add[32] (add[32] v2221[32] -4[32]) 1[32]) }
          value = { defs={0x08048390} expr=(extract[8] 8[32] 16[32] v2222[32]) }
          flags = { }
        address = { defs={0x08048390} expr=(add[32] v2221[32] -4[32]) }
          value = { defs={0x08048390} expr=(extract[8] 0[32] 8[32] v2222[32]) }
          flags = { }
    init mem:
0x8048391:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v2217[32] }
        cx      = { defs={} expr=v2218[32] }
        dx      = { defs={} expr=v2219[32] }
        bx      = { defs={} expr=v2220[32] }
        sp      = { defs={0x08048390} expr=(add[32] v2221[32] -4[32]) }
        bp      = { defs={0x08048390,0x08048391} expr=(add[32] v2221[32] -4[32]) }
        si      = { defs={} expr=v2223[32] }
        di      = { defs={} expr=v2224[32] }
        es      = { defs={} expr=v2225[16] }
        cs      = { defs={} expr=v2226[16] }
        ss      = { defs={} expr=v2227[16] }
        ds      = { defs={} expr=v2228[16] }
        fs      = { defs={} expr=v2229[16] }
        gs      = { defs={} expr=v2230[16] }
        cf      = { defs={} expr=v2231[1] }
        ?1      = { defs={} expr=v2232[1] }
        pf      = { defs={} expr=v2233[1] }
        ?3      = { defs={} expr=v2234[1] }
        af      = { defs={} expr=v2235[1] }
        ?5      = { defs={} expr=v2236[1] }
        zf      = { defs={} expr=v2237[1] }
        sf      = { defs={} expr=v2238[1] }
        tf      = { defs={} expr=v2239[1] }
        if      = { defs={} expr=v2240[1] }
        df      = { defs={} expr=v2241[1] }
        of      = { defs={} expr=v2242[1] }
        iopl0   = { defs={} expr=v2243[1] }
        iopl1   = { defs={} expr=v2244[1] }
        nt      = { defs={} expr=v2245[1] }
        ?15     = { defs={} expr=v2246[1] }
        rf      = { defs={} expr=v2247[1] }
        vm      = { defs={} expr=v2248[1] }
        ac      = { defs={} expr=v2249[1] }
        vif     = { defs={} expr=v2250[1] }
        vip     = { defs={} expr=v2251[1] }
        id      = { defs={} expr=v2252[1] }
        ?22     = { defs={} expr=v2253[1] }
        ?23     = { defs={} expr=v2254[1] }
        ?24     = { defs={} expr=v2255[1] }
        ?25     = { defs={} expr=v2256[1] }
        ?26     = { defs={} expr=v2257[1] }
        ?27     = { defs={} expr=v2258[1] }
        ?28     = { defs={} expr=v2259[1] }
        ?29     = { defs={} expr=v2260[1] }
        ?30     = { defs={} expr=v2261[1] }
        ?31     = { defs={} expr=v2262[1] }
        ip      = { defs={0x08048390,0x08048391} expr=0x08048393[32] }
    memory:
        address = { defs={0x08048390} expr=(add[32] (add[32] v2221[32] -4[32]) 3[32]) }
          value = { defs={0x08048390} expr=(extract[8] 24[32] 32[32] v2222[32]) }
          flags = { }
        address = { defs={0x08048390} expr=(add[32] (add[32] v2221[32] -4[32]) 2[32]) }
          value = { defs={0x08048390} expr=(extract[8] 16[32] 24[32] v2222[32]) }
          flags = { }
        address = { defs={0x08048390} expr=(add[32] (add[32] v2221[32] -4[32]) 1[32]) }
          value = { defs={0x08048390} expr=(extract[8] 8[32] 16[32] v2222[32]) }
          flags = { }
        address = { defs={0x08048390} expr=(add[32] v2221[32] -4[32]) }
          value = { defs={0x08048390} expr=(extract[8] 0[32] 8[32] v2222[32]) }
          flags = { }
    init mem:
0x8048393:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v2217[32] }
        cx      = { defs={} expr=v2218[32] }
        dx      = { defs={} expr=v2219[32] }
        bx      = { defs={} expr=v2220[32] }
        sp      = { defs={0x08048390,0x08048393} expr=(add[32] (add[32] v2221[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048390,0x08048391} expr=(add[32] v2221[32] -4[32]) }
        si      = { defs={} expr=v2223[32] }
        di      = { defs={} expr=v2224[32] }
        es      = { defs={} expr=v2225[16] }
        cs      = { defs={} expr=v2226[16] }
        ss      = { defs={} expr=v2227[16] }
        ds      = { defs={} expr=v2228[16] }
        fs      = { defs={} expr=v2229[16] }
        gs      = { defs={} expr=v2230[16] }
        cf      = { defs={0x08048390,0x08048393} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2221[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2221[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v2232[1] }
        pf      = { defs={0x08048390,0x08048393} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2221[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2221[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2221[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2221[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2221[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2221[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2221[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2221[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v2234[1] }
        af      = { defs={0x08048390,0x08048393} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2221[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2221[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v2236[1] }
        zf      = { defs={0x08048390,0x08048393} expr=(zerop[1] (add[32] (add[32] v2221[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048390,0x08048393} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v2221[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v2239[1] }
        if      = { defs={} expr=v2240[1] }
        df      = { defs={} expr=v2241[1] }
        of      = { defs={0x08048390,0x08048393} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2221[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2221[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2221[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2221[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v2243[1] }
        iopl1   = { defs={} expr=v2244[1] }
        nt      = { defs={} expr=v2245[1] }
        ?15     = { defs={} expr=v2246[1] }
        rf      = { defs={} expr=v2247[1] }
        vm      = { defs={} expr=v2248[1] }
        ac      = { defs={} expr=v2249[1] }
        vif     = { defs={} expr=v2250[1] }
        vip     = { defs={} expr=v2251[1] }
        id      = { defs={} expr=v2252[1] }
        ?22     = { defs={} expr=v2253[1] }
        ?23     = { defs={} expr=v2254[1] }
        ?24     = { defs={} expr=v2255[1] }
        ?25     = { defs={} expr=v2256[1] }
        ?26     = { defs={} expr=v2257[1] }
        ?27     = { defs={} expr=v2258[1] }
        ?28     = { defs={} expr=v2259[1] }
        ?29     = { defs={} expr=v2260[1] }
        ?30     = { defs={} expr=v2261[1] }
        ?31     = { defs={} expr=v2262[1] }
        ip      = { defs={0x08048390,0x08048391,0x08048393} expr=0x08048396[32] }
    memory:
        address = { defs={0x08048390} expr=(add[32] (add[32] v2221[32] -4[32]) 3[32]) }
          value = { defs={0x08048390} expr=(extract[8] 24[32] 32[32] v2222[32]) }
          flags = { }
        address = { defs={0x08048390} expr=(add[32] (add[32] v2221[32] -4[32]) 2[32]) }
          value = { defs={0x08048390} expr=(extract[8] 16[32] 24[32] v2222[32]) }
          flags = { }
        address = { defs={0x08048390} expr=(add[32] (add[32] v2221[32] -4[32]) 1[32]) }
          value = { defs={0x08048390} expr=(extract[8] 8[32] 16[32] v2222[32]) }
          flags = { }
        address = { defs={0x08048390} expr=(add[32] v2221[32] -4[32]) }
          value = { defs={0x08048390} expr=(extract[8] 0[32] 8[32] v2222[32]) }
          flags = { }
    init mem:
0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00
    registers:
        ax      = { defs={} expr=v2217[32] }
        cx      = { defs={} expr=v2218[32] }
        dx      = { defs={} expr=v2219[32] }
        bx      = { defs={} expr=v2220[32] }
        sp      = { defs={0x08048390,0x08048393} expr=(add[32] (add[32] v2221[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048390,0x08048391} expr=(add[32] v2221[32] -4[32]) }
        si      = { defs={} expr=v2223[32] }
        di      = { defs={} expr=v2224[32] }
        es      = { defs={} expr=v2225[16] }
        cs      = { defs={} expr=v2226[16] }
        ss      = { defs={} expr=v2227[16] }
        ds      = { defs={} expr=v2228[16] }
        fs      = { defs={} expr=v2229[16] }
        gs      = { defs={} expr=v2230[16] }
        cf      = { defs={0x08048396} expr=(invert[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2340[8])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2340[8])) -256[9])))))) }
        ?1      = { defs={} expr=v2232[1] }
        pf      = { defs={0x08048396} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] v2340[8])) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] v2340[8]))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] v2340[8])) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] v2340[8])))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] v2340[8])) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] v2340[8]))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] v2340[8])) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] v2340[8])))))) }
        ?3      = { defs={} expr=v2234[1] }
        af      = { defs={0x08048396} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2340[8])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2340[8])) -256[9])))))) }
        ?5      = { defs={} expr=v2236[1] }
        zf      = { defs={0x08048396} expr=(zerop[1] (extract[8] 0[32] 8[32] v2340[8])) }
        sf      = { defs={0x08048396} expr=(extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] v2340[8])) }
        tf      = { defs={} expr=v2239[1] }
        if      = { defs={} expr=v2240[1] }
        df      = { defs={} expr=v2241[1] }
        of      = { defs={0x08048396} expr=(bv-xor[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2340[8])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2340[8])) -256[9]))))) (extract[1] 6[32] 7[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2340[8])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2340[8])) -256[9])))))) }
        iopl0   = { defs={} expr=v2243[1] }
        iopl1   = { defs={} expr=v2244[1] }
        nt      = { defs={} expr=v2245[1] }
        ?15     = { defs={} expr=v2246[1] }
        rf      = { defs={} expr=v2247[1] }
        vm      = { defs={} expr=v2248[1] }
        ac      = { defs={} expr=v2249[1] }
        vif     = { defs={} expr=v2250[1] }
        vip     = { defs={} expr=v2251[1] }
        id      = { defs={} expr=v2252[1] }
        ?22     = { defs={} expr=v2253[1] }
        ?23     = { defs={} expr=v2254[1] }
        ?24     = { defs={} expr=v2255[1] }
        ?25     = { defs={} expr=v2256[1] }
        ?26     = { defs={} expr=v2257[1] }
        ?27     = { defs={} expr=v2258[1] }
        ?28     = { defs={} expr=v2259[1] }
        ?29     = { defs={} expr=v2260[1] }
        ?30     = { defs={} expr=v2261[1] }
        ?31     = { defs={} expr=v2262[1] }
        ip      = { defs={0x08048390,0x08048391,0x08048393,0x08048396} expr=0x0804839d[32] }
    memory:
        address = { defs={0x08048390} expr=(add[32] (add[32] v2221[32] -4[32]) 3[32]) }
          value = { defs={0x08048390} expr=(extract[8] 24[32] 32[32] v2222[32]) }
          flags = { }
        address = { defs={0x08048390} expr=(add[32] (add[32] v2221[32] -4[32]) 2[32]) }
          value = { defs={0x08048390} expr=(extract[8] 16[32] 24[32] v2222[32]) }
          flags = { }
        address = { defs={0x08048390} expr=(add[32] (add[32] v2221[32] -4[32]) 1[32]) }
          value = { defs={0x08048390} expr=(extract[8] 8[32] 16[32] v2222[32]) }
          flags = { }
        address = { defs={0x08048390} expr=(add[32] v2221[32] -4[32]) }
          value = { defs={0x08048390} expr=(extract[8] 0[32] 8[32] v2222[32]) }
          flags = { }
    init mem:
        address = { defs={0x08048396} expr=0x080496f4[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2340[8]) }
          flags = { rdonly }
0x804839d:jne    0x080483cc<<Insn>>
    registers:
        ax      = { defs={} expr=v2217[32] }
        cx      = { defs={} expr=v2218[32] }
        dx      = { defs={} expr=v2219[32] }
        bx      = { defs={} expr=v2220[32] }
        sp      = { defs={0x08048390,0x08048393} expr=(add[32] (add[32] v2221[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048390,0x08048391} expr=(add[32] v2221[32] -4[32]) }
        si      = { defs={} expr=v2223[32] }
        di      = { defs={} expr=v2224[32] }
        es      = { defs={} expr=v2225[16] }
        cs      = { defs={} expr=v2226[16] }
        ss      = { defs={} expr=v2227[16] }
        ds      = { defs={} expr=v2228[16] }
        fs      = { defs={} expr=v2229[16] }
        gs      = { defs={} expr=v2230[16] }
        cf      = { defs={0x08048396} expr=(invert[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2340[8])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2340[8])) -256[9])))))) }
        ?1      = { defs={} expr=v2232[1] }
        pf      = { defs={0x08048396} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] v2340[8])) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] v2340[8]))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] v2340[8])) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] v2340[8])))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] v2340[8])) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] v2340[8]))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] v2340[8])) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] v2340[8])))))) }
        ?3      = { defs={} expr=v2234[1] }
        af      = { defs={0x08048396} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2340[8])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2340[8])) -256[9])))))) }
        ?5      = { defs={} expr=v2236[1] }
        zf      = { defs={0x08048396} expr=(zerop[1] (extract[8] 0[32] 8[32] v2340[8])) }
        sf      = { defs={0x08048396} expr=(extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] v2340[8])) }
        tf      = { defs={} expr=v2239[1] }
        if      = { defs={} expr=v2240[1] }
        df      = { defs={} expr=v2241[1] }
        of      = { defs={0x08048396} expr=(bv-xor[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2340[8])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2340[8])) -256[9]))))) (extract[1] 6[32] 7[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2340[8])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2340[8])) -256[9])))))) }
        iopl0   = { defs={} expr=v2243[1] }
        iopl1   = { defs={} expr=v2244[1] }
        nt      = { defs={} expr=v2245[1] }
        ?15     = { defs={} expr=v2246[1] }
        rf      = { defs={} expr=v2247[1] }
        vm      = { defs={} expr=v2248[1] }
        ac      = { defs={} expr=v2249[1] }
        vif     = { defs={} expr=v2250[1] }
        vip     = { defs={} expr=v2251[1] }
        id      = { defs={} expr=v2252[1] }
        ?22     = { defs={} expr=v2253[1] }
        ?23     = { defs={} expr=v2254[1] }
        ?24     = { defs={} expr=v2255[1] }
        ?25     = { defs={} expr=v2256[1] }
        ?26     = { defs={} expr=v2257[1] }
        ?27     = { defs={} expr=v2258[1] }
        ?28     = { defs={} expr=v2259[1] }
        ?29     = { defs={} expr=v2260[1] }
        ?30     = { defs={} expr=v2261[1] }
        ?31     = { defs={} expr=v2262[1] }
        ip      = { defs={0x08048390,0x08048391,0x08048393,0x08048396,0x0804839d} expr=(ite[32] (invert[1] (zerop[1] (extract[8] 0[32] 8[32] v2340[8]))) 0x080483cc[32] 0x0804839f[32]) }
    memory:
        address = { defs={0x08048390} expr=(add[32] (add[32] v2221[32] -4[32]) 3[32]) }
          value = { defs={0x08048390} expr=(extract[8] 24[32] 32[32] v2222[32]) }
          flags = { }
        address = { defs={0x08048390} expr=(add[32] (add[32] v2221[32] -4[32]) 2[32]) }
          value = { defs={0x08048390} expr=(extract[8] 16[32] 24[32] v2222[32]) }
          flags = { }
        address = { defs={0x08048390} expr=(add[32] (add[32] v2221[32] -4[32]) 1[32]) }
          value = { defs={0x08048390} expr=(extract[8] 8[32] 16[32] v2222[32]) }
          flags = { }
        address = { defs={0x08048390} expr=(add[32] v2221[32] -4[32]) }
          value = { defs={0x08048390} expr=(extract[8] 0[32] 8[32] v2222[32]) }
          flags = { }
    init mem:
        address = { defs={0x08048396} expr=0x080496f4[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2340[8]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]
    registers:
        ax      = { defs={0x0804839f} expr=v2498[32] }
        cx      = { defs={} expr=v2449[32] }
        dx      = { defs={} expr=v2450[32] }
        bx      = { defs={} expr=v2451[32] }
        sp      = { defs={} expr=v2452[32] }
        bp      = { defs={} expr=v2453[32] }
        si      = { defs={} expr=v2454[32] }
        di      = { defs={} expr=v2455[32] }
        es      = { defs={} expr=v2456[16] }
        cs      = { defs={} expr=v2457[16] }
        ss      = { defs={} expr=v2458[16] }
        ds      = { defs={} expr=v2459[16] }
        fs      = { defs={} expr=v2460[16] }
        gs      = { defs={} expr=v2461[16] }
        cf      = { defs={} expr=v2462[1] }
        ?1      = { defs={} expr=v2463[1] }
        pf      = { defs={} expr=v2464[1] }
        ?3      = { defs={} expr=v2465[1] }
        af      = { defs={} expr=v2466[1] }
        ?5      = { defs={} expr=v2467[1] }
        zf      = { defs={} expr=v2468[1] }
        sf      = { defs={} expr=v2469[1] }
        tf      = { defs={} expr=v2470[1] }
        if      = { defs={} expr=v2471[1] }
        df      = { defs={} expr=v2472[1] }
        of      = { defs={} expr=v2473[1] }
        iopl0   = { defs={} expr=v2474[1] }
        iopl1   = { defs={} expr=v2475[1] }
        nt      = { defs={} expr=v2476[1] }
        ?15     = { defs={} expr=v2477[1] }
        rf      = { defs={} expr=v2478[1] }
        vm      = { defs={} expr=v2479[1] }
        ac      = { defs={} expr=v2480[1] }
        vif     = { defs={} expr=v2481[1] }
        vip     = { defs={} expr=v2482[1] }
        id      = { defs={} expr=v2483[1] }
        ?22     = { defs={} expr=v2484[1] }
        ?23     = { defs={} expr=v2485[1] }
        ?24     = { defs={} expr=v2486[1] }
        ?25     = { defs={} expr=v2487[1] }
        ?26     = { defs={} expr=v2488[1] }
        ?27     = { defs={} expr=v2489[1] }
        ?28     = { defs={} expr=v2490[1] }
        ?29     = { defs={} expr=v2491[1] }
        ?30     = { defs={} expr=v2492[1] }
        ?31     = { defs={} expr=v2493[1] }
        ip      = { defs={0x0804839f} expr=0x080483a4[32] }
    memory:
    init mem:
        address = { defs={0x0804839f} expr=0x080496f3[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2498[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=0x080496f2[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2498[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=0x080496f1[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2498[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=0x080496f0[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2498[32]) }
          flags = { rdonly }
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    registers:
        ax      = { defs={0x0804839f} expr=v2498[32] }
        cx      = { defs={} expr=v2449[32] }
        dx      = { defs={0x080483a4} expr=v2514[32] }
        bx      = { defs={} expr=v2451[32] }
        sp      = { defs={} expr=v2452[32] }
        bp      = { defs={} expr=v2453[32] }
        si      = { defs={} expr=v2454[32] }
        di      = { defs={} expr=v2455[32] }
        es      = { defs={} expr=v2456[16] }
        cs      = { defs={} expr=v2457[16] }
        ss      = { defs={} expr=v2458[16] }
        ds      = { defs={} expr=v2459[16] }
        fs      = { defs={} expr=v2460[16] }
        gs      = { defs={} expr=v2461[16] }
        cf      = { defs={} expr=v2462[1] }
        ?1      = { defs={} expr=v2463[1] }
        pf      = { defs={} expr=v2464[1] }
        ?3      = { defs={} expr=v2465[1] }
        af      = { defs={} expr=v2466[1] }
        ?5      = { defs={} expr=v2467[1] }
        zf      = { defs={} expr=v2468[1] }
        sf      = { defs={} expr=v2469[1] }
        tf      = { defs={} expr=v2470[1] }
        if      = { defs={} expr=v2471[1] }
        df      = { defs={} expr=v2472[1] }
        of      = { defs={} expr=v2473[1] }
        iopl0   = { defs={} expr=v2474[1] }
        iopl1   = { defs={} expr=v2475[1] }
        nt      = { defs={} expr=v2476[1] }
        ?15     = { defs={} expr=v2477[1] }
        rf      = { defs={} expr=v2478[1] }
        vm      = { defs={} expr=v2479[1] }
        ac      = { defs={} expr=v2480[1] }
        vif     = { defs={} expr=v2481[1] }
        vip     = { defs={} expr=v2482[1] }
        id      = { defs={} expr=v2483[1] }
        ?22     = { defs={} expr=v2484[1] }
        ?23     = { defs={} expr=v2485[1] }
        ?24     = { defs={} expr=v2486[1] }
        ?25     = { defs={} expr=v2487[1] }
        ?26     = { defs={} expr=v2488[1] }
        ?27     = { defs={} expr=v2489[1] }
        ?28     = { defs={} expr=v2490[1] }
        ?29     = { defs={} expr=v2491[1] }
        ?30     = { defs={} expr=v2492[1] }
        ?31     = { defs={} expr=v2493[1] }
        ip      = { defs={0x0804839f,0x080483a4} expr=0x080483a6[32] }
    memory:
    init mem:
        address = { defs={0x0804839f} expr=(add[32] v2498[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2514[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=(add[32] v2498[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2514[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=(add[32] v2498[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2514[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=v2498[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2514[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=0x080496f3[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2498[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=0x080496f2[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2498[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=0x080496f1[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2498[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=0x080496f0[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2498[32]) }
          flags = { rdonly }
0x80483a6:test   edx, edx
    registers:
        ax      = { defs={0x0804839f} expr=v2498[32] }
        cx      = { defs={} expr=v2449[32] }
        dx      = { defs={0x080483a4} expr=v2514[32] }
        bx      = { defs={} expr=v2451[32] }
        sp      = { defs={} expr=v2452[32] }
        bp      = { defs={} expr=v2453[32] }
        si      = { defs={} expr=v2454[32] }
        di      = { defs={} expr=v2455[32] }
        es      = { defs={} expr=v2456[16] }
        cs      = { defs={} expr=v2457[16] }
        ss      = { defs={} expr=v2458[16] }
        ds      = { defs={} expr=v2459[16] }
        fs      = { defs={} expr=v2460[16] }
        gs      = { defs={} expr=v2461[16] }
        cf      = { defs={0x080483a6} expr=0[1] }
        ?1      = { defs={} expr=v2463[1] }
        pf      = { defs={0x080483a4,0x080483a6} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v2514[32] v2514[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v2514[32] v2514[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v2514[32] v2514[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v2514[32] v2514[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v2514[32] v2514[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v2514[32] v2514[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v2514[32] v2514[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v2514[32] v2514[32]))))))) }
        ?3      = { defs={} expr=v2465[1] }
        af      = { defs={0x080483a6} expr=v2557[1] }
        ?5      = { defs={} expr=v2467[1] }
        zf      = { defs={0x080483a4,0x080483a6} expr=(zerop[1] (bv-and[32] v2514[32] v2514[32])) }
        sf      = { defs={0x080483a4,0x080483a6} expr=(extract[1] 31[32] 32[32] (bv-and[32] v2514[32] v2514[32])) }
        tf      = { defs={} expr=v2470[1] }
        if      = { defs={} expr=v2471[1] }
        df      = { defs={} expr=v2472[1] }
        of      = { defs={0x080483a6} expr=0[1] }
        iopl0   = { defs={} expr=v2474[1] }
        iopl1   = { defs={} expr=v2475[1] }
        nt      = { defs={} expr=v2476[1] }
        ?15     = { defs={} expr=v2477[1] }
        rf      = { defs={} expr=v2478[1] }
        vm      = { defs={} expr=v2479[1] }
        ac      = { defs={} expr=v2480[1] }
        vif     = { defs={} expr=v2481[1] }
        vip     = { defs={} expr=v2482[1] }
        id      = { defs={} expr=v2483[1] }
        ?22     = { defs={} expr=v2484[1] }
        ?23     = { defs={} expr=v2485[1] }
        ?24     = { defs={} expr=v2486[1] }
        ?25     = { defs={} expr=v2487[1] }
        ?26     = { defs={} expr=v2488[1] }
        ?27     = { defs={} expr=v2489[1] }
        ?28     = { defs={} expr=v2490[1] }
        ?29     = { defs={} expr=v2491[1] }
        ?30     = { defs={} expr=v2492[1] }
        ?31     = { defs={} expr=v2493[1] }
        ip      = { defs={0x0804839f,0x080483a4,0x080483a6} expr=0x080483a8[32] }
    memory:
    init mem:
        address = { defs={0x0804839f} expr=(add[32] v2498[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2514[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=(add[32] v2498[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2514[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=(add[32] v2498[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2514[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=v2498[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2514[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=0x080496f3[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2498[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=0x080496f2[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2498[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=0x080496f1[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2498[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=0x080496f0[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2498[32]) }
          flags = { rdonly }
0x80483a8:je     0x080483c5<<Insn>>
    registers:
        ax      = { defs={0x0804839f} expr=v2498[32] }
        cx      = { defs={} expr=v2449[32] }
        dx      = { defs={0x080483a4} expr=v2514[32] }
        bx      = { defs={} expr=v2451[32] }
        sp      = { defs={} expr=v2452[32] }
        bp      = { defs={} expr=v2453[32] }
        si      = { defs={} expr=v2454[32] }
        di      = { defs={} expr=v2455[32] }
        es      = { defs={} expr=v2456[16] }
        cs      = { defs={} expr=v2457[16] }
        ss      = { defs={} expr=v2458[16] }
        ds      = { defs={} expr=v2459[16] }
        fs      = { defs={} expr=v2460[16] }
        gs      = { defs={} expr=v2461[16] }
        cf      = { defs={0x080483a6} expr=0[1] }
        ?1      = { defs={} expr=v2463[1] }
        pf      = { defs={0x080483a4,0x080483a6} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v2514[32] v2514[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v2514[32] v2514[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v2514[32] v2514[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v2514[32] v2514[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v2514[32] v2514[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v2514[32] v2514[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v2514[32] v2514[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v2514[32] v2514[32]))))))) }
        ?3      = { defs={} expr=v2465[1] }
        af      = { defs={0x080483a6} expr=v2557[1] }
        ?5      = { defs={} expr=v2467[1] }
        zf      = { defs={0x080483a4,0x080483a6} expr=(zerop[1] (bv-and[32] v2514[32] v2514[32])) }
        sf      = { defs={0x080483a4,0x080483a6} expr=(extract[1] 31[32] 32[32] (bv-and[32] v2514[32] v2514[32])) }
        tf      = { defs={} expr=v2470[1] }
        if      = { defs={} expr=v2471[1] }
        df      = { defs={} expr=v2472[1] }
        of      = { defs={0x080483a6} expr=0[1] }
        iopl0   = { defs={} expr=v2474[1] }
        iopl1   = { defs={} expr=v2475[1] }
        nt      = { defs={} expr=v2476[1] }
        ?15     = { defs={} expr=v2477[1] }
        rf      = { defs={} expr=v2478[1] }
        vm      = { defs={} expr=v2479[1] }
        ac      = { defs={} expr=v2480[1] }
        vif     = { defs={} expr=v2481[1] }
        vip     = { defs={} expr=v2482[1] }
        id      = { defs={} expr=v2483[1] }
        ?22     = { defs={} expr=v2484[1] }
        ?23     = { defs={} expr=v2485[1] }
        ?24     = { defs={} expr=v2486[1] }
        ?25     = { defs={} expr=v2487[1] }
        ?26     = { defs={} expr=v2488[1] }
        ?27     = { defs={} expr=v2489[1] }
        ?28     = { defs={} expr=v2490[1] }
        ?29     = { defs={} expr=v2491[1] }
        ?30     = { defs={} expr=v2492[1] }
        ?31     = { defs={} expr=v2493[1] }
        ip      = { defs={0x0804839f,0x080483a4,0x080483a6,0x080483a8} expr=(ite[32] (zerop[1] (bv-and[32] v2514[32] v2514[32])) 0x080483c5[32] 0x080483aa[32]) }
    memory:
    init mem:
        address = { defs={0x0804839f} expr=(add[32] v2498[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2514[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=(add[32] v2498[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2514[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=(add[32] v2498[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2514[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=v2498[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2514[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=0x080496f3[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2498[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=0x080496f2[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2498[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=0x080496f1[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2498[32]) }
          flags = { rdonly }
        address = { defs={0x0804839f} expr=0x080496f0[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2498[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
    registers:
        ax      = { defs={} expr=v2615[32] }
        cx      = { defs={} expr=v2616[32] }
        dx      = { defs={} expr=v2617[32] }
        bx      = { defs={} expr=v2618[32] }
        sp      = { defs={} expr=v2619[32] }
        bp      = { defs={} expr=v2620[32] }
        si      = { defs={0x080483aa} expr=v2621[32] }
        di      = { defs={} expr=v2622[32] }
        es      = { defs={} expr=v2623[16] }
        cs      = { defs={} expr=v2624[16] }
        ss      = { defs={} expr=v2625[16] }
        ds      = { defs={} expr=v2626[16] }
        fs      = { defs={} expr=v2627[16] }
        gs      = { defs={} expr=v2628[16] }
        cf      = { defs={} expr=v2629[1] }
        ?1      = { defs={} expr=v2630[1] }
        pf      = { defs={} expr=v2631[1] }
        ?3      = { defs={} expr=v2632[1] }
        af      = { defs={} expr=v2633[1] }
        ?5      = { defs={} expr=v2634[1] }
        zf      = { defs={} expr=v2635[1] }
        sf      = { defs={} expr=v2636[1] }
        tf      = { defs={} expr=v2637[1] }
        if      = { defs={} expr=v2638[1] }
        df      = { defs={} expr=v2639[1] }
        of      = { defs={} expr=v2640[1] }
        iopl0   = { defs={} expr=v2641[1] }
        iopl1   = { defs={} expr=v2642[1] }
        nt      = { defs={} expr=v2643[1] }
        ?15     = { defs={} expr=v2644[1] }
        rf      = { defs={} expr=v2645[1] }
        vm      = { defs={} expr=v2646[1] }
        ac      = { defs={} expr=v2647[1] }
        vif     = { defs={} expr=v2648[1] }
        vip     = { defs={} expr=v2649[1] }
        id      = { defs={} expr=v2650[1] }
        ?22     = { defs={} expr=v2651[1] }
        ?23     = { defs={} expr=v2652[1] }
        ?24     = { defs={} expr=v2653[1] }
        ?25     = { defs={} expr=v2654[1] }
        ?26     = { defs={} expr=v2655[1] }
        ?27     = { defs={} expr=v2656[1] }
        ?28     = { defs={} expr=v2657[1] }
        ?29     = { defs={} expr=v2658[1] }
        ?30     = { defs={} expr=v2659[1] }
        ?31     = { defs={} expr=v2660[1] }
        ip      = { defs={0x080483aa} expr=0x080483b0[32] }
    memory:
    init mem:
0x80483b0:add    eax, 0x04
    registers:
        ax      = { defs={0x080483b0} expr=(add[32] v2615[32] 4[32]) }
        cx      = { defs={} expr=v2616[32] }
        dx      = { defs={} expr=v2617[32] }
        bx      = { defs={} expr=v2618[32] }
        sp      = { defs={} expr=v2619[32] }
        bp      = { defs={} expr=v2620[32] }
        si      = { defs={0x080483aa} expr=v2621[32] }
        di      = { defs={} expr=v2622[32] }
        es      = { defs={} expr=v2623[16] }
        cs      = { defs={} expr=v2624[16] }
        ss      = { defs={} expr=v2625[16] }
        ds      = { defs={} expr=v2626[16] }
        fs      = { defs={} expr=v2627[16] }
        gs      = { defs={} expr=v2628[16] }
        cf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2615[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v2615[32]) 4[33]))))) }
        ?1      = { defs={} expr=v2630[1] }
        pf      = { defs={0x080483b0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32]))))))) }
        ?3      = { defs={} expr=v2632[1] }
        af      = { defs={0x080483b0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2615[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v2615[32]) 4[33]))))) }
        ?5      = { defs={} expr=v2634[1] }
        zf      = { defs={0x080483b0} expr=(zerop[1] (add[32] v2615[32] 4[32])) }
        sf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (add[32] v2615[32] 4[32])) }
        tf      = { defs={} expr=v2637[1] }
        if      = { defs={} expr=v2638[1] }
        df      = { defs={} expr=v2639[1] }
        of      = { defs={0x080483b0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2615[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v2615[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2615[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v2615[32]) 4[33])))))) }
        iopl0   = { defs={} expr=v2641[1] }
        iopl1   = { defs={} expr=v2642[1] }
        nt      = { defs={} expr=v2643[1] }
        ?15     = { defs={} expr=v2644[1] }
        rf      = { defs={} expr=v2645[1] }
        vm      = { defs={} expr=v2646[1] }
        ac      = { defs={} expr=v2647[1] }
        vif     = { defs={} expr=v2648[1] }
        vip     = { defs={} expr=v2649[1] }
        id      = { defs={} expr=v2650[1] }
        ?22     = { defs={} expr=v2651[1] }
        ?23     = { defs={} expr=v2652[1] }
        ?24     = { defs={} expr=v2653[1] }
        ?25     = { defs={} expr=v2654[1] }
        ?26     = { defs={} expr=v2655[1] }
        ?27     = { defs={} expr=v2656[1] }
        ?28     = { defs={} expr=v2657[1] }
        ?29     = { defs={} expr=v2658[1] }
        ?30     = { defs={} expr=v2659[1] }
        ?31     = { defs={} expr=v2660[1] }
        ip      = { defs={0x080483aa,0x080483b0} expr=0x080483b3[32] }
    memory:
    init mem:
0x80483b3:mov    DWORD PTR ds:[0x080496f0<.data+8>], eax
    registers:
        ax      = { defs={0x080483b0} expr=(add[32] v2615[32] 4[32]) }
        cx      = { defs={} expr=v2616[32] }
        dx      = { defs={} expr=v2617[32] }
        bx      = { defs={} expr=v2618[32] }
        sp      = { defs={} expr=v2619[32] }
        bp      = { defs={} expr=v2620[32] }
        si      = { defs={0x080483aa} expr=v2621[32] }
        di      = { defs={} expr=v2622[32] }
        es      = { defs={} expr=v2623[16] }
        cs      = { defs={} expr=v2624[16] }
        ss      = { defs={} expr=v2625[16] }
        ds      = { defs={} expr=v2626[16] }
        fs      = { defs={} expr=v2627[16] }
        gs      = { defs={} expr=v2628[16] }
        cf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2615[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v2615[32]) 4[33]))))) }
        ?1      = { defs={} expr=v2630[1] }
        pf      = { defs={0x080483b0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32]))))))) }
        ?3      = { defs={} expr=v2632[1] }
        af      = { defs={0x080483b0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2615[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v2615[32]) 4[33]))))) }
        ?5      = { defs={} expr=v2634[1] }
        zf      = { defs={0x080483b0} expr=(zerop[1] (add[32] v2615[32] 4[32])) }
        sf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (add[32] v2615[32] 4[32])) }
        tf      = { defs={} expr=v2637[1] }
        if      = { defs={} expr=v2638[1] }
        df      = { defs={} expr=v2639[1] }
        of      = { defs={0x080483b0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2615[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v2615[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2615[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v2615[32]) 4[33])))))) }
        iopl0   = { defs={} expr=v2641[1] }
        iopl1   = { defs={} expr=v2642[1] }
        nt      = { defs={} expr=v2643[1] }
        ?15     = { defs={} expr=v2644[1] }
        rf      = { defs={} expr=v2645[1] }
        vm      = { defs={} expr=v2646[1] }
        ac      = { defs={} expr=v2647[1] }
        vif     = { defs={} expr=v2648[1] }
        vip     = { defs={} expr=v2649[1] }
        id      = { defs={} expr=v2650[1] }
        ?22     = { defs={} expr=v2651[1] }
        ?23     = { defs={} expr=v2652[1] }
        ?24     = { defs={} expr=v2653[1] }
        ?25     = { defs={} expr=v2654[1] }
        ?26     = { defs={} expr=v2655[1] }
        ?27     = { defs={} expr=v2656[1] }
        ?28     = { defs={} expr=v2657[1] }
        ?29     = { defs={} expr=v2658[1] }
        ?30     = { defs={} expr=v2659[1] }
        ?31     = { defs={} expr=v2660[1] }
        ip      = { defs={0x080483aa,0x080483b0,0x080483b3} expr=0x080483b8[32] }
    memory:
        address = { defs={0x080483b3} expr=0x080496f3[32] }
          value = { defs={0x080483b0,0x080483b3} expr=(extract[8] 24[32] 32[32] (add[32] v2615[32] 4[32])) }
          flags = { }
        address = { defs={0x080483b3} expr=0x080496f2[32] }
          value = { defs={0x080483b0,0x080483b3} expr=(extract[8] 16[32] 24[32] (add[32] v2615[32] 4[32])) }
          flags = { }
        address = { defs={0x080483b3} expr=0x080496f1[32] }
          value = { defs={0x080483b0,0x080483b3} expr=(extract[8] 8[32] 16[32] (add[32] v2615[32] 4[32])) }
          flags = { }
        address = { defs={0x080483b3} expr=0x080496f0[32] }
          value = { defs={0x080483b0,0x080483b3} expr=(extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32])) }
          flags = { }
    init mem:
0x80483b8:call   edx
    registers:
        ax      = { defs={0x080483b0} expr=(add[32] v2615[32] 4[32]) }
        cx      = { defs={} expr=v2616[32] }
        dx      = { defs={} expr=v2617[32] }
        bx      = { defs={} expr=v2618[32] }
        sp      = { defs={0x080483b8} expr=(add[32] v2619[32] -4[32]) }
        bp      = { defs={} expr=v2620[32] }
        si      = { defs={0x080483aa} expr=v2621[32] }
        di      = { defs={} expr=v2622[32] }
        es      = { defs={} expr=v2623[16] }
        cs      = { defs={} expr=v2624[16] }
        ss      = { defs={} expr=v2625[16] }
        ds      = { defs={} expr=v2626[16] }
        fs      = { defs={} expr=v2627[16] }
        gs      = { defs={} expr=v2628[16] }
        cf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2615[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v2615[32]) 4[33]))))) }
        ?1      = { defs={} expr=v2630[1] }
        pf      = { defs={0x080483b0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32]))))))) }
        ?3      = { defs={} expr=v2632[1] }
        af      = { defs={0x080483b0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2615[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v2615[32]) 4[33]))))) }
        ?5      = { defs={} expr=v2634[1] }
        zf      = { defs={0x080483b0} expr=(zerop[1] (add[32] v2615[32] 4[32])) }
        sf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (add[32] v2615[32] 4[32])) }
        tf      = { defs={} expr=v2637[1] }
        if      = { defs={} expr=v2638[1] }
        df      = { defs={} expr=v2639[1] }
        of      = { defs={0x080483b0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2615[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v2615[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2615[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v2615[32]) 4[33])))))) }
        iopl0   = { defs={} expr=v2641[1] }
        iopl1   = { defs={} expr=v2642[1] }
        nt      = { defs={} expr=v2643[1] }
        ?15     = { defs={} expr=v2644[1] }
        rf      = { defs={} expr=v2645[1] }
        vm      = { defs={} expr=v2646[1] }
        ac      = { defs={} expr=v2647[1] }
        vif     = { defs={} expr=v2648[1] }
        vip     = { defs={} expr=v2649[1] }
        id      = { defs={} expr=v2650[1] }
        ?22     = { defs={} expr=v2651[1] }
        ?23     = { defs={} expr=v2652[1] }
        ?24     = { defs={} expr=v2653[1] }
        ?25     = { defs={} expr=v2654[1] }
        ?26     = { defs={} expr=v2655[1] }
        ?27     = { defs={} expr=v2656[1] }
        ?28     = { defs={} expr=v2657[1] }
        ?29     = { defs={} expr=v2658[1] }
        ?30     = { defs={} expr=v2659[1] }
        ?31     = { defs={} expr=v2660[1] }
        ip      = { defs={0x080483b8} expr=v2617[32] }
    memory:
        address = { defs={0x080483b8} expr=(add[32] (add[32] v2619[32] -4[32]) 3[32]) }
          value = { defs={0x080483aa,0x080483b0,0x080483b3,0x080483b8} expr=8[8] }
          flags = { }
        address = { defs={0x080483b8} expr=(add[32] (add[32] v2619[32] -4[32]) 2[32]) }
          value = { defs={0x080483aa,0x080483b0,0x080483b3,0x080483b8} expr=4[8] }
          flags = { }
        address = { defs={0x080483b8} expr=(add[32] (add[32] v2619[32] -4[32]) 1[32]) }
          value = { defs={0x080483aa,0x080483b0,0x080483b3,0x080483b8} expr=-125[8] }
          flags = { }
        address = { defs={0x080483b8} expr=(add[32] v2619[32] -4[32]) }
          value = { defs={0x080483aa,0x080483b0,0x080483b3,0x080483b8} expr=-70[8] }
          flags = { }
        address = { defs={0x080483b3} expr=0x080496f3[32] }
          value = { defs={0x080483b0,0x080483b3} expr=(extract[8] 24[32] 32[32] (add[32] v2615[32] 4[32])) }
          flags = { }
        address = { defs={0x080483b3} expr=0x080496f2[32] }
          value = { defs={0x080483b0,0x080483b3} expr=(extract[8] 16[32] 24[32] (add[32] v2615[32] 4[32])) }
          flags = { }
        address = { defs={0x080483b3} expr=0x080496f1[32] }
          value = { defs={0x080483b0,0x080483b3} expr=(extract[8] 8[32] 16[32] (add[32] v2615[32] 4[32])) }
          flags = { }
        address = { defs={0x080483b3} expr=0x080496f0[32] }
          value = { defs={0x080483b0,0x080483b3} expr=(extract[8] 0[32] 8[32] (add[32] v2615[32] 4[32])) }
          flags = { }
    init mem:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]
    registers:
        ax      = { defs={0x080483ba} expr=v2843[32] }
        cx      = { defs={} expr=v2794[32] }
        dx      = { defs={} expr=v2795[32] }
        bx      = { defs={} expr=v2796[32] }
        sp      = { defs={} expr=v2797[32] }
        bp      = { defs={} expr=v2798[32] }
        si      = { defs={} expr=v2799[32] }
        di      = { defs={} expr=v2800[32] }
        es      = { defs={} expr=v2801[16] }
        cs      = { defs={} expr=v2802[16] }
        ss      = { defs={} expr=v2803[16] }
        ds      = { defs={} expr=v2804[16] }
        fs      = { defs={} expr=v2805[16] }
        gs      = { defs={} expr=v2806[16] }
        cf      = { defs={} expr=v2807[1] }
        ?1      = { defs={} expr=v2808[1] }
        pf      = { defs={} expr=v2809[1] }
        ?3      = { defs={} expr=v2810[1] }
        af      = { defs={} expr=v2811[1] }
        ?5      = { defs={} expr=v2812[1] }
        zf      = { defs={} expr=v2813[1] }
        sf      = { defs={} expr=v2814[1] }
        tf      = { defs={} expr=v2815[1] }
        if      = { defs={} expr=v2816[1] }
        df      = { defs={} expr=v2817[1] }
        of      = { defs={} expr=v2818[1] }
        iopl0   = { defs={} expr=v2819[1] }
        iopl1   = { defs={} expr=v2820[1] }
        nt      = { defs={} expr=v2821[1] }
        ?15     = { defs={} expr=v2822[1] }
        rf      = { defs={} expr=v2823[1] }
        vm      = { defs={} expr=v2824[1] }
        ac      = { defs={} expr=v2825[1] }
        vif     = { defs={} expr=v2826[1] }
        vip     = { defs={} expr=v2827[1] }
        id      = { defs={} expr=v2828[1] }
        ?22     = { defs={} expr=v2829[1] }
        ?23     = { defs={} expr=v2830[1] }
        ?24     = { defs={} expr=v2831[1] }
        ?25     = { defs={} expr=v2832[1] }
        ?26     = { defs={} expr=v2833[1] }
        ?27     = { defs={} expr=v2834[1] }
        ?28     = { defs={} expr=v2835[1] }
        ?29     = { defs={} expr=v2836[1] }
        ?30     = { defs={} expr=v2837[1] }
        ?31     = { defs={} expr=v2838[1] }
        ip      = { defs={0x080483ba} expr=0x080483bf[32] }
    memory:
    init mem:
        address = { defs={0x080483ba} expr=0x080496f3[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2843[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=0x080496f2[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2843[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=0x080496f1[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2843[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=0x080496f0[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2843[32]) }
          flags = { rdonly }
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    registers:
        ax      = { defs={0x080483ba} expr=v2843[32] }
        cx      = { defs={} expr=v2794[32] }
        dx      = { defs={0x080483bf} expr=v2859[32] }
        bx      = { defs={} expr=v2796[32] }
        sp      = { defs={} expr=v2797[32] }
        bp      = { defs={} expr=v2798[32] }
        si      = { defs={} expr=v2799[32] }
        di      = { defs={} expr=v2800[32] }
        es      = { defs={} expr=v2801[16] }
        cs      = { defs={} expr=v2802[16] }
        ss      = { defs={} expr=v2803[16] }
        ds      = { defs={} expr=v2804[16] }
        fs      = { defs={} expr=v2805[16] }
        gs      = { defs={} expr=v2806[16] }
        cf      = { defs={} expr=v2807[1] }
        ?1      = { defs={} expr=v2808[1] }
        pf      = { defs={} expr=v2809[1] }
        ?3      = { defs={} expr=v2810[1] }
        af      = { defs={} expr=v2811[1] }
        ?5      = { defs={} expr=v2812[1] }
        zf      = { defs={} expr=v2813[1] }
        sf      = { defs={} expr=v2814[1] }
        tf      = { defs={} expr=v2815[1] }
        if      = { defs={} expr=v2816[1] }
        df      = { defs={} expr=v2817[1] }
        of      = { defs={} expr=v2818[1] }
        iopl0   = { defs={} expr=v2819[1] }
        iopl1   = { defs={} expr=v2820[1] }
        nt      = { defs={} expr=v2821[1] }
        ?15     = { defs={} expr=v2822[1] }
        rf      = { defs={} expr=v2823[1] }
        vm      = { defs={} expr=v2824[1] }
        ac      = { defs={} expr=v2825[1] }
        vif     = { defs={} expr=v2826[1] }
        vip     = { defs={} expr=v2827[1] }
        id      = { defs={} expr=v2828[1] }
        ?22     = { defs={} expr=v2829[1] }
        ?23     = { defs={} expr=v2830[1] }
        ?24     = { defs={} expr=v2831[1] }
        ?25     = { defs={} expr=v2832[1] }
        ?26     = { defs={} expr=v2833[1] }
        ?27     = { defs={} expr=v2834[1] }
        ?28     = { defs={} expr=v2835[1] }
        ?29     = { defs={} expr=v2836[1] }
        ?30     = { defs={} expr=v2837[1] }
        ?31     = { defs={} expr=v2838[1] }
        ip      = { defs={0x080483ba,0x080483bf} expr=0x080483c1[32] }
    memory:
    init mem:
        address = { defs={0x080483ba} expr=(add[32] v2843[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2859[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=(add[32] v2843[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2859[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=(add[32] v2843[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2859[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=v2843[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2859[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=0x080496f3[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2843[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=0x080496f2[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2843[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=0x080496f1[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2843[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=0x080496f0[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2843[32]) }
          flags = { rdonly }
0x80483c1:test   edx, edx
    registers:
        ax      = { defs={0x080483ba} expr=v2843[32] }
        cx      = { defs={} expr=v2794[32] }
        dx      = { defs={0x080483bf} expr=v2859[32] }
        bx      = { defs={} expr=v2796[32] }
        sp      = { defs={} expr=v2797[32] }
        bp      = { defs={} expr=v2798[32] }
        si      = { defs={} expr=v2799[32] }
        di      = { defs={} expr=v2800[32] }
        es      = { defs={} expr=v2801[16] }
        cs      = { defs={} expr=v2802[16] }
        ss      = { defs={} expr=v2803[16] }
        ds      = { defs={} expr=v2804[16] }
        fs      = { defs={} expr=v2805[16] }
        gs      = { defs={} expr=v2806[16] }
        cf      = { defs={0x080483c1} expr=0[1] }
        ?1      = { defs={} expr=v2808[1] }
        pf      = { defs={0x080483bf,0x080483c1} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v2859[32] v2859[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v2859[32] v2859[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v2859[32] v2859[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v2859[32] v2859[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v2859[32] v2859[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v2859[32] v2859[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v2859[32] v2859[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v2859[32] v2859[32]))))))) }
        ?3      = { defs={} expr=v2810[1] }
        af      = { defs={0x080483c1} expr=v2902[1] }
        ?5      = { defs={} expr=v2812[1] }
        zf      = { defs={0x080483bf,0x080483c1} expr=(zerop[1] (bv-and[32] v2859[32] v2859[32])) }
        sf      = { defs={0x080483bf,0x080483c1} expr=(extract[1] 31[32] 32[32] (bv-and[32] v2859[32] v2859[32])) }
        tf      = { defs={} expr=v2815[1] }
        if      = { defs={} expr=v2816[1] }
        df      = { defs={} expr=v2817[1] }
        of      = { defs={0x080483c1} expr=0[1] }
        iopl0   = { defs={} expr=v2819[1] }
        iopl1   = { defs={} expr=v2820[1] }
        nt      = { defs={} expr=v2821[1] }
        ?15     = { defs={} expr=v2822[1] }
        rf      = { defs={} expr=v2823[1] }
        vm      = { defs={} expr=v2824[1] }
        ac      = { defs={} expr=v2825[1] }
        vif     = { defs={} expr=v2826[1] }
        vip     = { defs={} expr=v2827[1] }
        id      = { defs={} expr=v2828[1] }
        ?22     = { defs={} expr=v2829[1] }
        ?23     = { defs={} expr=v2830[1] }
        ?24     = { defs={} expr=v2831[1] }
        ?25     = { defs={} expr=v2832[1] }
        ?26     = { defs={} expr=v2833[1] }
        ?27     = { defs={} expr=v2834[1] }
        ?28     = { defs={} expr=v2835[1] }
        ?29     = { defs={} expr=v2836[1] }
        ?30     = { defs={} expr=v2837[1] }
        ?31     = { defs={} expr=v2838[1] }
        ip      = { defs={0x080483ba,0x080483bf,0x080483c1} expr=0x080483c3[32] }
    memory:
    init mem:
        address = { defs={0x080483ba} expr=(add[32] v2843[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2859[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=(add[32] v2843[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2859[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=(add[32] v2843[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2859[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=v2843[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2859[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=0x080496f3[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2843[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=0x080496f2[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2843[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=0x080496f1[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2843[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=0x080496f0[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2843[32]) }
          flags = { rdonly }
0x80483c3:jne    0x080483b0<<Insn>>
    registers:
        ax      = { defs={0x080483ba} expr=v2843[32] }
        cx      = { defs={} expr=v2794[32] }
        dx      = { defs={0x080483bf} expr=v2859[32] }
        bx      = { defs={} expr=v2796[32] }
        sp      = { defs={} expr=v2797[32] }
        bp      = { defs={} expr=v2798[32] }
        si      = { defs={} expr=v2799[32] }
        di      = { defs={} expr=v2800[32] }
        es      = { defs={} expr=v2801[16] }
        cs      = { defs={} expr=v2802[16] }
        ss      = { defs={} expr=v2803[16] }
        ds      = { defs={} expr=v2804[16] }
        fs      = { defs={} expr=v2805[16] }
        gs      = { defs={} expr=v2806[16] }
        cf      = { defs={0x080483c1} expr=0[1] }
        ?1      = { defs={} expr=v2808[1] }
        pf      = { defs={0x080483bf,0x080483c1} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v2859[32] v2859[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v2859[32] v2859[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v2859[32] v2859[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v2859[32] v2859[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v2859[32] v2859[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v2859[32] v2859[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v2859[32] v2859[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v2859[32] v2859[32]))))))) }
        ?3      = { defs={} expr=v2810[1] }
        af      = { defs={0x080483c1} expr=v2902[1] }
        ?5      = { defs={} expr=v2812[1] }
        zf      = { defs={0x080483bf,0x080483c1} expr=(zerop[1] (bv-and[32] v2859[32] v2859[32])) }
        sf      = { defs={0x080483bf,0x080483c1} expr=(extract[1] 31[32] 32[32] (bv-and[32] v2859[32] v2859[32])) }
        tf      = { defs={} expr=v2815[1] }
        if      = { defs={} expr=v2816[1] }
        df      = { defs={} expr=v2817[1] }
        of      = { defs={0x080483c1} expr=0[1] }
        iopl0   = { defs={} expr=v2819[1] }
        iopl1   = { defs={} expr=v2820[1] }
        nt      = { defs={} expr=v2821[1] }
        ?15     = { defs={} expr=v2822[1] }
        rf      = { defs={} expr=v2823[1] }
        vm      = { defs={} expr=v2824[1] }
        ac      = { defs={} expr=v2825[1] }
        vif     = { defs={} expr=v2826[1] }
        vip     = { defs={} expr=v2827[1] }
        id      = { defs={} expr=v2828[1] }
        ?22     = { defs={} expr=v2829[1] }
        ?23     = { defs={} expr=v2830[1] }
        ?24     = { defs={} expr=v2831[1] }
        ?25     = { defs={} expr=v2832[1] }
        ?26     = { defs={} expr=v2833[1] }
        ?27     = { defs={} expr=v2834[1] }
        ?28     = { defs={} expr=v2835[1] }
        ?29     = { defs={} expr=v2836[1] }
        ?30     = { defs={} expr=v2837[1] }
        ?31     = { defs={} expr=v2838[1] }
        ip      = { defs={0x080483ba,0x080483bf,0x080483c1,0x080483c3} expr=(ite[32] (invert[1] (zerop[1] (bv-and[32] v2859[32] v2859[32]))) 0x080483b0[32] 0x080483c5[32]) }
    memory:
    init mem:
        address = { defs={0x080483ba} expr=(add[32] v2843[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2859[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=(add[32] v2843[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2859[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=(add[32] v2843[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2859[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=v2843[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2859[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=0x080496f3[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v2843[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=0x080496f2[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v2843[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=0x080496f1[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v2843[32]) }
          flags = { rdonly }
        address = { defs={0x080483ba} expr=0x080496f0[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v2843[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01
    registers:
        ax      = { defs={} expr=v2961[32] }
        cx      = { defs={} expr=v2962[32] }
        dx      = { defs={} expr=v2963[32] }
        bx      = { defs={} expr=v2964[32] }
        sp      = { defs={} expr=v2965[32] }
        bp      = { defs={} expr=v2966[32] }
        si      = { defs={} expr=v2967[32] }
        di      = { defs={} expr=v2968[32] }
        es      = { defs={} expr=v2969[16] }
        cs      = { defs={} expr=v2970[16] }
        ss      = { defs={} expr=v2971[16] }
        ds      = { defs={} expr=v2972[16] }
        fs      = { defs={} expr=v2973[16] }
        gs      = { defs={} expr=v2974[16] }
        cf      = { defs={} expr=v2975[1] }
        ?1      = { defs={} expr=v2976[1] }
        pf      = { defs={} expr=v2977[1] }
        ?3      = { defs={} expr=v2978[1] }
        af      = { defs={} expr=v2979[1] }
        ?5      = { defs={} expr=v2980[1] }
        zf      = { defs={} expr=v2981[1] }
        sf      = { defs={} expr=v2982[1] }
        tf      = { defs={} expr=v2983[1] }
        if      = { defs={} expr=v2984[1] }
        df      = { defs={} expr=v2985[1] }
        of      = { defs={} expr=v2986[1] }
        iopl0   = { defs={} expr=v2987[1] }
        iopl1   = { defs={} expr=v2988[1] }
        nt      = { defs={} expr=v2989[1] }
        ?15     = { defs={} expr=v2990[1] }
        rf      = { defs={} expr=v2991[1] }
        vm      = { defs={} expr=v2992[1] }
        ac      = { defs={} expr=v2993[1] }
        vif     = { defs={} expr=v2994[1] }
        vip     = { defs={} expr=v2995[1] }
        id      = { defs={} expr=v2996[1] }
        ?22     = { defs={} expr=v2997[1] }
        ?23     = { defs={} expr=v2998[1] }
        ?24     = { defs={} expr=v2999[1] }
        ?25     = { defs={} expr=v3000[1] }
        ?26     = { defs={} expr=v3001[1] }
        ?27     = { defs={} expr=v3002[1] }
        ?28     = { defs={} expr=v3003[1] }
        ?29     = { defs={} expr=v3004[1] }
        ?30     = { defs={} expr=v3005[1] }
        ?31     = { defs={} expr=v3006[1] }
        ip      = { defs={0x080483c5} expr=0x080483cc[32] }
    memory:
        address = { defs={0x080483c5} expr=0x080496f4[32] }
          value = { defs={0x080483c5} expr=1[8] }
          flags = { }
    init mem:
0x80483cc:leave  
    registers:
        ax      = { defs={} expr=v2961[32] }
        cx      = { defs={} expr=v2962[32] }
        dx      = { defs={} expr=v2963[32] }
        bx      = { defs={} expr=v2964[32] }
        sp      = { defs={0x080483cc} expr=(add[32] v2966[32] 4[32]) }
        bp      = { defs={0x080483cc} expr=v3020[32] }
        si      = { defs={} expr=v2967[32] }
        di      = { defs={} expr=v2968[32] }
        es      = { defs={} expr=v2969[16] }
        cs      = { defs={} expr=v2970[16] }
        ss      = { defs={} expr=v2971[16] }
        ds      = { defs={} expr=v2972[16] }
        fs      = { defs={} expr=v2973[16] }
        gs      = { defs={} expr=v2974[16] }
        cf      = { defs={} expr=v2975[1] }
        ?1      = { defs={} expr=v2976[1] }
        pf      = { defs={} expr=v2977[1] }
        ?3      = { defs={} expr=v2978[1] }
        af      = { defs={} expr=v2979[1] }
        ?5      = { defs={} expr=v2980[1] }
        zf      = { defs={} expr=v2981[1] }
        sf      = { defs={} expr=v2982[1] }
        tf      = { defs={} expr=v2983[1] }
        if      = { defs={} expr=v2984[1] }
        df      = { defs={} expr=v2985[1] }
        of      = { defs={} expr=v2986[1] }
        iopl0   = { defs={} expr=v2987[1] }
        iopl1   = { defs={} expr=v2988[1] }
        nt      = { defs={} expr=v2989[1] }
        ?15     = { defs={} expr=v2990[1] }
        rf      = { defs={} expr=v2991[1] }
        vm      = { defs={} expr=v2992[1] }
        ac      = { defs={} expr=v2993[1] }
        vif     = { defs={} expr=v2994[1] }
        vip     = { defs={} expr=v2995[1] }
        id      = { defs={} expr=v2996[1] }
        ?22     = { defs={} expr=v2997[1] }
        ?23     = { defs={} expr=v2998[1] }
        ?24     = { defs={} expr=v2999[1] }
        ?25     = { defs={} expr=v3000[1] }
        ?26     = { defs={} expr=v3001[1] }
        ?27     = { defs={} expr=v3002[1] }
        ?28     = { defs={} expr=v3003[1] }
        ?29     = { defs={} expr=v3004[1] }
        ?30     = { defs={} expr=v3005[1] }
        ?31     = { defs={} expr=v3006[1] }
        ip      = { defs={0x080483c5,0x080483cc} expr=0x080483cd[32] }
    memory:
        address = { defs={0x080483c5} expr=0x080496f4[32] }
          value = { defs={0x080483c5} expr=1[8] }
          flags = { }
    init mem:
        address = { defs={0x080483cc} expr=(add[32] v2966[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v3020[32]) }
          flags = { rdonly }
        address = { defs={0x080483cc} expr=(add[32] v2966[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v3020[32]) }
          flags = { rdonly }
        address = { defs={0x080483cc} expr=(add[32] v2966[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v3020[32]) }
          flags = { rdonly }
        address = { defs={0x080483cc} expr=v2966[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v3020[32]) }
          flags = { rdonly }
0x80483cd:ret    
    registers:
        ax      = { defs={} expr=v2961[32] }
        cx      = { defs={} expr=v2962[32] }
        dx      = { defs={} expr=v2963[32] }
        bx      = { defs={} expr=v2964[32] }
        sp      = { defs={0x080483cc,0x080483cd} expr=(add[32] (add[32] v2966[32] 4[32]) 4[32]) }
        bp      = { defs={0x080483cc} expr=v3020[32] }
        si      = { defs={} expr=v2967[32] }
        di      = { defs={} expr=v2968[32] }
        es      = { defs={} expr=v2969[16] }
        cs      = { defs={} expr=v2970[16] }
        ss      = { defs={} expr=v2971[16] }
        ds      = { defs={} expr=v2972[16] }
        fs      = { defs={} expr=v2973[16] }
        gs      = { defs={} expr=v2974[16] }
        cf      = { defs={} expr=v2975[1] }
        ?1      = { defs={} expr=v2976[1] }
        pf      = { defs={} expr=v2977[1] }
        ?3      = { defs={} expr=v2978[1] }
        af      = { defs={} expr=v2979[1] }
        ?5      = { defs={} expr=v2980[1] }
        zf      = { defs={} expr=v2981[1] }
        sf      = { defs={} expr=v2982[1] }
        tf      = { defs={} expr=v2983[1] }
        if      = { defs={} expr=v2984[1] }
        df      = { defs={} expr=v2985[1] }
        of      = { defs={} expr=v2986[1] }
        iopl0   = { defs={} expr=v2987[1] }
        iopl1   = { defs={} expr=v2988[1] }
        nt      = { defs={} expr=v2989[1] }
        ?15     = { defs={} expr=v2990[1] }
        rf      = { defs={} expr=v2991[1] }
        vm      = { defs={} expr=v2992[1] }
        ac      = { defs={} expr=v2993[1] }
        vif     = { defs={} expr=v2994[1] }
        vip     = { defs={} expr=v2995[1] }
        id      = { defs={} expr=v2996[1] }
        ?22     = { defs={} expr=v2997[1] }
        ?23     = { defs={} expr=v2998[1] }
        ?24     = { defs={} expr=v2999[1] }
        ?25     = { defs={} expr=v3000[1] }
        ?26     = { defs={} expr=v3001[1] }
        ?27     = { defs={} expr=v3002[1] }
        ?28     = { defs={} expr=v3003[1] }
        ?29     = { defs={} expr=v3004[1] }
        ?30     = { defs={} expr=v3005[1] }
        ?31     = { defs={} expr=v3006[1] }
        ip      = { defs={0x080483cd} expr=v3039[32] }
    memory:
        address = { defs={0x080483c5} expr=0x080496f4[32] }
          value = { defs={0x080483c5} expr=1[8] }
          flags = { }
    init mem:
        address = { defs={0x080483cc} expr=(add[32] (add[32] v2966[32] 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v3039[32]) }
          flags = { rdonly }
        address = { defs={0x080483cc} expr=(add[32] (add[32] v2966[32] 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v3039[32]) }
          flags = { rdonly }
        address = { defs={0x080483cc} expr=(add[32] (add[32] v2966[32] 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v3039[32]) }
          flags = { rdonly }
        address = { defs={0x080483cc} expr=(add[32] v2966[32] 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v3039[32]) }
          flags = { rdonly }
        address = { defs={0x080483cc} expr=(add[32] v2966[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v3020[32]) }
          flags = { rdonly }
        address = { defs={0x080483cc} expr=(add[32] v2966[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v3020[32]) }
          flags = { rdonly }
        address = { defs={0x080483cc} expr=(add[32] v2966[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v3020[32]) }
          flags = { rdonly }
        address = { defs={0x080483cc} expr=v2966[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v3020[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483d0:push   ebp
    registers:
        ax      = { defs={} expr=v3100[32] }
        cx      = { defs={} expr=v3101[32] }
        dx      = { defs={} expr=v3102[32] }
        bx      = { defs={} expr=v3103[32] }
        sp      = { defs={0x080483d0} expr=(add[32] v3104[32] -4[32]) }
        bp      = { defs={} expr=v3105[32] }
        si      = { defs={} expr=v3106[32] }
        di      = { defs={} expr=v3107[32] }
        es      = { defs={} expr=v3108[16] }
        cs      = { defs={} expr=v3109[16] }
        ss      = { defs={} expr=v3110[16] }
        ds      = { defs={} expr=v3111[16] }
        fs      = { defs={} expr=v3112[16] }
        gs      = { defs={} expr=v3113[16] }
        cf      = { defs={} expr=v3114[1] }
        ?1      = { defs={} expr=v3115[1] }
        pf      = { defs={} expr=v3116[1] }
        ?3      = { defs={} expr=v3117[1] }
        af      = { defs={} expr=v3118[1] }
        ?5      = { defs={} expr=v3119[1] }
        zf      = { defs={} expr=v3120[1] }
        sf      = { defs={} expr=v3121[1] }
        tf      = { defs={} expr=v3122[1] }
        if      = { defs={} expr=v3123[1] }
        df      = { defs={} expr=v3124[1] }
        of      = { defs={} expr=v3125[1] }
        iopl0   = { defs={} expr=v3126[1] }
        iopl1   = { defs={} expr=v3127[1] }
        nt      = { defs={} expr=v3128[1] }
        ?15     = { defs={} expr=v3129[1] }
        rf      = { defs={} expr=v3130[1] }
        vm      = { defs={} expr=v3131[1] }
        ac      = { defs={} expr=v3132[1] }
        vif     = { defs={} expr=v3133[1] }
        vip     = { defs={} expr=v3134[1] }
        id      = { defs={} expr=v3135[1] }
        ?22     = { defs={} expr=v3136[1] }
        ?23     = { defs={} expr=v3137[1] }
        ?24     = { defs={} expr=v3138[1] }
        ?25     = { defs={} expr=v3139[1] }
        ?26     = { defs={} expr=v3140[1] }
        ?27     = { defs={} expr=v3141[1] }
        ?28     = { defs={} expr=v3142[1] }
        ?29     = { defs={} expr=v3143[1] }
        ?30     = { defs={} expr=v3144[1] }
        ?31     = { defs={} expr=v3145[1] }
        ip      = { defs={0x080483d0} expr=0x080483d1[32] }
    memory:
        address = { defs={0x080483d0} expr=(add[32] (add[32] v3104[32] -4[32]) 3[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 24[32] 32[32] v3105[32]) }
          flags = { }
        address = { defs={0x080483d0} expr=(add[32] (add[32] v3104[32] -4[32]) 2[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 16[32] 24[32] v3105[32]) }
          flags = { }
        address = { defs={0x080483d0} expr=(add[32] (add[32] v3104[32] -4[32]) 1[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 8[32] 16[32] v3105[32]) }
          flags = { }
        address = { defs={0x080483d0} expr=(add[32] v3104[32] -4[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 0[32] 8[32] v3105[32]) }
          flags = { }
    init mem:
0x80483d1:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v3100[32] }
        cx      = { defs={} expr=v3101[32] }
        dx      = { defs={} expr=v3102[32] }
        bx      = { defs={} expr=v3103[32] }
        sp      = { defs={0x080483d0} expr=(add[32] v3104[32] -4[32]) }
        bp      = { defs={0x080483d0,0x080483d1} expr=(add[32] v3104[32] -4[32]) }
        si      = { defs={} expr=v3106[32] }
        di      = { defs={} expr=v3107[32] }
        es      = { defs={} expr=v3108[16] }
        cs      = { defs={} expr=v3109[16] }
        ss      = { defs={} expr=v3110[16] }
        ds      = { defs={} expr=v3111[16] }
        fs      = { defs={} expr=v3112[16] }
        gs      = { defs={} expr=v3113[16] }
        cf      = { defs={} expr=v3114[1] }
        ?1      = { defs={} expr=v3115[1] }
        pf      = { defs={} expr=v3116[1] }
        ?3      = { defs={} expr=v3117[1] }
        af      = { defs={} expr=v3118[1] }
        ?5      = { defs={} expr=v3119[1] }
        zf      = { defs={} expr=v3120[1] }
        sf      = { defs={} expr=v3121[1] }
        tf      = { defs={} expr=v3122[1] }
        if      = { defs={} expr=v3123[1] }
        df      = { defs={} expr=v3124[1] }
        of      = { defs={} expr=v3125[1] }
        iopl0   = { defs={} expr=v3126[1] }
        iopl1   = { defs={} expr=v3127[1] }
        nt      = { defs={} expr=v3128[1] }
        ?15     = { defs={} expr=v3129[1] }
        rf      = { defs={} expr=v3130[1] }
        vm      = { defs={} expr=v3131[1] }
        ac      = { defs={} expr=v3132[1] }
        vif     = { defs={} expr=v3133[1] }
        vip     = { defs={} expr=v3134[1] }
        id      = { defs={} expr=v3135[1] }
        ?22     = { defs={} expr=v3136[1] }
        ?23     = { defs={} expr=v3137[1] }
        ?24     = { defs={} expr=v3138[1] }
        ?25     = { defs={} expr=v3139[1] }
        ?26     = { defs={} expr=v3140[1] }
        ?27     = { defs={} expr=v3141[1] }
        ?28     = { defs={} expr=v3142[1] }
        ?29     = { defs={} expr=v3143[1] }
        ?30     = { defs={} expr=v3144[1] }
        ?31     = { defs={} expr=v3145[1] }
        ip      = { defs={0x080483d0,0x080483d1} expr=0x080483d3[32] }
    memory:
        address = { defs={0x080483d0} expr=(add[32] (add[32] v3104[32] -4[32]) 3[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 24[32] 32[32] v3105[32]) }
          flags = { }
        address = { defs={0x080483d0} expr=(add[32] (add[32] v3104[32] -4[32]) 2[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 16[32] 24[32] v3105[32]) }
          flags = { }
        address = { defs={0x080483d0} expr=(add[32] (add[32] v3104[32] -4[32]) 1[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 8[32] 16[32] v3105[32]) }
          flags = { }
        address = { defs={0x080483d0} expr=(add[32] v3104[32] -4[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 0[32] 8[32] v3105[32]) }
          flags = { }
    init mem:
0x80483d3:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v3100[32] }
        cx      = { defs={} expr=v3101[32] }
        dx      = { defs={} expr=v3102[32] }
        bx      = { defs={} expr=v3103[32] }
        sp      = { defs={0x080483d0,0x080483d3} expr=(add[32] (add[32] v3104[32] -4[32]) -8[32]) }
        bp      = { defs={0x080483d0,0x080483d1} expr=(add[32] v3104[32] -4[32]) }
        si      = { defs={} expr=v3106[32] }
        di      = { defs={} expr=v3107[32] }
        es      = { defs={} expr=v3108[16] }
        cs      = { defs={} expr=v3109[16] }
        ss      = { defs={} expr=v3110[16] }
        ds      = { defs={} expr=v3111[16] }
        fs      = { defs={} expr=v3112[16] }
        gs      = { defs={} expr=v3113[16] }
        cf      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3104[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v3104[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v3115[1] }
        pf      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3104[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3104[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3104[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3104[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3104[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3104[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3104[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3104[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v3117[1] }
        af      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3104[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v3104[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v3119[1] }
        zf      = { defs={0x080483d0,0x080483d3} expr=(zerop[1] (add[32] (add[32] v3104[32] -4[32]) -8[32])) }
        sf      = { defs={0x080483d0,0x080483d3} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v3104[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v3122[1] }
        if      = { defs={} expr=v3123[1] }
        df      = { defs={} expr=v3124[1] }
        of      = { defs={0x080483d0,0x080483d3} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3104[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v3104[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3104[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v3104[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v3126[1] }
        iopl1   = { defs={} expr=v3127[1] }
        nt      = { defs={} expr=v3128[1] }
        ?15     = { defs={} expr=v3129[1] }
        rf      = { defs={} expr=v3130[1] }
        vm      = { defs={} expr=v3131[1] }
        ac      = { defs={} expr=v3132[1] }
        vif     = { defs={} expr=v3133[1] }
        vip     = { defs={} expr=v3134[1] }
        id      = { defs={} expr=v3135[1] }
        ?22     = { defs={} expr=v3136[1] }
        ?23     = { defs={} expr=v3137[1] }
        ?24     = { defs={} expr=v3138[1] }
        ?25     = { defs={} expr=v3139[1] }
        ?26     = { defs={} expr=v3140[1] }
        ?27     = { defs={} expr=v3141[1] }
        ?28     = { defs={} expr=v3142[1] }
        ?29     = { defs={} expr=v3143[1] }
        ?30     = { defs={} expr=v3144[1] }
        ?31     = { defs={} expr=v3145[1] }
        ip      = { defs={0x080483d0,0x080483d1,0x080483d3} expr=0x080483d6[32] }
    memory:
        address = { defs={0x080483d0} expr=(add[32] (add[32] v3104[32] -4[32]) 3[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 24[32] 32[32] v3105[32]) }
          flags = { }
        address = { defs={0x080483d0} expr=(add[32] (add[32] v3104[32] -4[32]) 2[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 16[32] 24[32] v3105[32]) }
          flags = { }
        address = { defs={0x080483d0} expr=(add[32] (add[32] v3104[32] -4[32]) 1[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 8[32] 16[32] v3105[32]) }
          flags = { }
        address = { defs={0x080483d0} expr=(add[32] v3104[32] -4[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 0[32] 8[32] v3105[32]) }
          flags = { }
    init mem:
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8<.jcr>]
    registers:
        ax      = { defs={0x080483d6} expr=v3222[32] }
        cx      = { defs={} expr=v3101[32] }
        dx      = { defs={} expr=v3102[32] }
        bx      = { defs={} expr=v3103[32] }
        sp      = { defs={0x080483d0,0x080483d3} expr=(add[32] (add[32] v3104[32] -4[32]) -8[32]) }
        bp      = { defs={0x080483d0,0x080483d1} expr=(add[32] v3104[32] -4[32]) }
        si      = { defs={} expr=v3106[32] }
        di      = { defs={} expr=v3107[32] }
        es      = { defs={} expr=v3108[16] }
        cs      = { defs={} expr=v3109[16] }
        ss      = { defs={} expr=v3110[16] }
        ds      = { defs={} expr=v3111[16] }
        fs      = { defs={} expr=v3112[16] }
        gs      = { defs={} expr=v3113[16] }
        cf      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3104[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v3104[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v3115[1] }
        pf      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3104[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3104[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3104[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3104[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3104[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3104[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3104[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3104[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v3117[1] }
        af      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3104[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v3104[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v3119[1] }
        zf      = { defs={0x080483d0,0x080483d3} expr=(zerop[1] (add[32] (add[32] v3104[32] -4[32]) -8[32])) }
        sf      = { defs={0x080483d0,0x080483d3} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v3104[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v3122[1] }
        if      = { defs={} expr=v3123[1] }
        df      = { defs={} expr=v3124[1] }
        of      = { defs={0x080483d0,0x080483d3} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3104[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v3104[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3104[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v3104[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v3126[1] }
        iopl1   = { defs={} expr=v3127[1] }
        nt      = { defs={} expr=v3128[1] }
        ?15     = { defs={} expr=v3129[1] }
        rf      = { defs={} expr=v3130[1] }
        vm      = { defs={} expr=v3131[1] }
        ac      = { defs={} expr=v3132[1] }
        vif     = { defs={} expr=v3133[1] }
        vip     = { defs={} expr=v3134[1] }
        id      = { defs={} expr=v3135[1] }
        ?22     = { defs={} expr=v3136[1] }
        ?23     = { defs={} expr=v3137[1] }
        ?24     = { defs={} expr=v3138[1] }
        ?25     = { defs={} expr=v3139[1] }
        ?26     = { defs={} expr=v3140[1] }
        ?27     = { defs={} expr=v3141[1] }
        ?28     = { defs={} expr=v3142[1] }
        ?29     = { defs={} expr=v3143[1] }
        ?30     = { defs={} expr=v3144[1] }
        ?31     = { defs={} expr=v3145[1] }
        ip      = { defs={0x080483d0,0x080483d1,0x080483d3,0x080483d6} expr=0x080483db[32] }
    memory:
        address = { defs={0x080483d0} expr=(add[32] (add[32] v3104[32] -4[32]) 3[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 24[32] 32[32] v3105[32]) }
          flags = { }
        address = { defs={0x080483d0} expr=(add[32] (add[32] v3104[32] -4[32]) 2[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 16[32] 24[32] v3105[32]) }
          flags = { }
        address = { defs={0x080483d0} expr=(add[32] (add[32] v3104[32] -4[32]) 1[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 8[32] 16[32] v3105[32]) }
          flags = { }
        address = { defs={0x080483d0} expr=(add[32] v3104[32] -4[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 0[32] 8[32] v3105[32]) }
          flags = { }
    init mem:
        address = { defs={0x080483d6} expr=0x080495fb[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v3222[32]) }
          flags = { rdonly }
        address = { defs={0x080483d6} expr=0x080495fa[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v3222[32]) }
          flags = { rdonly }
        address = { defs={0x080483d6} expr=0x080495f9[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v3222[32]) }
          flags = { rdonly }
        address = { defs={0x080483d6} expr=0x080495f8[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v3222[32]) }
          flags = { rdonly }
0x80483db:test   eax, eax
    registers:
        ax      = { defs={0x080483d6} expr=v3222[32] }
        cx      = { defs={} expr=v3101[32] }
        dx      = { defs={} expr=v3102[32] }
        bx      = { defs={} expr=v3103[32] }
        sp      = { defs={0x080483d0,0x080483d3} expr=(add[32] (add[32] v3104[32] -4[32]) -8[32]) }
        bp      = { defs={0x080483d0,0x080483d1} expr=(add[32] v3104[32] -4[32]) }
        si      = { defs={} expr=v3106[32] }
        di      = { defs={} expr=v3107[32] }
        es      = { defs={} expr=v3108[16] }
        cs      = { defs={} expr=v3109[16] }
        ss      = { defs={} expr=v3110[16] }
        ds      = { defs={} expr=v3111[16] }
        fs      = { defs={} expr=v3112[16] }
        gs      = { defs={} expr=v3113[16] }
        cf      = { defs={0x080483db} expr=0[1] }
        ?1      = { defs={} expr=v3115[1] }
        pf      = { defs={0x080483d6,0x080483db} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v3222[32] v3222[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v3222[32] v3222[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v3222[32] v3222[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v3222[32] v3222[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v3222[32] v3222[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v3222[32] v3222[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v3222[32] v3222[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v3222[32] v3222[32]))))))) }
        ?3      = { defs={} expr=v3117[1] }
        af      = { defs={0x080483db} expr=v3265[1] }
        ?5      = { defs={} expr=v3119[1] }
        zf      = { defs={0x080483d6,0x080483db} expr=(zerop[1] (bv-and[32] v3222[32] v3222[32])) }
        sf      = { defs={0x080483d6,0x080483db} expr=(extract[1] 31[32] 32[32] (bv-and[32] v3222[32] v3222[32])) }
        tf      = { defs={} expr=v3122[1] }
        if      = { defs={} expr=v3123[1] }
        df      = { defs={} expr=v3124[1] }
        of      = { defs={0x080483db} expr=0[1] }
        iopl0   = { defs={} expr=v3126[1] }
        iopl1   = { defs={} expr=v3127[1] }
        nt      = { defs={} expr=v3128[1] }
        ?15     = { defs={} expr=v3129[1] }
        rf      = { defs={} expr=v3130[1] }
        vm      = { defs={} expr=v3131[1] }
        ac      = { defs={} expr=v3132[1] }
        vif     = { defs={} expr=v3133[1] }
        vip     = { defs={} expr=v3134[1] }
        id      = { defs={} expr=v3135[1] }
        ?22     = { defs={} expr=v3136[1] }
        ?23     = { defs={} expr=v3137[1] }
        ?24     = { defs={} expr=v3138[1] }
        ?25     = { defs={} expr=v3139[1] }
        ?26     = { defs={} expr=v3140[1] }
        ?27     = { defs={} expr=v3141[1] }
        ?28     = { defs={} expr=v3142[1] }
        ?29     = { defs={} expr=v3143[1] }
        ?30     = { defs={} expr=v3144[1] }
        ?31     = { defs={} expr=v3145[1] }
        ip      = { defs={0x080483d0,0x080483d1,0x080483d3,0x080483d6,0x080483db} expr=0x080483dd[32] }
    memory:
        address = { defs={0x080483d0} expr=(add[32] (add[32] v3104[32] -4[32]) 3[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 24[32] 32[32] v3105[32]) }
          flags = { }
        address = { defs={0x080483d0} expr=(add[32] (add[32] v3104[32] -4[32]) 2[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 16[32] 24[32] v3105[32]) }
          flags = { }
        address = { defs={0x080483d0} expr=(add[32] (add[32] v3104[32] -4[32]) 1[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 8[32] 16[32] v3105[32]) }
          flags = { }
        address = { defs={0x080483d0} expr=(add[32] v3104[32] -4[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 0[32] 8[32] v3105[32]) }
          flags = { }
    init mem:
        address = { defs={0x080483d6} expr=0x080495fb[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v3222[32]) }
          flags = { rdonly }
        address = { defs={0x080483d6} expr=0x080495fa[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v3222[32]) }
          flags = { rdonly }
        address = { defs={0x080483d6} expr=0x080495f9[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v3222[32]) }
          flags = { rdonly }
        address = { defs={0x080483d6} expr=0x080495f8[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v3222[32]) }
          flags = { rdonly }
0x80483dd:je     0x08048400<<Insn>>
    registers:
        ax      = { defs={0x080483d6} expr=v3222[32] }
        cx      = { defs={} expr=v3101[32] }
        dx      = { defs={} expr=v3102[32] }
        bx      = { defs={} expr=v3103[32] }
        sp      = { defs={0x080483d0,0x080483d3} expr=(add[32] (add[32] v3104[32] -4[32]) -8[32]) }
        bp      = { defs={0x080483d0,0x080483d1} expr=(add[32] v3104[32] -4[32]) }
        si      = { defs={} expr=v3106[32] }
        di      = { defs={} expr=v3107[32] }
        es      = { defs={} expr=v3108[16] }
        cs      = { defs={} expr=v3109[16] }
        ss      = { defs={} expr=v3110[16] }
        ds      = { defs={} expr=v3111[16] }
        fs      = { defs={} expr=v3112[16] }
        gs      = { defs={} expr=v3113[16] }
        cf      = { defs={0x080483db} expr=0[1] }
        ?1      = { defs={} expr=v3115[1] }
        pf      = { defs={0x080483d6,0x080483db} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v3222[32] v3222[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v3222[32] v3222[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v3222[32] v3222[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v3222[32] v3222[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v3222[32] v3222[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v3222[32] v3222[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v3222[32] v3222[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v3222[32] v3222[32]))))))) }
        ?3      = { defs={} expr=v3117[1] }
        af      = { defs={0x080483db} expr=v3265[1] }
        ?5      = { defs={} expr=v3119[1] }
        zf      = { defs={0x080483d6,0x080483db} expr=(zerop[1] (bv-and[32] v3222[32] v3222[32])) }
        sf      = { defs={0x080483d6,0x080483db} expr=(extract[1] 31[32] 32[32] (bv-and[32] v3222[32] v3222[32])) }
        tf      = { defs={} expr=v3122[1] }
        if      = { defs={} expr=v3123[1] }
        df      = { defs={} expr=v3124[1] }
        of      = { defs={0x080483db} expr=0[1] }
        iopl0   = { defs={} expr=v3126[1] }
        iopl1   = { defs={} expr=v3127[1] }
        nt      = { defs={} expr=v3128[1] }
        ?15     = { defs={} expr=v3129[1] }
        rf      = { defs={} expr=v3130[1] }
        vm      = { defs={} expr=v3131[1] }
        ac      = { defs={} expr=v3132[1] }
        vif     = { defs={} expr=v3133[1] }
        vip     = { defs={} expr=v3134[1] }
        id      = { defs={} expr=v3135[1] }
        ?22     = { defs={} expr=v3136[1] }
        ?23     = { defs={} expr=v3137[1] }
        ?24     = { defs={} expr=v3138[1] }
        ?25     = { defs={} expr=v3139[1] }
        ?26     = { defs={} expr=v3140[1] }
        ?27     = { defs={} expr=v3141[1] }
        ?28     = { defs={} expr=v3142[1] }
        ?29     = { defs={} expr=v3143[1] }
        ?30     = { defs={} expr=v3144[1] }
        ?31     = { defs={} expr=v3145[1] }
        ip      = { defs={0x080483d0,0x080483d1,0x080483d3,0x080483d6,0x080483db,0x080483dd} expr=(ite[32] (zerop[1] (bv-and[32] v3222[32] v3222[32])) 0x08048400[32] 0x080483df[32]) }
    memory:
        address = { defs={0x080483d0} expr=(add[32] (add[32] v3104[32] -4[32]) 3[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 24[32] 32[32] v3105[32]) }
          flags = { }
        address = { defs={0x080483d0} expr=(add[32] (add[32] v3104[32] -4[32]) 2[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 16[32] 24[32] v3105[32]) }
          flags = { }
        address = { defs={0x080483d0} expr=(add[32] (add[32] v3104[32] -4[32]) 1[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 8[32] 16[32] v3105[32]) }
          flags = { }
        address = { defs={0x080483d0} expr=(add[32] v3104[32] -4[32]) }
          value = { defs={0x080483d0} expr=(extract[8] 0[32] 8[32] v3105[32]) }
          flags = { }
    init mem:
        address = { defs={0x080483d6} expr=0x080495fb[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v3222[32]) }
          flags = { rdonly }
        address = { defs={0x080483d6} expr=0x080495fa[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v3222[32]) }
          flags = { rdonly }
        address = { defs={0x080483d6} expr=0x080495f9[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v3222[32]) }
          flags = { rdonly }
        address = { defs={0x080483d6} expr=0x080495f8[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v3222[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
    registers:
        ax      = { defs={0x080483df} expr=0[32] }
        cx      = { defs={} expr=v3324[32] }
        dx      = { defs={} expr=v3325[32] }
        bx      = { defs={} expr=v3326[32] }
        sp      = { defs={} expr=v3327[32] }
        bp      = { defs={} expr=v3328[32] }
        si      = { defs={} expr=v3329[32] }
        di      = { defs={} expr=v3330[32] }
        es      = { defs={} expr=v3331[16] }
        cs      = { defs={} expr=v3332[16] }
        ss      = { defs={} expr=v3333[16] }
        ds      = { defs={} expr=v3334[16] }
        fs      = { defs={} expr=v3335[16] }
        gs      = { defs={} expr=v3336[16] }
        cf      = { defs={} expr=v3337[1] }
        ?1      = { defs={} expr=v3338[1] }
        pf      = { defs={} expr=v3339[1] }
        ?3      = { defs={} expr=v3340[1] }
        af      = { defs={} expr=v3341[1] }
        ?5      = { defs={} expr=v3342[1] }
        zf      = { defs={} expr=v3343[1] }
        sf      = { defs={} expr=v3344[1] }
        tf      = { defs={} expr=v3345[1] }
        if      = { defs={} expr=v3346[1] }
        df      = { defs={} expr=v3347[1] }
        of      = { defs={} expr=v3348[1] }
        iopl0   = { defs={} expr=v3349[1] }
        iopl1   = { defs={} expr=v3350[1] }
        nt      = { defs={} expr=v3351[1] }
        ?15     = { defs={} expr=v3352[1] }
        rf      = { defs={} expr=v3353[1] }
        vm      = { defs={} expr=v3354[1] }
        ac      = { defs={} expr=v3355[1] }
        vif     = { defs={} expr=v3356[1] }
        vip     = { defs={} expr=v3357[1] }
        id      = { defs={} expr=v3358[1] }
        ?22     = { defs={} expr=v3359[1] }
        ?23     = { defs={} expr=v3360[1] }
        ?24     = { defs={} expr=v3361[1] }
        ?25     = { defs={} expr=v3362[1] }
        ?26     = { defs={} expr=v3363[1] }
        ?27     = { defs={} expr=v3364[1] }
        ?28     = { defs={} expr=v3365[1] }
        ?29     = { defs={} expr=v3366[1] }
        ?30     = { defs={} expr=v3367[1] }
        ?31     = { defs={} expr=v3368[1] }
        ip      = { defs={0x080483df} expr=0x080483e4[32] }
    memory:
    init mem:
0x80483e4:test   eax, eax
    registers:
        ax      = { defs={0x080483df} expr=0[32] }
        cx      = { defs={} expr=v3324[32] }
        dx      = { defs={} expr=v3325[32] }
        bx      = { defs={} expr=v3326[32] }
        sp      = { defs={} expr=v3327[32] }
        bp      = { defs={} expr=v3328[32] }
        si      = { defs={} expr=v3329[32] }
        di      = { defs={} expr=v3330[32] }
        es      = { defs={} expr=v3331[16] }
        cs      = { defs={} expr=v3332[16] }
        ss      = { defs={} expr=v3333[16] }
        ds      = { defs={} expr=v3334[16] }
        fs      = { defs={} expr=v3335[16] }
        gs      = { defs={} expr=v3336[16] }
        cf      = { defs={0x080483e4} expr=0[1] }
        ?1      = { defs={} expr=v3338[1] }
        pf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        ?3      = { defs={} expr=v3340[1] }
        af      = { defs={0x080483e4} expr=v3405[1] }
        ?5      = { defs={} expr=v3342[1] }
        zf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        sf      = { defs={0x080483df,0x080483e4} expr=0[1] }
        tf      = { defs={} expr=v3345[1] }
        if      = { defs={} expr=v3346[1] }
        df      = { defs={} expr=v3347[1] }
        of      = { defs={0x080483e4} expr=0[1] }
        iopl0   = { defs={} expr=v3349[1] }
        iopl1   = { defs={} expr=v3350[1] }
        nt      = { defs={} expr=v3351[1] }
        ?15     = { defs={} expr=v3352[1] }
        rf      = { defs={} expr=v3353[1] }
        vm      = { defs={} expr=v3354[1] }
        ac      = { defs={} expr=v3355[1] }
        vif     = { defs={} expr=v3356[1] }
        vip     = { defs={} expr=v3357[1] }
        id      = { defs={} expr=v3358[1] }
        ?22     = { defs={} expr=v3359[1] }
        ?23     = { defs={} expr=v3360[1] }
        ?24     = { defs={} expr=v3361[1] }
        ?25     = { defs={} expr=v3362[1] }
        ?26     = { defs={} expr=v3363[1] }
        ?27     = { defs={} expr=v3364[1] }
        ?28     = { defs={} expr=v3365[1] }
        ?29     = { defs={} expr=v3366[1] }
        ?30     = { defs={} expr=v3367[1] }
        ?31     = { defs={} expr=v3368[1] }
        ip      = { defs={0x080483df,0x080483e4} expr=0x080483e6[32] }
    memory:
    init mem:
0x80483e6:je     0x08048400<<Insn>>
    registers:
        ax      = { defs={0x080483df} expr=0[32] }
        cx      = { defs={} expr=v3324[32] }
        dx      = { defs={} expr=v3325[32] }
        bx      = { defs={} expr=v3326[32] }
        sp      = { defs={} expr=v3327[32] }
        bp      = { defs={} expr=v3328[32] }
        si      = { defs={} expr=v3329[32] }
        di      = { defs={} expr=v3330[32] }
        es      = { defs={} expr=v3331[16] }
        cs      = { defs={} expr=v3332[16] }
        ss      = { defs={} expr=v3333[16] }
        ds      = { defs={} expr=v3334[16] }
        fs      = { defs={} expr=v3335[16] }
        gs      = { defs={} expr=v3336[16] }
        cf      = { defs={0x080483e4} expr=0[1] }
        ?1      = { defs={} expr=v3338[1] }
        pf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        ?3      = { defs={} expr=v3340[1] }
        af      = { defs={0x080483e4} expr=v3405[1] }
        ?5      = { defs={} expr=v3342[1] }
        zf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        sf      = { defs={0x080483df,0x080483e4} expr=0[1] }
        tf      = { defs={} expr=v3345[1] }
        if      = { defs={} expr=v3346[1] }
        df      = { defs={} expr=v3347[1] }
        of      = { defs={0x080483e4} expr=0[1] }
        iopl0   = { defs={} expr=v3349[1] }
        iopl1   = { defs={} expr=v3350[1] }
        nt      = { defs={} expr=v3351[1] }
        ?15     = { defs={} expr=v3352[1] }
        rf      = { defs={} expr=v3353[1] }
        vm      = { defs={} expr=v3354[1] }
        ac      = { defs={} expr=v3355[1] }
        vif     = { defs={} expr=v3356[1] }
        vip     = { defs={} expr=v3357[1] }
        id      = { defs={} expr=v3358[1] }
        ?22     = { defs={} expr=v3359[1] }
        ?23     = { defs={} expr=v3360[1] }
        ?24     = { defs={} expr=v3361[1] }
        ?25     = { defs={} expr=v3362[1] }
        ?26     = { defs={} expr=v3363[1] }
        ?27     = { defs={} expr=v3364[1] }
        ?28     = { defs={} expr=v3365[1] }
        ?29     = { defs={} expr=v3366[1] }
        ?30     = { defs={} expr=v3367[1] }
        ?31     = { defs={} expr=v3368[1] }
        ip      = { defs={0x080483df,0x080483e4,0x080483e6} expr=0x08048400[32] }
    memory:
    init mem:
0x8048400:mov    esp, ebp
    registers:
        ax      = { defs={0x080483df} expr=0[32] }
        cx      = { defs={} expr=v3324[32] }
        dx      = { defs={} expr=v3325[32] }
        bx      = { defs={} expr=v3326[32] }
        sp      = { defs={0x08048400} expr=v3328[32] }
        bp      = { defs={} expr=v3328[32] }
        si      = { defs={} expr=v3329[32] }
        di      = { defs={} expr=v3330[32] }
        es      = { defs={} expr=v3331[16] }
        cs      = { defs={} expr=v3332[16] }
        ss      = { defs={} expr=v3333[16] }
        ds      = { defs={} expr=v3334[16] }
        fs      = { defs={} expr=v3335[16] }
        gs      = { defs={} expr=v3336[16] }
        cf      = { defs={0x080483e4} expr=0[1] }
        ?1      = { defs={} expr=v3338[1] }
        pf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        ?3      = { defs={} expr=v3340[1] }
        af      = { defs={0x080483e4} expr=v3405[1] }
        ?5      = { defs={} expr=v3342[1] }
        zf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        sf      = { defs={0x080483df,0x080483e4} expr=0[1] }
        tf      = { defs={} expr=v3345[1] }
        if      = { defs={} expr=v3346[1] }
        df      = { defs={} expr=v3347[1] }
        of      = { defs={0x080483e4} expr=0[1] }
        iopl0   = { defs={} expr=v3349[1] }
        iopl1   = { defs={} expr=v3350[1] }
        nt      = { defs={} expr=v3351[1] }
        ?15     = { defs={} expr=v3352[1] }
        rf      = { defs={} expr=v3353[1] }
        vm      = { defs={} expr=v3354[1] }
        ac      = { defs={} expr=v3355[1] }
        vif     = { defs={} expr=v3356[1] }
        vip     = { defs={} expr=v3357[1] }
        id      = { defs={} expr=v3358[1] }
        ?22     = { defs={} expr=v3359[1] }
        ?23     = { defs={} expr=v3360[1] }
        ?24     = { defs={} expr=v3361[1] }
        ?25     = { defs={} expr=v3362[1] }
        ?26     = { defs={} expr=v3363[1] }
        ?27     = { defs={} expr=v3364[1] }
        ?28     = { defs={} expr=v3365[1] }
        ?29     = { defs={} expr=v3366[1] }
        ?30     = { defs={} expr=v3367[1] }
        ?31     = { defs={} expr=v3368[1] }
        ip      = { defs={0x080483df,0x080483e4,0x080483e6,0x08048400} expr=0x08048402[32] }
    memory:
    init mem:
0x8048402:pop    ebp
    registers:
        ax      = { defs={0x080483df} expr=0[32] }
        cx      = { defs={} expr=v3324[32] }
        dx      = { defs={} expr=v3325[32] }
        bx      = { defs={} expr=v3326[32] }
        sp      = { defs={0x08048400,0x08048402} expr=(add[32] v3328[32] 4[32]) }
        bp      = { defs={0x08048402} expr=v3426[32] }
        si      = { defs={} expr=v3329[32] }
        di      = { defs={} expr=v3330[32] }
        es      = { defs={} expr=v3331[16] }
        cs      = { defs={} expr=v3332[16] }
        ss      = { defs={} expr=v3333[16] }
        ds      = { defs={} expr=v3334[16] }
        fs      = { defs={} expr=v3335[16] }
        gs      = { defs={} expr=v3336[16] }
        cf      = { defs={0x080483e4} expr=0[1] }
        ?1      = { defs={} expr=v3338[1] }
        pf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        ?3      = { defs={} expr=v3340[1] }
        af      = { defs={0x080483e4} expr=v3405[1] }
        ?5      = { defs={} expr=v3342[1] }
        zf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        sf      = { defs={0x080483df,0x080483e4} expr=0[1] }
        tf      = { defs={} expr=v3345[1] }
        if      = { defs={} expr=v3346[1] }
        df      = { defs={} expr=v3347[1] }
        of      = { defs={0x080483e4} expr=0[1] }
        iopl0   = { defs={} expr=v3349[1] }
        iopl1   = { defs={} expr=v3350[1] }
        nt      = { defs={} expr=v3351[1] }
        ?15     = { defs={} expr=v3352[1] }
        rf      = { defs={} expr=v3353[1] }
        vm      = { defs={} expr=v3354[1] }
        ac      = { defs={} expr=v3355[1] }
        vif     = { defs={} expr=v3356[1] }
        vip     = { defs={} expr=v3357[1] }
        id      = { defs={} expr=v3358[1] }
        ?22     = { defs={} expr=v3359[1] }
        ?23     = { defs={} expr=v3360[1] }
        ?24     = { defs={} expr=v3361[1] }
        ?25     = { defs={} expr=v3362[1] }
        ?26     = { defs={} expr=v3363[1] }
        ?27     = { defs={} expr=v3364[1] }
        ?28     = { defs={} expr=v3365[1] }
        ?29     = { defs={} expr=v3366[1] }
        ?30     = { defs={} expr=v3367[1] }
        ?31     = { defs={} expr=v3368[1] }
        ip      = { defs={0x080483df,0x080483e4,0x080483e6,0x08048400,0x08048402} expr=0x08048403[32] }
    memory:
    init mem:
        address = { defs={0x08048400} expr=(add[32] v3328[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v3426[32]) }
          flags = { rdonly }
        address = { defs={0x08048400} expr=(add[32] v3328[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v3426[32]) }
          flags = { rdonly }
        address = { defs={0x08048400} expr=(add[32] v3328[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v3426[32]) }
          flags = { rdonly }
        address = { defs={0x08048400} expr=v3328[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v3426[32]) }
          flags = { rdonly }
0x8048403:ret    
    registers:
        ax      = { defs={0x080483df} expr=0[32] }
        cx      = { defs={} expr=v3324[32] }
        dx      = { defs={} expr=v3325[32] }
        bx      = { defs={} expr=v3326[32] }
        sp      = { defs={0x08048400,0x08048402,0x08048403} expr=(add[32] (add[32] v3328[32] 4[32]) 4[32]) }
        bp      = { defs={0x08048402} expr=v3426[32] }
        si      = { defs={} expr=v3329[32] }
        di      = { defs={} expr=v3330[32] }
        es      = { defs={} expr=v3331[16] }
        cs      = { defs={} expr=v3332[16] }
        ss      = { defs={} expr=v3333[16] }
        ds      = { defs={} expr=v3334[16] }
        fs      = { defs={} expr=v3335[16] }
        gs      = { defs={} expr=v3336[16] }
        cf      = { defs={0x080483e4} expr=0[1] }
        ?1      = { defs={} expr=v3338[1] }
        pf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        ?3      = { defs={} expr=v3340[1] }
        af      = { defs={0x080483e4} expr=v3405[1] }
        ?5      = { defs={} expr=v3342[1] }
        zf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        sf      = { defs={0x080483df,0x080483e4} expr=0[1] }
        tf      = { defs={} expr=v3345[1] }
        if      = { defs={} expr=v3346[1] }
        df      = { defs={} expr=v3347[1] }
        of      = { defs={0x080483e4} expr=0[1] }
        iopl0   = { defs={} expr=v3349[1] }
        iopl1   = { defs={} expr=v3350[1] }
        nt      = { defs={} expr=v3351[1] }
        ?15     = { defs={} expr=v3352[1] }
        rf      = { defs={} expr=v3353[1] }
        vm      = { defs={} expr=v3354[1] }
        ac      = { defs={} expr=v3355[1] }
        vif     = { defs={} expr=v3356[1] }
        vip     = { defs={} expr=v3357[1] }
        id      = { defs={} expr=v3358[1] }
        ?22     = { defs={} expr=v3359[1] }
        ?23     = { defs={} expr=v3360[1] }
        ?24     = { defs={} expr=v3361[1] }
        ?25     = { defs={} expr=v3362[1] }
        ?26     = { defs={} expr=v3363[1] }
        ?27     = { defs={} expr=v3364[1] }
        ?28     = { defs={} expr=v3365[1] }
        ?29     = { defs={} expr=v3366[1] }
        ?30     = { defs={} expr=v3367[1] }
        ?31     = { defs={} expr=v3368[1] }
        ip      = { defs={0x08048403} expr=v3444[32] }
    memory:
    init mem:
        address = { defs={0x08048400,0x08048402} expr=(add[32] (add[32] v3328[32] 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v3444[32]) }
          flags = { rdonly }
        address = { defs={0x08048400,0x08048402} expr=(add[32] (add[32] v3328[32] 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v3444[32]) }
          flags = { rdonly }
        address = { defs={0x08048400,0x08048402} expr=(add[32] (add[32] v3328[32] 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v3444[32]) }
          flags = { rdonly }
        address = { defs={0x08048400,0x08048402} expr=(add[32] v3328[32] 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v3444[32]) }
          flags = { rdonly }
        address = { defs={0x08048400} expr=(add[32] v3328[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v3426[32]) }
          flags = { rdonly }
        address = { defs={0x08048400} expr=(add[32] v3328[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v3426[32]) }
          flags = { rdonly }
        address = { defs={0x08048400} expr=(add[32] v3328[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v3426[32]) }
          flags = { rdonly }
        address = { defs={0x08048400} expr=v3328[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v3426[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8<.jcr>
    registers:
        ax      = { defs={} expr=v3505[32] }
        cx      = { defs={} expr=v3506[32] }
        dx      = { defs={} expr=v3507[32] }
        bx      = { defs={} expr=v3508[32] }
        sp      = { defs={} expr=v3509[32] }
        bp      = { defs={} expr=v3510[32] }
        si      = { defs={} expr=v3511[32] }
        di      = { defs={} expr=v3512[32] }
        es      = { defs={} expr=v3513[16] }
        cs      = { defs={} expr=v3514[16] }
        ss      = { defs={} expr=v3515[16] }
        ds      = { defs={} expr=v3516[16] }
        fs      = { defs={} expr=v3517[16] }
        gs      = { defs={} expr=v3518[16] }
        cf      = { defs={} expr=v3519[1] }
        ?1      = { defs={} expr=v3520[1] }
        pf      = { defs={} expr=v3521[1] }
        ?3      = { defs={} expr=v3522[1] }
        af      = { defs={} expr=v3523[1] }
        ?5      = { defs={} expr=v3524[1] }
        zf      = { defs={} expr=v3525[1] }
        sf      = { defs={} expr=v3526[1] }
        tf      = { defs={} expr=v3527[1] }
        if      = { defs={} expr=v3528[1] }
        df      = { defs={} expr=v3529[1] }
        of      = { defs={} expr=v3530[1] }
        iopl0   = { defs={} expr=v3531[1] }
        iopl1   = { defs={} expr=v3532[1] }
        nt      = { defs={} expr=v3533[1] }
        ?15     = { defs={} expr=v3534[1] }
        rf      = { defs={} expr=v3535[1] }
        vm      = { defs={} expr=v3536[1] }
        ac      = { defs={} expr=v3537[1] }
        vif     = { defs={} expr=v3538[1] }
        vip     = { defs={} expr=v3539[1] }
        id      = { defs={} expr=v3540[1] }
        ?22     = { defs={} expr=v3541[1] }
        ?23     = { defs={} expr=v3542[1] }
        ?24     = { defs={} expr=v3543[1] }
        ?25     = { defs={} expr=v3544[1] }
        ?26     = { defs={} expr=v3545[1] }
        ?27     = { defs={} expr=v3546[1] }
        ?28     = { defs={} expr=v3547[1] }
        ?29     = { defs={} expr=v3548[1] }
        ?30     = { defs={} expr=v3549[1] }
        ?31     = { defs={} expr=v3550[1] }
        ip      = { defs={0x080483e8} expr=0x080483ef[32] }
    memory:
        address = { defs={} expr=(add[32] v3509[32] 3[32]) }
          value = { defs={0x080483e8} expr=8[8] }
          flags = { }
        address = { defs={} expr=(add[32] v3509[32] 2[32]) }
          value = { defs={0x080483e8} expr=4[8] }
          flags = { }
        address = { defs={} expr=(add[32] v3509[32] 1[32]) }
          value = { defs={0x080483e8} expr=-107[8] }
          flags = { }
        address = { defs={} expr=v3509[32] }
          value = { defs={0x080483e8} expr=-8[8] }
          flags = { }
    init mem:
0x80483ef:call   0x00000000
    registers:
        ax      = { defs={} expr=v3505[32] }
        cx      = { defs={} expr=v3506[32] }
        dx      = { defs={} expr=v3507[32] }
        bx      = { defs={} expr=v3508[32] }
        sp      = { defs={0x080483ef} expr=(add[32] v3509[32] -4[32]) }
        bp      = { defs={} expr=v3510[32] }
        si      = { defs={} expr=v3511[32] }
        di      = { defs={} expr=v3512[32] }
        es      = { defs={} expr=v3513[16] }
        cs      = { defs={} expr=v3514[16] }
        ss      = { defs={} expr=v3515[16] }
        ds      = { defs={} expr=v3516[16] }
        fs      = { defs={} expr=v3517[16] }
        gs      = { defs={} expr=v3518[16] }
        cf      = { defs={} expr=v3519[1] }
        ?1      = { defs={} expr=v3520[1] }
        pf      = { defs={} expr=v3521[1] }
        ?3      = { defs={} expr=v3522[1] }
        af      = { defs={} expr=v3523[1] }
        ?5      = { defs={} expr=v3524[1] }
        zf      = { defs={} expr=v3525[1] }
        sf      = { defs={} expr=v3526[1] }
        tf      = { defs={} expr=v3527[1] }
        if      = { defs={} expr=v3528[1] }
        df      = { defs={} expr=v3529[1] }
        of      = { defs={} expr=v3530[1] }
        iopl0   = { defs={} expr=v3531[1] }
        iopl1   = { defs={} expr=v3532[1] }
        nt      = { defs={} expr=v3533[1] }
        ?15     = { defs={} expr=v3534[1] }
        rf      = { defs={} expr=v3535[1] }
        vm      = { defs={} expr=v3536[1] }
        ac      = { defs={} expr=v3537[1] }
        vif     = { defs={} expr=v3538[1] }
        vip     = { defs={} expr=v3539[1] }
        id      = { defs={} expr=v3540[1] }
        ?22     = { defs={} expr=v3541[1] }
        ?23     = { defs={} expr=v3542[1] }
        ?24     = { defs={} expr=v3543[1] }
        ?25     = { defs={} expr=v3544[1] }
        ?26     = { defs={} expr=v3545[1] }
        ?27     = { defs={} expr=v3546[1] }
        ?28     = { defs={} expr=v3547[1] }
        ?29     = { defs={} expr=v3548[1] }
        ?30     = { defs={} expr=v3549[1] }
        ?31     = { defs={} expr=v3550[1] }
        ip      = { defs={0x080483ef} expr=0[32] }
    memory:
        address = { defs={0x080483ef} expr=(add[32] (add[32] v3509[32] -4[32]) 3[32]) }
          value = { defs={0x080483e8,0x080483ef} expr=8[8] }
          flags = { }
        address = { defs={0x080483ef} expr=(add[32] (add[32] v3509[32] -4[32]) 2[32]) }
          value = { defs={0x080483e8,0x080483ef} expr=4[8] }
          flags = { }
        address = { defs={0x080483ef} expr=(add[32] (add[32] v3509[32] -4[32]) 1[32]) }
          value = { defs={0x080483e8,0x080483ef} expr=-125[8] }
          flags = { }
        address = { defs={0x080483ef} expr=(add[32] v3509[32] -4[32]) }
          value = { defs={0x080483e8,0x080483ef} expr=-12[8] }
          flags = { }
        address = { defs={} expr=(add[32] v3509[32] 3[32]) }
          value = { defs={0x080483e8} expr=8[8] }
          flags = { }
        address = { defs={} expr=(add[32] v3509[32] 2[32]) }
          value = { defs={0x080483e8} expr=4[8] }
          flags = { }
        address = { defs={} expr=(add[32] v3509[32] 1[32]) }
          value = { defs={0x080483e8} expr=-107[8] }
          flags = { }
        address = { defs={} expr=v3509[32] }
          value = { defs={0x080483e8} expr=-8[8] }
          flags = { }
    init mem:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483f4:lea    esi, [esi + 0x00000000]
    registers:
        ax      = { defs={} expr=v3628[32] }
        cx      = { defs={} expr=v3629[32] }
        dx      = { defs={} expr=v3630[32] }
        bx      = { defs={} expr=v3631[32] }
        sp      = { defs={} expr=v3632[32] }
        bp      = { defs={} expr=v3633[32] }
        si      = { defs={0x080483f4} expr=v3634[32] }
        di      = { defs={} expr=v3635[32] }
        es      = { defs={} expr=v3636[16] }
        cs      = { defs={} expr=v3637[16] }
        ss      = { defs={} expr=v3638[16] }
        ds      = { defs={} expr=v3639[16] }
        fs      = { defs={} expr=v3640[16] }
        gs      = { defs={} expr=v3641[16] }
        cf      = { defs={} expr=v3642[1] }
        ?1      = { defs={} expr=v3643[1] }
        pf      = { defs={} expr=v3644[1] }
        ?3      = { defs={} expr=v3645[1] }
        af      = { defs={} expr=v3646[1] }
        ?5      = { defs={} expr=v3647[1] }
        zf      = { defs={} expr=v3648[1] }
        sf      = { defs={} expr=v3649[1] }
        tf      = { defs={} expr=v3650[1] }
        if      = { defs={} expr=v3651[1] }
        df      = { defs={} expr=v3652[1] }
        of      = { defs={} expr=v3653[1] }
        iopl0   = { defs={} expr=v3654[1] }
        iopl1   = { defs={} expr=v3655[1] }
        nt      = { defs={} expr=v3656[1] }
        ?15     = { defs={} expr=v3657[1] }
        rf      = { defs={} expr=v3658[1] }
        vm      = { defs={} expr=v3659[1] }
        ac      = { defs={} expr=v3660[1] }
        vif     = { defs={} expr=v3661[1] }
        vip     = { defs={} expr=v3662[1] }
        id      = { defs={} expr=v3663[1] }
        ?22     = { defs={} expr=v3664[1] }
        ?23     = { defs={} expr=v3665[1] }
        ?24     = { defs={} expr=v3666[1] }
        ?25     = { defs={} expr=v3667[1] }
        ?26     = { defs={} expr=v3668[1] }
        ?27     = { defs={} expr=v3669[1] }
        ?28     = { defs={} expr=v3670[1] }
        ?29     = { defs={} expr=v3671[1] }
        ?30     = { defs={} expr=v3672[1] }
        ?31     = { defs={} expr=v3673[1] }
        ip      = { defs={0x080483f4} expr=0x080483fa[32] }
    memory:
    init mem:
0x80483fa:lea    edi, [edi + 0x00000000]
    registers:
        ax      = { defs={} expr=v3628[32] }
        cx      = { defs={} expr=v3629[32] }
        dx      = { defs={} expr=v3630[32] }
        bx      = { defs={} expr=v3631[32] }
        sp      = { defs={} expr=v3632[32] }
        bp      = { defs={} expr=v3633[32] }
        si      = { defs={0x080483f4} expr=v3634[32] }
        di      = { defs={0x080483fa} expr=v3635[32] }
        es      = { defs={} expr=v3636[16] }
        cs      = { defs={} expr=v3637[16] }
        ss      = { defs={} expr=v3638[16] }
        ds      = { defs={} expr=v3639[16] }
        fs      = { defs={} expr=v3640[16] }
        gs      = { defs={} expr=v3641[16] }
        cf      = { defs={} expr=v3642[1] }
        ?1      = { defs={} expr=v3643[1] }
        pf      = { defs={} expr=v3644[1] }
        ?3      = { defs={} expr=v3645[1] }
        af      = { defs={} expr=v3646[1] }
        ?5      = { defs={} expr=v3647[1] }
        zf      = { defs={} expr=v3648[1] }
        sf      = { defs={} expr=v3649[1] }
        tf      = { defs={} expr=v3650[1] }
        if      = { defs={} expr=v3651[1] }
        df      = { defs={} expr=v3652[1] }
        of      = { defs={} expr=v3653[1] }
        iopl0   = { defs={} expr=v3654[1] }
        iopl1   = { defs={} expr=v3655[1] }
        nt      = { defs={} expr=v3656[1] }
        ?15     = { defs={} expr=v3657[1] }
        rf      = { defs={} expr=v3658[1] }
        vm      = { defs={} expr=v3659[1] }
        ac      = { defs={} expr=v3660[1] }
        vif     = { defs={} expr=v3661[1] }
        vip     = { defs={} expr=v3662[1] }
        id      = { defs={} expr=v3663[1] }
        ?22     = { defs={} expr=v3664[1] }
        ?23     = { defs={} expr=v3665[1] }
        ?24     = { defs={} expr=v3666[1] }
        ?25     = { defs={} expr=v3667[1] }
        ?26     = { defs={} expr=v3668[1] }
        ?27     = { defs={} expr=v3669[1] }
        ?28     = { defs={} expr=v3670[1] }
        ?29     = { defs={} expr=v3671[1] }
        ?30     = { defs={} expr=v3672[1] }
        ?31     = { defs={} expr=v3673[1] }
        ip      = { defs={0x080483f4,0x080483fa} expr=0x08048400[32] }
    memory:
    init mem:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048410:push   ebp
    registers:
        ax      = { defs={} expr=v3735[32] }
        cx      = { defs={} expr=v3736[32] }
        dx      = { defs={} expr=v3737[32] }
        bx      = { defs={} expr=v3738[32] }
        sp      = { defs={0x08048410} expr=(add[32] v3739[32] -4[32]) }
        bp      = { defs={} expr=v3740[32] }
        si      = { defs={} expr=v3741[32] }
        di      = { defs={} expr=v3742[32] }
        es      = { defs={} expr=v3743[16] }
        cs      = { defs={} expr=v3744[16] }
        ss      = { defs={} expr=v3745[16] }
        ds      = { defs={} expr=v3746[16] }
        fs      = { defs={} expr=v3747[16] }
        gs      = { defs={} expr=v3748[16] }
        cf      = { defs={} expr=v3749[1] }
        ?1      = { defs={} expr=v3750[1] }
        pf      = { defs={} expr=v3751[1] }
        ?3      = { defs={} expr=v3752[1] }
        af      = { defs={} expr=v3753[1] }
        ?5      = { defs={} expr=v3754[1] }
        zf      = { defs={} expr=v3755[1] }
        sf      = { defs={} expr=v3756[1] }
        tf      = { defs={} expr=v3757[1] }
        if      = { defs={} expr=v3758[1] }
        df      = { defs={} expr=v3759[1] }
        of      = { defs={} expr=v3760[1] }
        iopl0   = { defs={} expr=v3761[1] }
        iopl1   = { defs={} expr=v3762[1] }
        nt      = { defs={} expr=v3763[1] }
        ?15     = { defs={} expr=v3764[1] }
        rf      = { defs={} expr=v3765[1] }
        vm      = { defs={} expr=v3766[1] }
        ac      = { defs={} expr=v3767[1] }
        vif     = { defs={} expr=v3768[1] }
        vip     = { defs={} expr=v3769[1] }
        id      = { defs={} expr=v3770[1] }
        ?22     = { defs={} expr=v3771[1] }
        ?23     = { defs={} expr=v3772[1] }
        ?24     = { defs={} expr=v3773[1] }
        ?25     = { defs={} expr=v3774[1] }
        ?26     = { defs={} expr=v3775[1] }
        ?27     = { defs={} expr=v3776[1] }
        ?28     = { defs={} expr=v3777[1] }
        ?29     = { defs={} expr=v3778[1] }
        ?30     = { defs={} expr=v3779[1] }
        ?31     = { defs={} expr=v3780[1] }
        ip      = { defs={0x08048410} expr=0x08048411[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 3[32]) }
          value = { defs={0x08048410} expr=(extract[8] 24[32] 32[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 2[32]) }
          value = { defs={0x08048410} expr=(extract[8] 16[32] 24[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 1[32]) }
          value = { defs={0x08048410} expr=(extract[8] 8[32] 16[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] v3739[32] -4[32]) }
          value = { defs={0x08048410} expr=(extract[8] 0[32] 8[32] v3740[32]) }
          flags = { }
    init mem:
0x8048411:mov    edx, 0x08048480<handler>
    registers:
        ax      = { defs={} expr=v3735[32] }
        cx      = { defs={} expr=v3736[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v3738[32] }
        sp      = { defs={0x08048410} expr=(add[32] v3739[32] -4[32]) }
        bp      = { defs={} expr=v3740[32] }
        si      = { defs={} expr=v3741[32] }
        di      = { defs={} expr=v3742[32] }
        es      = { defs={} expr=v3743[16] }
        cs      = { defs={} expr=v3744[16] }
        ss      = { defs={} expr=v3745[16] }
        ds      = { defs={} expr=v3746[16] }
        fs      = { defs={} expr=v3747[16] }
        gs      = { defs={} expr=v3748[16] }
        cf      = { defs={} expr=v3749[1] }
        ?1      = { defs={} expr=v3750[1] }
        pf      = { defs={} expr=v3751[1] }
        ?3      = { defs={} expr=v3752[1] }
        af      = { defs={} expr=v3753[1] }
        ?5      = { defs={} expr=v3754[1] }
        zf      = { defs={} expr=v3755[1] }
        sf      = { defs={} expr=v3756[1] }
        tf      = { defs={} expr=v3757[1] }
        if      = { defs={} expr=v3758[1] }
        df      = { defs={} expr=v3759[1] }
        of      = { defs={} expr=v3760[1] }
        iopl0   = { defs={} expr=v3761[1] }
        iopl1   = { defs={} expr=v3762[1] }
        nt      = { defs={} expr=v3763[1] }
        ?15     = { defs={} expr=v3764[1] }
        rf      = { defs={} expr=v3765[1] }
        vm      = { defs={} expr=v3766[1] }
        ac      = { defs={} expr=v3767[1] }
        vif     = { defs={} expr=v3768[1] }
        vip     = { defs={} expr=v3769[1] }
        id      = { defs={} expr=v3770[1] }
        ?22     = { defs={} expr=v3771[1] }
        ?23     = { defs={} expr=v3772[1] }
        ?24     = { defs={} expr=v3773[1] }
        ?25     = { defs={} expr=v3774[1] }
        ?26     = { defs={} expr=v3775[1] }
        ?27     = { defs={} expr=v3776[1] }
        ?28     = { defs={} expr=v3777[1] }
        ?29     = { defs={} expr=v3778[1] }
        ?30     = { defs={} expr=v3779[1] }
        ?31     = { defs={} expr=v3780[1] }
        ip      = { defs={0x08048410,0x08048411} expr=0x08048416[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 3[32]) }
          value = { defs={0x08048410} expr=(extract[8] 24[32] 32[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 2[32]) }
          value = { defs={0x08048410} expr=(extract[8] 16[32] 24[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 1[32]) }
          value = { defs={0x08048410} expr=(extract[8] 8[32] 16[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] v3739[32] -4[32]) }
          value = { defs={0x08048410} expr=(extract[8] 0[32] 8[32] v3740[32]) }
          flags = { }
    init mem:
0x8048416:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v3735[32] }
        cx      = { defs={} expr=v3736[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v3738[32] }
        sp      = { defs={0x08048410} expr=(add[32] v3739[32] -4[32]) }
        bp      = { defs={0x08048410,0x08048416} expr=(add[32] v3739[32] -4[32]) }
        si      = { defs={} expr=v3741[32] }
        di      = { defs={} expr=v3742[32] }
        es      = { defs={} expr=v3743[16] }
        cs      = { defs={} expr=v3744[16] }
        ss      = { defs={} expr=v3745[16] }
        ds      = { defs={} expr=v3746[16] }
        fs      = { defs={} expr=v3747[16] }
        gs      = { defs={} expr=v3748[16] }
        cf      = { defs={} expr=v3749[1] }
        ?1      = { defs={} expr=v3750[1] }
        pf      = { defs={} expr=v3751[1] }
        ?3      = { defs={} expr=v3752[1] }
        af      = { defs={} expr=v3753[1] }
        ?5      = { defs={} expr=v3754[1] }
        zf      = { defs={} expr=v3755[1] }
        sf      = { defs={} expr=v3756[1] }
        tf      = { defs={} expr=v3757[1] }
        if      = { defs={} expr=v3758[1] }
        df      = { defs={} expr=v3759[1] }
        of      = { defs={} expr=v3760[1] }
        iopl0   = { defs={} expr=v3761[1] }
        iopl1   = { defs={} expr=v3762[1] }
        nt      = { defs={} expr=v3763[1] }
        ?15     = { defs={} expr=v3764[1] }
        rf      = { defs={} expr=v3765[1] }
        vm      = { defs={} expr=v3766[1] }
        ac      = { defs={} expr=v3767[1] }
        vif     = { defs={} expr=v3768[1] }
        vip     = { defs={} expr=v3769[1] }
        id      = { defs={} expr=v3770[1] }
        ?22     = { defs={} expr=v3771[1] }
        ?23     = { defs={} expr=v3772[1] }
        ?24     = { defs={} expr=v3773[1] }
        ?25     = { defs={} expr=v3774[1] }
        ?26     = { defs={} expr=v3775[1] }
        ?27     = { defs={} expr=v3776[1] }
        ?28     = { defs={} expr=v3777[1] }
        ?29     = { defs={} expr=v3778[1] }
        ?30     = { defs={} expr=v3779[1] }
        ?31     = { defs={} expr=v3780[1] }
        ip      = { defs={0x08048410,0x08048411,0x08048416} expr=0x08048418[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 3[32]) }
          value = { defs={0x08048410} expr=(extract[8] 24[32] 32[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 2[32]) }
          value = { defs={0x08048410} expr=(extract[8] 16[32] 24[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 1[32]) }
          value = { defs={0x08048410} expr=(extract[8] 8[32] 16[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] v3739[32] -4[32]) }
          value = { defs={0x08048410} expr=(extract[8] 0[32] 8[32] v3740[32]) }
          flags = { }
    init mem:
0x8048418:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v3735[32] }
        cx      = { defs={} expr=v3736[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v3738[32] }
        sp      = { defs={0x08048410,0x08048418} expr=(add[32] (add[32] v3739[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048410,0x08048416} expr=(add[32] v3739[32] -4[32]) }
        si      = { defs={} expr=v3741[32] }
        di      = { defs={} expr=v3742[32] }
        es      = { defs={} expr=v3743[16] }
        cs      = { defs={} expr=v3744[16] }
        ss      = { defs={} expr=v3745[16] }
        ds      = { defs={} expr=v3746[16] }
        fs      = { defs={} expr=v3747[16] }
        gs      = { defs={} expr=v3748[16] }
        cf      = { defs={0x08048410,0x08048418} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3739[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v3739[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v3750[1] }
        pf      = { defs={0x08048410,0x08048418} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3739[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3739[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v3752[1] }
        af      = { defs={0x08048410,0x08048418} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3739[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v3739[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v3754[1] }
        zf      = { defs={0x08048410,0x08048418} expr=(zerop[1] (add[32] (add[32] v3739[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048410,0x08048418} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v3739[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v3757[1] }
        if      = { defs={} expr=v3758[1] }
        df      = { defs={} expr=v3759[1] }
        of      = { defs={0x08048410,0x08048418} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3739[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v3739[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3739[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v3739[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v3761[1] }
        iopl1   = { defs={} expr=v3762[1] }
        nt      = { defs={} expr=v3763[1] }
        ?15     = { defs={} expr=v3764[1] }
        rf      = { defs={} expr=v3765[1] }
        vm      = { defs={} expr=v3766[1] }
        ac      = { defs={} expr=v3767[1] }
        vif     = { defs={} expr=v3768[1] }
        vip     = { defs={} expr=v3769[1] }
        id      = { defs={} expr=v3770[1] }
        ?22     = { defs={} expr=v3771[1] }
        ?23     = { defs={} expr=v3772[1] }
        ?24     = { defs={} expr=v3773[1] }
        ?25     = { defs={} expr=v3774[1] }
        ?26     = { defs={} expr=v3775[1] }
        ?27     = { defs={} expr=v3776[1] }
        ?28     = { defs={} expr=v3777[1] }
        ?29     = { defs={} expr=v3778[1] }
        ?30     = { defs={} expr=v3779[1] }
        ?31     = { defs={} expr=v3780[1] }
        ip      = { defs={0x08048410,0x08048411,0x08048416,0x08048418} expr=0x0804841b[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 3[32]) }
          value = { defs={0x08048410} expr=(extract[8] 24[32] 32[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 2[32]) }
          value = { defs={0x08048410} expr=(extract[8] 16[32] 24[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 1[32]) }
          value = { defs={0x08048410} expr=(extract[8] 8[32] 16[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] v3739[32] -4[32]) }
          value = { defs={0x08048410} expr=(extract[8] 0[32] 8[32] v3740[32]) }
          flags = { }
    init mem:
0x804841b:and    esp, 0xf0<-0x10>
    registers:
        ax      = { defs={} expr=v3735[32] }
        cx      = { defs={} expr=v3736[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v3738[32] }
        sp      = { defs={0x08048410,0x08048418,0x0804841b} expr=(bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) }
        bp      = { defs={0x08048410,0x08048416} expr=(add[32] v3739[32] -4[32]) }
        si      = { defs={} expr=v3741[32] }
        di      = { defs={} expr=v3742[32] }
        es      = { defs={} expr=v3743[16] }
        cs      = { defs={} expr=v3744[16] }
        ss      = { defs={} expr=v3745[16] }
        ds      = { defs={} expr=v3746[16] }
        fs      = { defs={} expr=v3747[16] }
        gs      = { defs={} expr=v3748[16] }
        cf      = { defs={0x0804841b} expr=0[1] }
        ?1      = { defs={} expr=v3750[1] }
        pf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v3752[1] }
        af      = { defs={0x0804841b} expr=v3889[1] }
        ?5      = { defs={} expr=v3754[1] }
        zf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(zerop[1] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32])) }
        sf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32])) }
        tf      = { defs={} expr=v3757[1] }
        if      = { defs={} expr=v3758[1] }
        df      = { defs={} expr=v3759[1] }
        of      = { defs={0x0804841b} expr=0[1] }
        iopl0   = { defs={} expr=v3761[1] }
        iopl1   = { defs={} expr=v3762[1] }
        nt      = { defs={} expr=v3763[1] }
        ?15     = { defs={} expr=v3764[1] }
        rf      = { defs={} expr=v3765[1] }
        vm      = { defs={} expr=v3766[1] }
        ac      = { defs={} expr=v3767[1] }
        vif     = { defs={} expr=v3768[1] }
        vip     = { defs={} expr=v3769[1] }
        id      = { defs={} expr=v3770[1] }
        ?22     = { defs={} expr=v3771[1] }
        ?23     = { defs={} expr=v3772[1] }
        ?24     = { defs={} expr=v3773[1] }
        ?25     = { defs={} expr=v3774[1] }
        ?26     = { defs={} expr=v3775[1] }
        ?27     = { defs={} expr=v3776[1] }
        ?28     = { defs={} expr=v3777[1] }
        ?29     = { defs={} expr=v3778[1] }
        ?30     = { defs={} expr=v3779[1] }
        ?31     = { defs={} expr=v3780[1] }
        ip      = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b} expr=0x0804841e[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 3[32]) }
          value = { defs={0x08048410} expr=(extract[8] 24[32] 32[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 2[32]) }
          value = { defs={0x08048410} expr=(extract[8] 16[32] 24[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 1[32]) }
          value = { defs={0x08048410} expr=(extract[8] 8[32] 16[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] v3739[32] -4[32]) }
          value = { defs={0x08048410} expr=(extract[8] 0[32] 8[32] v3740[32]) }
          flags = { }
    init mem:
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    registers:
        ax      = { defs={} expr=v3735[32] }
        cx      = { defs={} expr=v3736[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v3738[32] }
        sp      = { defs={0x08048410,0x08048418,0x0804841b} expr=(bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) }
        bp      = { defs={0x08048410,0x08048416} expr=(add[32] v3739[32] -4[32]) }
        si      = { defs={} expr=v3741[32] }
        di      = { defs={} expr=v3742[32] }
        es      = { defs={} expr=v3743[16] }
        cs      = { defs={} expr=v3744[16] }
        ss      = { defs={} expr=v3745[16] }
        ds      = { defs={} expr=v3746[16] }
        fs      = { defs={} expr=v3747[16] }
        gs      = { defs={} expr=v3748[16] }
        cf      = { defs={0x0804841b} expr=0[1] }
        ?1      = { defs={} expr=v3750[1] }
        pf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v3752[1] }
        af      = { defs={0x0804841b} expr=v3889[1] }
        ?5      = { defs={} expr=v3754[1] }
        zf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(zerop[1] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32])) }
        sf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32])) }
        tf      = { defs={} expr=v3757[1] }
        if      = { defs={} expr=v3758[1] }
        df      = { defs={} expr=v3759[1] }
        of      = { defs={0x0804841b} expr=0[1] }
        iopl0   = { defs={} expr=v3761[1] }
        iopl1   = { defs={} expr=v3762[1] }
        nt      = { defs={} expr=v3763[1] }
        ?15     = { defs={} expr=v3764[1] }
        rf      = { defs={} expr=v3765[1] }
        vm      = { defs={} expr=v3766[1] }
        ac      = { defs={} expr=v3767[1] }
        vif     = { defs={} expr=v3768[1] }
        vip     = { defs={} expr=v3769[1] }
        id      = { defs={} expr=v3770[1] }
        ?22     = { defs={} expr=v3771[1] }
        ?23     = { defs={} expr=v3772[1] }
        ?24     = { defs={} expr=v3773[1] }
        ?25     = { defs={} expr=v3774[1] }
        ?26     = { defs={} expr=v3775[1] }
        ?27     = { defs={} expr=v3776[1] }
        ?28     = { defs={} expr=v3777[1] }
        ?29     = { defs={} expr=v3778[1] }
        ?30     = { defs={} expr=v3779[1] }
        ?31     = { defs={} expr=v3780[1] }
        ip      = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e} expr=0x08048422[32] }
    memory:
        address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) 4[32]) 3[32]) }
          value = { defs={0x08048411,0x0804841e} expr=8[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) 4[32]) 2[32]) }
          value = { defs={0x08048411,0x0804841e} expr=4[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) 4[32]) 1[32]) }
          value = { defs={0x08048411,0x0804841e} expr=-124[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) 4[32]) }
          value = { defs={0x08048411,0x0804841e} expr=-128[8] }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 3[32]) }
          value = { defs={0x08048410} expr=(extract[8] 24[32] 32[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 2[32]) }
          value = { defs={0x08048410} expr=(extract[8] 16[32] 24[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 1[32]) }
          value = { defs={0x08048410} expr=(extract[8] 8[32] 16[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] v3739[32] -4[32]) }
          value = { defs={0x08048410} expr=(extract[8] 0[32] 8[32] v3740[32]) }
          flags = { }
    init mem:
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    registers:
        ax      = { defs={} expr=v3735[32] }
        cx      = { defs={} expr=v3736[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v3738[32] }
        sp      = { defs={0x08048410,0x08048418,0x0804841b} expr=(bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) }
        bp      = { defs={0x08048410,0x08048416} expr=(add[32] v3739[32] -4[32]) }
        si      = { defs={} expr=v3741[32] }
        di      = { defs={} expr=v3742[32] }
        es      = { defs={} expr=v3743[16] }
        cs      = { defs={} expr=v3744[16] }
        ss      = { defs={} expr=v3745[16] }
        ds      = { defs={} expr=v3746[16] }
        fs      = { defs={} expr=v3747[16] }
        gs      = { defs={} expr=v3748[16] }
        cf      = { defs={0x0804841b} expr=0[1] }
        ?1      = { defs={} expr=v3750[1] }
        pf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v3752[1] }
        af      = { defs={0x0804841b} expr=v3889[1] }
        ?5      = { defs={} expr=v3754[1] }
        zf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(zerop[1] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32])) }
        sf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32])) }
        tf      = { defs={} expr=v3757[1] }
        if      = { defs={} expr=v3758[1] }
        df      = { defs={} expr=v3759[1] }
        of      = { defs={0x0804841b} expr=0[1] }
        iopl0   = { defs={} expr=v3761[1] }
        iopl1   = { defs={} expr=v3762[1] }
        nt      = { defs={} expr=v3763[1] }
        ?15     = { defs={} expr=v3764[1] }
        rf      = { defs={} expr=v3765[1] }
        vm      = { defs={} expr=v3766[1] }
        ac      = { defs={} expr=v3767[1] }
        vif     = { defs={} expr=v3768[1] }
        vip     = { defs={} expr=v3769[1] }
        id      = { defs={} expr=v3770[1] }
        ?22     = { defs={} expr=v3771[1] }
        ?23     = { defs={} expr=v3772[1] }
        ?24     = { defs={} expr=v3773[1] }
        ?25     = { defs={} expr=v3774[1] }
        ?26     = { defs={} expr=v3775[1] }
        ?27     = { defs={} expr=v3776[1] }
        ?28     = { defs={} expr=v3777[1] }
        ?29     = { defs={} expr=v3778[1] }
        ?30     = { defs={} expr=v3779[1] }
        ?31     = { defs={} expr=v3780[1] }
        ip      = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e,0x08048422} expr=0x08048429[32] }
    memory:
        address = { defs={0x08048410,0x08048418,0x0804841b} expr=(add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) 3[32]) }
          value = { defs={0x08048422} expr=0[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b} expr=(add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) 2[32]) }
          value = { defs={0x08048422} expr=0[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b} expr=(add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) 1[32]) }
          value = { defs={0x08048422} expr=0[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b} expr=(bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) }
          value = { defs={0x08048422} expr=10[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) 4[32]) 3[32]) }
          value = { defs={0x08048411,0x0804841e} expr=8[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) 4[32]) 2[32]) }
          value = { defs={0x08048411,0x0804841e} expr=4[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) 4[32]) 1[32]) }
          value = { defs={0x08048411,0x0804841e} expr=-124[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) 4[32]) }
          value = { defs={0x08048411,0x0804841e} expr=-128[8] }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 3[32]) }
          value = { defs={0x08048410} expr=(extract[8] 24[32] 32[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 2[32]) }
          value = { defs={0x08048410} expr=(extract[8] 16[32] 24[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 1[32]) }
          value = { defs={0x08048410} expr=(extract[8] 8[32] 16[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] v3739[32] -4[32]) }
          value = { defs={0x08048410} expr=(extract[8] 0[32] 8[32] v3740[32]) }
          flags = { }
    init mem:
0x8048429:call   0x080482f0<signal@plt>
    registers:
        ax      = { defs={} expr=v3735[32] }
        cx      = { defs={} expr=v3736[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v3738[32] }
        sp      = { defs={0x08048410,0x08048418,0x0804841b,0x08048429} expr=(add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) -4[32]) }
        bp      = { defs={0x08048410,0x08048416} expr=(add[32] v3739[32] -4[32]) }
        si      = { defs={} expr=v3741[32] }
        di      = { defs={} expr=v3742[32] }
        es      = { defs={} expr=v3743[16] }
        cs      = { defs={} expr=v3744[16] }
        ss      = { defs={} expr=v3745[16] }
        ds      = { defs={} expr=v3746[16] }
        fs      = { defs={} expr=v3747[16] }
        gs      = { defs={} expr=v3748[16] }
        cf      = { defs={0x0804841b} expr=0[1] }
        ?1      = { defs={} expr=v3750[1] }
        pf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v3752[1] }
        af      = { defs={0x0804841b} expr=v3889[1] }
        ?5      = { defs={} expr=v3754[1] }
        zf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(zerop[1] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32])) }
        sf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32])) }
        tf      = { defs={} expr=v3757[1] }
        if      = { defs={} expr=v3758[1] }
        df      = { defs={} expr=v3759[1] }
        of      = { defs={0x0804841b} expr=0[1] }
        iopl0   = { defs={} expr=v3761[1] }
        iopl1   = { defs={} expr=v3762[1] }
        nt      = { defs={} expr=v3763[1] }
        ?15     = { defs={} expr=v3764[1] }
        rf      = { defs={} expr=v3765[1] }
        vm      = { defs={} expr=v3766[1] }
        ac      = { defs={} expr=v3767[1] }
        vif     = { defs={} expr=v3768[1] }
        vip     = { defs={} expr=v3769[1] }
        id      = { defs={} expr=v3770[1] }
        ?22     = { defs={} expr=v3771[1] }
        ?23     = { defs={} expr=v3772[1] }
        ?24     = { defs={} expr=v3773[1] }
        ?25     = { defs={} expr=v3774[1] }
        ?26     = { defs={} expr=v3775[1] }
        ?27     = { defs={} expr=v3776[1] }
        ?28     = { defs={} expr=v3777[1] }
        ?29     = { defs={} expr=v3778[1] }
        ?30     = { defs={} expr=v3779[1] }
        ?31     = { defs={} expr=v3780[1] }
        ip      = { defs={0x08048429} expr=0x080482f0[32] }
    memory:
        address = { defs={0x08048410,0x08048418,0x0804841b,0x08048429} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) -4[32]) 3[32]) }
          value = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e,0x08048422,0x08048429} expr=8[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x08048429} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) -4[32]) 2[32]) }
          value = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e,0x08048422,0x08048429} expr=4[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x08048429} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) -4[32]) 1[32]) }
          value = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e,0x08048422,0x08048429} expr=-124[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x08048429} expr=(add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) -4[32]) }
          value = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e,0x08048422,0x08048429} expr=46[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b} expr=(add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) 3[32]) }
          value = { defs={0x08048422} expr=0[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b} expr=(add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) 2[32]) }
          value = { defs={0x08048422} expr=0[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b} expr=(add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) 1[32]) }
          value = { defs={0x08048422} expr=0[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b} expr=(bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) }
          value = { defs={0x08048422} expr=10[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) 4[32]) 3[32]) }
          value = { defs={0x08048411,0x0804841e} expr=8[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) 4[32]) 2[32]) }
          value = { defs={0x08048411,0x0804841e} expr=4[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) 4[32]) 1[32]) }
          value = { defs={0x08048411,0x0804841e} expr=-124[8] }
          flags = { }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (bv-and[32] (add[32] (add[32] v3739[32] -4[32]) -8[32]) -16[32]) 4[32]) }
          value = { defs={0x08048411,0x0804841e} expr=-128[8] }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 3[32]) }
          value = { defs={0x08048410} expr=(extract[8] 24[32] 32[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 2[32]) }
          value = { defs={0x08048410} expr=(extract[8] 16[32] 24[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] (add[32] v3739[32] -4[32]) 1[32]) }
          value = { defs={0x08048410} expr=(extract[8] 8[32] 16[32] v3740[32]) }
          flags = { }
        address = { defs={0x08048410} expr=(add[32] v3739[32] -4[32]) }
          value = { defs={0x08048410} expr=(extract[8] 0[32] 8[32] v3740[32]) }
          flags = { }
    init mem:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
    registers:
        ax      = { defs={} expr=v3982[32] }
        cx      = { defs={} expr=v3983[32] }
        dx      = { defs={} expr=v3984[32] }
        bx      = { defs={} expr=v3985[32] }
        sp      = { defs={0x0804842e} expr=v3987[32] }
        bp      = { defs={} expr=v3987[32] }
        si      = { defs={} expr=v3988[32] }
        di      = { defs={} expr=v3989[32] }
        es      = { defs={} expr=v3990[16] }
        cs      = { defs={} expr=v3991[16] }
        ss      = { defs={} expr=v3992[16] }
        ds      = { defs={} expr=v3993[16] }
        fs      = { defs={} expr=v3994[16] }
        gs      = { defs={} expr=v3995[16] }
        cf      = { defs={} expr=v3996[1] }
        ?1      = { defs={} expr=v3997[1] }
        pf      = { defs={} expr=v3998[1] }
        ?3      = { defs={} expr=v3999[1] }
        af      = { defs={} expr=v4000[1] }
        ?5      = { defs={} expr=v4001[1] }
        zf      = { defs={} expr=v4002[1] }
        sf      = { defs={} expr=v4003[1] }
        tf      = { defs={} expr=v4004[1] }
        if      = { defs={} expr=v4005[1] }
        df      = { defs={} expr=v4006[1] }
        of      = { defs={} expr=v4007[1] }
        iopl0   = { defs={} expr=v4008[1] }
        iopl1   = { defs={} expr=v4009[1] }
        nt      = { defs={} expr=v4010[1] }
        ?15     = { defs={} expr=v4011[1] }
        rf      = { defs={} expr=v4012[1] }
        vm      = { defs={} expr=v4013[1] }
        ac      = { defs={} expr=v4014[1] }
        vif     = { defs={} expr=v4015[1] }
        vip     = { defs={} expr=v4016[1] }
        id      = { defs={} expr=v4017[1] }
        ?22     = { defs={} expr=v4018[1] }
        ?23     = { defs={} expr=v4019[1] }
        ?24     = { defs={} expr=v4020[1] }
        ?25     = { defs={} expr=v4021[1] }
        ?26     = { defs={} expr=v4022[1] }
        ?27     = { defs={} expr=v4023[1] }
        ?28     = { defs={} expr=v4024[1] }
        ?29     = { defs={} expr=v4025[1] }
        ?30     = { defs={} expr=v4026[1] }
        ?31     = { defs={} expr=v4027[1] }
        ip      = { defs={0x0804842e} expr=0x08048430[32] }
    memory:
    init mem:
0x8048430:xor    eax, eax
    registers:
        ax      = { defs={0x08048430} expr=0[32] }
        cx      = { defs={} expr=v3983[32] }
        dx      = { defs={} expr=v3984[32] }
        bx      = { defs={} expr=v3985[32] }
        sp      = { defs={0x0804842e} expr=v3987[32] }
        bp      = { defs={} expr=v3987[32] }
        si      = { defs={} expr=v3988[32] }
        di      = { defs={} expr=v3989[32] }
        es      = { defs={} expr=v3990[16] }
        cs      = { defs={} expr=v3991[16] }
        ss      = { defs={} expr=v3992[16] }
        ds      = { defs={} expr=v3993[16] }
        fs      = { defs={} expr=v3994[16] }
        gs      = { defs={} expr=v3995[16] }
        cf      = { defs={0x08048430} expr=0[1] }
        ?1      = { defs={} expr=v3997[1] }
        pf      = { defs={0x08048430} expr=1[1] }
        ?3      = { defs={} expr=v3999[1] }
        af      = { defs={0x08048430} expr=v4066[1] }
        ?5      = { defs={} expr=v4001[1] }
        zf      = { defs={0x08048430} expr=1[1] }
        sf      = { defs={0x08048430} expr=0[1] }
        tf      = { defs={} expr=v4004[1] }
        if      = { defs={} expr=v4005[1] }
        df      = { defs={} expr=v4006[1] }
        of      = { defs={0x08048430} expr=0[1] }
        iopl0   = { defs={} expr=v4008[1] }
        iopl1   = { defs={} expr=v4009[1] }
        nt      = { defs={} expr=v4010[1] }
        ?15     = { defs={} expr=v4011[1] }
        rf      = { defs={} expr=v4012[1] }
        vm      = { defs={} expr=v4013[1] }
        ac      = { defs={} expr=v4014[1] }
        vif     = { defs={} expr=v4015[1] }
        vip     = { defs={} expr=v4016[1] }
        id      = { defs={} expr=v4017[1] }
        ?22     = { defs={} expr=v4018[1] }
        ?23     = { defs={} expr=v4019[1] }
        ?24     = { defs={} expr=v4020[1] }
        ?25     = { defs={} expr=v4021[1] }
        ?26     = { defs={} expr=v4022[1] }
        ?27     = { defs={} expr=v4023[1] }
        ?28     = { defs={} expr=v4024[1] }
        ?29     = { defs={} expr=v4025[1] }
        ?30     = { defs={} expr=v4026[1] }
        ?31     = { defs={} expr=v4027[1] }
        ip      = { defs={0x0804842e,0x08048430} expr=0x08048432[32] }
    memory:
    init mem:
0x8048432:pop    ebp
    registers:
        ax      = { defs={0x08048430} expr=0[32] }
        cx      = { defs={} expr=v3983[32] }
        dx      = { defs={} expr=v3984[32] }
        bx      = { defs={} expr=v3985[32] }
        sp      = { defs={0x0804842e,0x08048432} expr=(add[32] v3987[32] 4[32]) }
        bp      = { defs={0x08048432} expr=v4075[32] }
        si      = { defs={} expr=v3988[32] }
        di      = { defs={} expr=v3989[32] }
        es      = { defs={} expr=v3990[16] }
        cs      = { defs={} expr=v3991[16] }
        ss      = { defs={} expr=v3992[16] }
        ds      = { defs={} expr=v3993[16] }
        fs      = { defs={} expr=v3994[16] }
        gs      = { defs={} expr=v3995[16] }
        cf      = { defs={0x08048430} expr=0[1] }
        ?1      = { defs={} expr=v3997[1] }
        pf      = { defs={0x08048430} expr=1[1] }
        ?3      = { defs={} expr=v3999[1] }
        af      = { defs={0x08048430} expr=v4066[1] }
        ?5      = { defs={} expr=v4001[1] }
        zf      = { defs={0x08048430} expr=1[1] }
        sf      = { defs={0x08048430} expr=0[1] }
        tf      = { defs={} expr=v4004[1] }
        if      = { defs={} expr=v4005[1] }
        df      = { defs={} expr=v4006[1] }
        of      = { defs={0x08048430} expr=0[1] }
        iopl0   = { defs={} expr=v4008[1] }
        iopl1   = { defs={} expr=v4009[1] }
        nt      = { defs={} expr=v4010[1] }
        ?15     = { defs={} expr=v4011[1] }
        rf      = { defs={} expr=v4012[1] }
        vm      = { defs={} expr=v4013[1] }
        ac      = { defs={} expr=v4014[1] }
        vif     = { defs={} expr=v4015[1] }
        vip     = { defs={} expr=v4016[1] }
        id      = { defs={} expr=v4017[1] }
        ?22     = { defs={} expr=v4018[1] }
        ?23     = { defs={} expr=v4019[1] }
        ?24     = { defs={} expr=v4020[1] }
        ?25     = { defs={} expr=v4021[1] }
        ?26     = { defs={} expr=v4022[1] }
        ?27     = { defs={} expr=v4023[1] }
        ?28     = { defs={} expr=v4024[1] }
        ?29     = { defs={} expr=v4025[1] }
        ?30     = { defs={} expr=v4026[1] }
        ?31     = { defs={} expr=v4027[1] }
        ip      = { defs={0x0804842e,0x08048430,0x08048432} expr=0x08048433[32] }
    memory:
    init mem:
        address = { defs={0x0804842e} expr=(add[32] v3987[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v4075[32]) }
          flags = { rdonly }
        address = { defs={0x0804842e} expr=(add[32] v3987[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v4075[32]) }
          flags = { rdonly }
        address = { defs={0x0804842e} expr=(add[32] v3987[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v4075[32]) }
          flags = { rdonly }
        address = { defs={0x0804842e} expr=v3987[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v4075[32]) }
          flags = { rdonly }
0x8048433:ret    
    registers:
        ax      = { defs={0x08048430} expr=0[32] }
        cx      = { defs={} expr=v3983[32] }
        dx      = { defs={} expr=v3984[32] }
        bx      = { defs={} expr=v3985[32] }
        sp      = { defs={0x0804842e,0x08048432,0x08048433} expr=(add[32] (add[32] v3987[32] 4[32]) 4[32]) }
        bp      = { defs={0x08048432} expr=v4075[32] }
        si      = { defs={} expr=v3988[32] }
        di      = { defs={} expr=v3989[32] }
        es      = { defs={} expr=v3990[16] }
        cs      = { defs={} expr=v3991[16] }
        ss      = { defs={} expr=v3992[16] }
        ds      = { defs={} expr=v3993[16] }
        fs      = { defs={} expr=v3994[16] }
        gs      = { defs={} expr=v3995[16] }
        cf      = { defs={0x08048430} expr=0[1] }
        ?1      = { defs={} expr=v3997[1] }
        pf      = { defs={0x08048430} expr=1[1] }
        ?3      = { defs={} expr=v3999[1] }
        af      = { defs={0x08048430} expr=v4066[1] }
        ?5      = { defs={} expr=v4001[1] }
        zf      = { defs={0x08048430} expr=1[1] }
        sf      = { defs={0x08048430} expr=0[1] }
        tf      = { defs={} expr=v4004[1] }
        if      = { defs={} expr=v4005[1] }
        df      = { defs={} expr=v4006[1] }
        of      = { defs={0x08048430} expr=0[1] }
        iopl0   = { defs={} expr=v4008[1] }
        iopl1   = { defs={} expr=v4009[1] }
        nt      = { defs={} expr=v4010[1] }
        ?15     = { defs={} expr=v4011[1] }
        rf      = { defs={} expr=v4012[1] }
        vm      = { defs={} expr=v4013[1] }
        ac      = { defs={} expr=v4014[1] }
        vif     = { defs={} expr=v4015[1] }
        vip     = { defs={} expr=v4016[1] }
        id      = { defs={} expr=v4017[1] }
        ?22     = { defs={} expr=v4018[1] }
        ?23     = { defs={} expr=v4019[1] }
        ?24     = { defs={} expr=v4020[1] }
        ?25     = { defs={} expr=v4021[1] }
        ?26     = { defs={} expr=v4022[1] }
        ?27     = { defs={} expr=v4023[1] }
        ?28     = { defs={} expr=v4024[1] }
        ?29     = { defs={} expr=v4025[1] }
        ?30     = { defs={} expr=v4026[1] }
        ?31     = { defs={} expr=v4027[1] }
        ip      = { defs={0x08048433} expr=v4093[32] }
    memory:
    init mem:
        address = { defs={0x0804842e,0x08048432} expr=(add[32] (add[32] v3987[32] 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v4093[32]) }
          flags = { rdonly }
        address = { defs={0x0804842e,0x08048432} expr=(add[32] (add[32] v3987[32] 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v4093[32]) }
          flags = { rdonly }
        address = { defs={0x0804842e,0x08048432} expr=(add[32] (add[32] v3987[32] 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v4093[32]) }
          flags = { rdonly }
        address = { defs={0x0804842e,0x08048432} expr=(add[32] v3987[32] 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v4093[32]) }
          flags = { rdonly }
        address = { defs={0x0804842e} expr=(add[32] v3987[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v4075[32]) }
          flags = { rdonly }
        address = { defs={0x0804842e} expr=(add[32] v3987[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v4075[32]) }
          flags = { rdonly }
        address = { defs={0x0804842e} expr=(add[32] v3987[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v4075[32]) }
          flags = { rdonly }
        address = { defs={0x0804842e} expr=v3987[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v4075[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048440:push   ebp
    registers:
        ax      = { defs={} expr=v4154[32] }
        cx      = { defs={} expr=v4155[32] }
        dx      = { defs={} expr=v4156[32] }
        bx      = { defs={} expr=v4157[32] }
        sp      = { defs={0x08048440} expr=(add[32] v4158[32] -4[32]) }
        bp      = { defs={} expr=v4159[32] }
        si      = { defs={} expr=v4160[32] }
        di      = { defs={} expr=v4161[32] }
        es      = { defs={} expr=v4162[16] }
        cs      = { defs={} expr=v4163[16] }
        ss      = { defs={} expr=v4164[16] }
        ds      = { defs={} expr=v4165[16] }
        fs      = { defs={} expr=v4166[16] }
        gs      = { defs={} expr=v4167[16] }
        cf      = { defs={} expr=v4168[1] }
        ?1      = { defs={} expr=v4169[1] }
        pf      = { defs={} expr=v4170[1] }
        ?3      = { defs={} expr=v4171[1] }
        af      = { defs={} expr=v4172[1] }
        ?5      = { defs={} expr=v4173[1] }
        zf      = { defs={} expr=v4174[1] }
        sf      = { defs={} expr=v4175[1] }
        tf      = { defs={} expr=v4176[1] }
        if      = { defs={} expr=v4177[1] }
        df      = { defs={} expr=v4178[1] }
        of      = { defs={} expr=v4179[1] }
        iopl0   = { defs={} expr=v4180[1] }
        iopl1   = { defs={} expr=v4181[1] }
        nt      = { defs={} expr=v4182[1] }
        ?15     = { defs={} expr=v4183[1] }
        rf      = { defs={} expr=v4184[1] }
        vm      = { defs={} expr=v4185[1] }
        ac      = { defs={} expr=v4186[1] }
        vif     = { defs={} expr=v4187[1] }
        vip     = { defs={} expr=v4188[1] }
        id      = { defs={} expr=v4189[1] }
        ?22     = { defs={} expr=v4190[1] }
        ?23     = { defs={} expr=v4191[1] }
        ?24     = { defs={} expr=v4192[1] }
        ?25     = { defs={} expr=v4193[1] }
        ?26     = { defs={} expr=v4194[1] }
        ?27     = { defs={} expr=v4195[1] }
        ?28     = { defs={} expr=v4196[1] }
        ?29     = { defs={} expr=v4197[1] }
        ?30     = { defs={} expr=v4198[1] }
        ?31     = { defs={} expr=v4199[1] }
        ip      = { defs={0x08048440} expr=0x08048441[32] }
    memory:
        address = { defs={0x08048440} expr=(add[32] (add[32] v4158[32] -4[32]) 3[32]) }
          value = { defs={0x08048440} expr=(extract[8] 24[32] 32[32] v4159[32]) }
          flags = { }
        address = { defs={0x08048440} expr=(add[32] (add[32] v4158[32] -4[32]) 2[32]) }
          value = { defs={0x08048440} expr=(extract[8] 16[32] 24[32] v4159[32]) }
          flags = { }
        address = { defs={0x08048440} expr=(add[32] (add[32] v4158[32] -4[32]) 1[32]) }
          value = { defs={0x08048440} expr=(extract[8] 8[32] 16[32] v4159[32]) }
          flags = { }
        address = { defs={0x08048440} expr=(add[32] v4158[32] -4[32]) }
          value = { defs={0x08048440} expr=(extract[8] 0[32] 8[32] v4159[32]) }
          flags = { }
    init mem:
0x8048441:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v4154[32] }
        cx      = { defs={} expr=v4155[32] }
        dx      = { defs={} expr=v4156[32] }
        bx      = { defs={} expr=v4157[32] }
        sp      = { defs={0x08048440} expr=(add[32] v4158[32] -4[32]) }
        bp      = { defs={0x08048440,0x08048441} expr=(add[32] v4158[32] -4[32]) }
        si      = { defs={} expr=v4160[32] }
        di      = { defs={} expr=v4161[32] }
        es      = { defs={} expr=v4162[16] }
        cs      = { defs={} expr=v4163[16] }
        ss      = { defs={} expr=v4164[16] }
        ds      = { defs={} expr=v4165[16] }
        fs      = { defs={} expr=v4166[16] }
        gs      = { defs={} expr=v4167[16] }
        cf      = { defs={} expr=v4168[1] }
        ?1      = { defs={} expr=v4169[1] }
        pf      = { defs={} expr=v4170[1] }
        ?3      = { defs={} expr=v4171[1] }
        af      = { defs={} expr=v4172[1] }
        ?5      = { defs={} expr=v4173[1] }
        zf      = { defs={} expr=v4174[1] }
        sf      = { defs={} expr=v4175[1] }
        tf      = { defs={} expr=v4176[1] }
        if      = { defs={} expr=v4177[1] }
        df      = { defs={} expr=v4178[1] }
        of      = { defs={} expr=v4179[1] }
        iopl0   = { defs={} expr=v4180[1] }
        iopl1   = { defs={} expr=v4181[1] }
        nt      = { defs={} expr=v4182[1] }
        ?15     = { defs={} expr=v4183[1] }
        rf      = { defs={} expr=v4184[1] }
        vm      = { defs={} expr=v4185[1] }
        ac      = { defs={} expr=v4186[1] }
        vif     = { defs={} expr=v4187[1] }
        vip     = { defs={} expr=v4188[1] }
        id      = { defs={} expr=v4189[1] }
        ?22     = { defs={} expr=v4190[1] }
        ?23     = { defs={} expr=v4191[1] }
        ?24     = { defs={} expr=v4192[1] }
        ?25     = { defs={} expr=v4193[1] }
        ?26     = { defs={} expr=v4194[1] }
        ?27     = { defs={} expr=v4195[1] }
        ?28     = { defs={} expr=v4196[1] }
        ?29     = { defs={} expr=v4197[1] }
        ?30     = { defs={} expr=v4198[1] }
        ?31     = { defs={} expr=v4199[1] }
        ip      = { defs={0x08048440,0x08048441} expr=0x08048443[32] }
    memory:
        address = { defs={0x08048440} expr=(add[32] (add[32] v4158[32] -4[32]) 3[32]) }
          value = { defs={0x08048440} expr=(extract[8] 24[32] 32[32] v4159[32]) }
          flags = { }
        address = { defs={0x08048440} expr=(add[32] (add[32] v4158[32] -4[32]) 2[32]) }
          value = { defs={0x08048440} expr=(extract[8] 16[32] 24[32] v4159[32]) }
          flags = { }
        address = { defs={0x08048440} expr=(add[32] (add[32] v4158[32] -4[32]) 1[32]) }
          value = { defs={0x08048440} expr=(extract[8] 8[32] 16[32] v4159[32]) }
          flags = { }
        address = { defs={0x08048440} expr=(add[32] v4158[32] -4[32]) }
          value = { defs={0x08048440} expr=(extract[8] 0[32] 8[32] v4159[32]) }
          flags = { }
    init mem:
0x8048443:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v4154[32] }
        cx      = { defs={} expr=v4155[32] }
        dx      = { defs={} expr=v4156[32] }
        bx      = { defs={} expr=v4157[32] }
        sp      = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] v4158[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048440,0x08048441} expr=(add[32] v4158[32] -4[32]) }
        si      = { defs={} expr=v4160[32] }
        di      = { defs={} expr=v4161[32] }
        es      = { defs={} expr=v4162[16] }
        cs      = { defs={} expr=v4163[16] }
        ss      = { defs={} expr=v4164[16] }
        ds      = { defs={} expr=v4165[16] }
        fs      = { defs={} expr=v4166[16] }
        gs      = { defs={} expr=v4167[16] }
        cf      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v4169[1] }
        pf      = { defs={0x08048440,0x08048443} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v4171[1] }
        af      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v4173[1] }
        zf      = { defs={0x08048440,0x08048443} expr=(zerop[1] (add[32] (add[32] v4158[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048440,0x08048443} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v4158[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v4176[1] }
        if      = { defs={} expr=v4177[1] }
        df      = { defs={} expr=v4178[1] }
        of      = { defs={0x08048440,0x08048443} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v4180[1] }
        iopl1   = { defs={} expr=v4181[1] }
        nt      = { defs={} expr=v4182[1] }
        ?15     = { defs={} expr=v4183[1] }
        rf      = { defs={} expr=v4184[1] }
        vm      = { defs={} expr=v4185[1] }
        ac      = { defs={} expr=v4186[1] }
        vif     = { defs={} expr=v4187[1] }
        vip     = { defs={} expr=v4188[1] }
        id      = { defs={} expr=v4189[1] }
        ?22     = { defs={} expr=v4190[1] }
        ?23     = { defs={} expr=v4191[1] }
        ?24     = { defs={} expr=v4192[1] }
        ?25     = { defs={} expr=v4193[1] }
        ?26     = { defs={} expr=v4194[1] }
        ?27     = { defs={} expr=v4195[1] }
        ?28     = { defs={} expr=v4196[1] }
        ?29     = { defs={} expr=v4197[1] }
        ?30     = { defs={} expr=v4198[1] }
        ?31     = { defs={} expr=v4199[1] }
        ip      = { defs={0x08048440,0x08048441,0x08048443} expr=0x08048446[32] }
    memory:
        address = { defs={0x08048440} expr=(add[32] (add[32] v4158[32] -4[32]) 3[32]) }
          value = { defs={0x08048440} expr=(extract[8] 24[32] 32[32] v4159[32]) }
          flags = { }
        address = { defs={0x08048440} expr=(add[32] (add[32] v4158[32] -4[32]) 2[32]) }
          value = { defs={0x08048440} expr=(extract[8] 16[32] 24[32] v4159[32]) }
          flags = { }
        address = { defs={0x08048440} expr=(add[32] (add[32] v4158[32] -4[32]) 1[32]) }
          value = { defs={0x08048440} expr=(extract[8] 8[32] 16[32] v4159[32]) }
          flags = { }
        address = { defs={0x08048440} expr=(add[32] v4158[32] -4[32]) }
          value = { defs={0x08048440} expr=(extract[8] 0[32] 8[32] v4159[32]) }
          flags = { }
    init mem:
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
    registers:
        ax      = { defs={} expr=v4154[32] }
        cx      = { defs={} expr=v4155[32] }
        dx      = { defs={} expr=v4156[32] }
        bx      = { defs={} expr=v4157[32] }
        sp      = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] v4158[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048440,0x08048441} expr=(add[32] v4158[32] -4[32]) }
        si      = { defs={} expr=v4160[32] }
        di      = { defs={} expr=v4161[32] }
        es      = { defs={} expr=v4162[16] }
        cs      = { defs={} expr=v4163[16] }
        ss      = { defs={} expr=v4164[16] }
        ds      = { defs={} expr=v4165[16] }
        fs      = { defs={} expr=v4166[16] }
        gs      = { defs={} expr=v4167[16] }
        cf      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v4169[1] }
        pf      = { defs={0x08048440,0x08048443} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v4171[1] }
        af      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v4173[1] }
        zf      = { defs={0x08048440,0x08048443} expr=(zerop[1] (add[32] (add[32] v4158[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048440,0x08048443} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v4158[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v4176[1] }
        if      = { defs={} expr=v4177[1] }
        df      = { defs={} expr=v4178[1] }
        of      = { defs={0x08048440,0x08048443} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v4180[1] }
        iopl1   = { defs={} expr=v4181[1] }
        nt      = { defs={} expr=v4182[1] }
        ?15     = { defs={} expr=v4183[1] }
        rf      = { defs={} expr=v4184[1] }
        vm      = { defs={} expr=v4185[1] }
        ac      = { defs={} expr=v4186[1] }
        vif     = { defs={} expr=v4187[1] }
        vip     = { defs={} expr=v4188[1] }
        id      = { defs={} expr=v4189[1] }
        ?22     = { defs={} expr=v4190[1] }
        ?23     = { defs={} expr=v4191[1] }
        ?24     = { defs={} expr=v4192[1] }
        ?25     = { defs={} expr=v4193[1] }
        ?26     = { defs={} expr=v4194[1] }
        ?27     = { defs={} expr=v4195[1] }
        ?28     = { defs={} expr=v4196[1] }
        ?29     = { defs={} expr=v4197[1] }
        ?30     = { defs={} expr=v4198[1] }
        ?31     = { defs={} expr=v4199[1] }
        ip      = { defs={0x08048440,0x08048441,0x08048443,0x08048446} expr=0x0804844d[32] }
    memory:
        address = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]) 3[32]) }
          value = { defs={0x08048446} expr=8[8] }
          flags = { }
        address = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]) 2[32]) }
          value = { defs={0x08048446} expr=4[8] }
          flags = { }
        address = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]) 1[32]) }
          value = { defs={0x08048446} expr=-123[8] }
          flags = { }
        address = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] v4158[32] -4[32]) -8[32]) }
          value = { defs={0x08048446} expr=-44[8] }
          flags = { }
        address = { defs={0x08048440} expr=(add[32] (add[32] v4158[32] -4[32]) 3[32]) }
          value = { defs={0x08048440} expr=(extract[8] 24[32] 32[32] v4159[32]) }
          flags = { }
        address = { defs={0x08048440} expr=(add[32] (add[32] v4158[32] -4[32]) 2[32]) }
          value = { defs={0x08048440} expr=(extract[8] 16[32] 24[32] v4159[32]) }
          flags = { }
        address = { defs={0x08048440} expr=(add[32] (add[32] v4158[32] -4[32]) 1[32]) }
          value = { defs={0x08048440} expr=(extract[8] 8[32] 16[32] v4159[32]) }
          flags = { }
        address = { defs={0x08048440} expr=(add[32] v4158[32] -4[32]) }
          value = { defs={0x08048440} expr=(extract[8] 0[32] 8[32] v4159[32]) }
          flags = { }
    init mem:
0x804844d:call   0x08048300<puts@plt>
    registers:
        ax      = { defs={} expr=v4154[32] }
        cx      = { defs={} expr=v4155[32] }
        dx      = { defs={} expr=v4156[32] }
        bx      = { defs={} expr=v4157[32] }
        sp      = { defs={0x08048440,0x08048443,0x0804844d} expr=(add[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]) -4[32]) }
        bp      = { defs={0x08048440,0x08048441} expr=(add[32] v4158[32] -4[32]) }
        si      = { defs={} expr=v4160[32] }
        di      = { defs={} expr=v4161[32] }
        es      = { defs={} expr=v4162[16] }
        cs      = { defs={} expr=v4163[16] }
        ss      = { defs={} expr=v4164[16] }
        ds      = { defs={} expr=v4165[16] }
        fs      = { defs={} expr=v4166[16] }
        gs      = { defs={} expr=v4167[16] }
        cf      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v4169[1] }
        pf      = { defs={0x08048440,0x08048443} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v4171[1] }
        af      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v4173[1] }
        zf      = { defs={0x08048440,0x08048443} expr=(zerop[1] (add[32] (add[32] v4158[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048440,0x08048443} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v4158[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v4176[1] }
        if      = { defs={} expr=v4177[1] }
        df      = { defs={} expr=v4178[1] }
        of      = { defs={0x08048440,0x08048443} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4158[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v4180[1] }
        iopl1   = { defs={} expr=v4181[1] }
        nt      = { defs={} expr=v4182[1] }
        ?15     = { defs={} expr=v4183[1] }
        rf      = { defs={} expr=v4184[1] }
        vm      = { defs={} expr=v4185[1] }
        ac      = { defs={} expr=v4186[1] }
        vif     = { defs={} expr=v4187[1] }
        vip     = { defs={} expr=v4188[1] }
        id      = { defs={} expr=v4189[1] }
        ?22     = { defs={} expr=v4190[1] }
        ?23     = { defs={} expr=v4191[1] }
        ?24     = { defs={} expr=v4192[1] }
        ?25     = { defs={} expr=v4193[1] }
        ?26     = { defs={} expr=v4194[1] }
        ?27     = { defs={} expr=v4195[1] }
        ?28     = { defs={} expr=v4196[1] }
        ?29     = { defs={} expr=v4197[1] }
        ?30     = { defs={} expr=v4198[1] }
        ?31     = { defs={} expr=v4199[1] }
        ip      = { defs={0x0804844d} expr=0x08048300[32] }
    memory:
        address = { defs={0x08048440,0x08048443,0x0804844d} expr=(add[32] (add[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]) -4[32]) 3[32]) }
          value = { defs={0x08048440,0x08048441,0x08048443,0x08048446,0x0804844d} expr=8[8] }
          flags = { }
        address = { defs={0x08048440,0x08048443,0x0804844d} expr=(add[32] (add[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]) -4[32]) 2[32]) }
          value = { defs={0x08048440,0x08048441,0x08048443,0x08048446,0x0804844d} expr=4[8] }
          flags = { }
        address = { defs={0x08048440,0x08048443,0x0804844d} expr=(add[32] (add[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]) -4[32]) 1[32]) }
          value = { defs={0x08048440,0x08048441,0x08048443,0x08048446,0x0804844d} expr=-124[8] }
          flags = { }
        address = { defs={0x08048440,0x08048443,0x0804844d} expr=(add[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]) -4[32]) }
          value = { defs={0x08048440,0x08048441,0x08048443,0x08048446,0x0804844d} expr=82[8] }
          flags = { }
        address = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]) 3[32]) }
          value = { defs={0x08048446} expr=8[8] }
          flags = { }
        address = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]) 2[32]) }
          value = { defs={0x08048446} expr=4[8] }
          flags = { }
        address = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] (add[32] v4158[32] -4[32]) -8[32]) 1[32]) }
          value = { defs={0x08048446} expr=-123[8] }
          flags = { }
        address = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] v4158[32] -4[32]) -8[32]) }
          value = { defs={0x08048446} expr=-44[8] }
          flags = { }
        address = { defs={0x08048440} expr=(add[32] (add[32] v4158[32] -4[32]) 3[32]) }
          value = { defs={0x08048440} expr=(extract[8] 24[32] 32[32] v4159[32]) }
          flags = { }
        address = { defs={0x08048440} expr=(add[32] (add[32] v4158[32] -4[32]) 2[32]) }
          value = { defs={0x08048440} expr=(extract[8] 16[32] 24[32] v4159[32]) }
          flags = { }
        address = { defs={0x08048440} expr=(add[32] (add[32] v4158[32] -4[32]) 1[32]) }
          value = { defs={0x08048440} expr=(extract[8] 8[32] 16[32] v4159[32]) }
          flags = { }
        address = { defs={0x08048440} expr=(add[32] v4158[32] -4[32]) }
          value = { defs={0x08048440} expr=(extract[8] 0[32] 8[32] v4159[32]) }
          flags = { }
    init mem:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
    registers:
        ax      = { defs={} expr=v4349[32] }
        cx      = { defs={} expr=v4350[32] }
        dx      = { defs={} expr=v4351[32] }
        bx      = { defs={} expr=v4352[32] }
        sp      = { defs={0x08048452} expr=v4354[32] }
        bp      = { defs={} expr=v4354[32] }
        si      = { defs={} expr=v4355[32] }
        di      = { defs={} expr=v4356[32] }
        es      = { defs={} expr=v4357[16] }
        cs      = { defs={} expr=v4358[16] }
        ss      = { defs={} expr=v4359[16] }
        ds      = { defs={} expr=v4360[16] }
        fs      = { defs={} expr=v4361[16] }
        gs      = { defs={} expr=v4362[16] }
        cf      = { defs={} expr=v4363[1] }
        ?1      = { defs={} expr=v4364[1] }
        pf      = { defs={} expr=v4365[1] }
        ?3      = { defs={} expr=v4366[1] }
        af      = { defs={} expr=v4367[1] }
        ?5      = { defs={} expr=v4368[1] }
        zf      = { defs={} expr=v4369[1] }
        sf      = { defs={} expr=v4370[1] }
        tf      = { defs={} expr=v4371[1] }
        if      = { defs={} expr=v4372[1] }
        df      = { defs={} expr=v4373[1] }
        of      = { defs={} expr=v4374[1] }
        iopl0   = { defs={} expr=v4375[1] }
        iopl1   = { defs={} expr=v4376[1] }
        nt      = { defs={} expr=v4377[1] }
        ?15     = { defs={} expr=v4378[1] }
        rf      = { defs={} expr=v4379[1] }
        vm      = { defs={} expr=v4380[1] }
        ac      = { defs={} expr=v4381[1] }
        vif     = { defs={} expr=v4382[1] }
        vip     = { defs={} expr=v4383[1] }
        id      = { defs={} expr=v4384[1] }
        ?22     = { defs={} expr=v4385[1] }
        ?23     = { defs={} expr=v4386[1] }
        ?24     = { defs={} expr=v4387[1] }
        ?25     = { defs={} expr=v4388[1] }
        ?26     = { defs={} expr=v4389[1] }
        ?27     = { defs={} expr=v4390[1] }
        ?28     = { defs={} expr=v4391[1] }
        ?29     = { defs={} expr=v4392[1] }
        ?30     = { defs={} expr=v4393[1] }
        ?31     = { defs={} expr=v4394[1] }
        ip      = { defs={0x08048452} expr=0x08048454[32] }
    memory:
    init mem:
0x8048454:pop    ebp
    registers:
        ax      = { defs={} expr=v4349[32] }
        cx      = { defs={} expr=v4350[32] }
        dx      = { defs={} expr=v4351[32] }
        bx      = { defs={} expr=v4352[32] }
        sp      = { defs={0x08048452,0x08048454} expr=(add[32] v4354[32] 4[32]) }
        bp      = { defs={0x08048454} expr=v4407[32] }
        si      = { defs={} expr=v4355[32] }
        di      = { defs={} expr=v4356[32] }
        es      = { defs={} expr=v4357[16] }
        cs      = { defs={} expr=v4358[16] }
        ss      = { defs={} expr=v4359[16] }
        ds      = { defs={} expr=v4360[16] }
        fs      = { defs={} expr=v4361[16] }
        gs      = { defs={} expr=v4362[16] }
        cf      = { defs={} expr=v4363[1] }
        ?1      = { defs={} expr=v4364[1] }
        pf      = { defs={} expr=v4365[1] }
        ?3      = { defs={} expr=v4366[1] }
        af      = { defs={} expr=v4367[1] }
        ?5      = { defs={} expr=v4368[1] }
        zf      = { defs={} expr=v4369[1] }
        sf      = { defs={} expr=v4370[1] }
        tf      = { defs={} expr=v4371[1] }
        if      = { defs={} expr=v4372[1] }
        df      = { defs={} expr=v4373[1] }
        of      = { defs={} expr=v4374[1] }
        iopl0   = { defs={} expr=v4375[1] }
        iopl1   = { defs={} expr=v4376[1] }
        nt      = { defs={} expr=v4377[1] }
        ?15     = { defs={} expr=v4378[1] }
        rf      = { defs={} expr=v4379[1] }
        vm      = { defs={} expr=v4380[1] }
        ac      = { defs={} expr=v4381[1] }
        vif     = { defs={} expr=v4382[1] }
        vip     = { defs={} expr=v4383[1] }
        id      = { defs={} expr=v4384[1] }
        ?22     = { defs={} expr=v4385[1] }
        ?23     = { defs={} expr=v4386[1] }
        ?24     = { defs={} expr=v4387[1] }
        ?25     = { defs={} expr=v4388[1] }
        ?26     = { defs={} expr=v4389[1] }
        ?27     = { defs={} expr=v4390[1] }
        ?28     = { defs={} expr=v4391[1] }
        ?29     = { defs={} expr=v4392[1] }
        ?30     = { defs={} expr=v4393[1] }
        ?31     = { defs={} expr=v4394[1] }
        ip      = { defs={0x08048452,0x08048454} expr=0x08048455[32] }
    memory:
    init mem:
        address = { defs={0x08048452} expr=(add[32] v4354[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v4407[32]) }
          flags = { rdonly }
        address = { defs={0x08048452} expr=(add[32] v4354[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v4407[32]) }
          flags = { rdonly }
        address = { defs={0x08048452} expr=(add[32] v4354[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v4407[32]) }
          flags = { rdonly }
        address = { defs={0x08048452} expr=v4354[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v4407[32]) }
          flags = { rdonly }
0x8048455:ret    
    registers:
        ax      = { defs={} expr=v4349[32] }
        cx      = { defs={} expr=v4350[32] }
        dx      = { defs={} expr=v4351[32] }
        bx      = { defs={} expr=v4352[32] }
        sp      = { defs={0x08048452,0x08048454,0x08048455} expr=(add[32] (add[32] v4354[32] 4[32]) 4[32]) }
        bp      = { defs={0x08048454} expr=v4407[32] }
        si      = { defs={} expr=v4355[32] }
        di      = { defs={} expr=v4356[32] }
        es      = { defs={} expr=v4357[16] }
        cs      = { defs={} expr=v4358[16] }
        ss      = { defs={} expr=v4359[16] }
        ds      = { defs={} expr=v4360[16] }
        fs      = { defs={} expr=v4361[16] }
        gs      = { defs={} expr=v4362[16] }
        cf      = { defs={} expr=v4363[1] }
        ?1      = { defs={} expr=v4364[1] }
        pf      = { defs={} expr=v4365[1] }
        ?3      = { defs={} expr=v4366[1] }
        af      = { defs={} expr=v4367[1] }
        ?5      = { defs={} expr=v4368[1] }
        zf      = { defs={} expr=v4369[1] }
        sf      = { defs={} expr=v4370[1] }
        tf      = { defs={} expr=v4371[1] }
        if      = { defs={} expr=v4372[1] }
        df      = { defs={} expr=v4373[1] }
        of      = { defs={} expr=v4374[1] }
        iopl0   = { defs={} expr=v4375[1] }
        iopl1   = { defs={} expr=v4376[1] }
        nt      = { defs={} expr=v4377[1] }
        ?15     = { defs={} expr=v4378[1] }
        rf      = { defs={} expr=v4379[1] }
        vm      = { defs={} expr=v4380[1] }
        ac      = { defs={} expr=v4381[1] }
        vif     = { defs={} expr=v4382[1] }
        vip     = { defs={} expr=v4383[1] }
        id      = { defs={} expr=v4384[1] }
        ?22     = { defs={} expr=v4385[1] }
        ?23     = { defs={} expr=v4386[1] }
        ?24     = { defs={} expr=v4387[1] }
        ?25     = { defs={} expr=v4388[1] }
        ?26     = { defs={} expr=v4389[1] }
        ?27     = { defs={} expr=v4390[1] }
        ?28     = { defs={} expr=v4391[1] }
        ?29     = { defs={} expr=v4392[1] }
        ?30     = { defs={} expr=v4393[1] }
        ?31     = { defs={} expr=v4394[1] }
        ip      = { defs={0x08048455} expr=v4425[32] }
    memory:
    init mem:
        address = { defs={0x08048452,0x08048454} expr=(add[32] (add[32] v4354[32] 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v4425[32]) }
          flags = { rdonly }
        address = { defs={0x08048452,0x08048454} expr=(add[32] (add[32] v4354[32] 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v4425[32]) }
          flags = { rdonly }
        address = { defs={0x08048452,0x08048454} expr=(add[32] (add[32] v4354[32] 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v4425[32]) }
          flags = { rdonly }
        address = { defs={0x08048452,0x08048454} expr=(add[32] v4354[32] 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v4425[32]) }
          flags = { rdonly }
        address = { defs={0x08048452} expr=(add[32] v4354[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v4407[32]) }
          flags = { rdonly }
        address = { defs={0x08048452} expr=(add[32] v4354[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v4407[32]) }
          flags = { rdonly }
        address = { defs={0x08048452} expr=(add[32] v4354[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v4407[32]) }
          flags = { rdonly }
        address = { defs={0x08048452} expr=v4354[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v4407[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048460:push   ebp
    registers:
        ax      = { defs={} expr=v4486[32] }
        cx      = { defs={} expr=v4487[32] }
        dx      = { defs={} expr=v4488[32] }
        bx      = { defs={} expr=v4489[32] }
        sp      = { defs={0x08048460} expr=(add[32] v4490[32] -4[32]) }
        bp      = { defs={} expr=v4491[32] }
        si      = { defs={} expr=v4492[32] }
        di      = { defs={} expr=v4493[32] }
        es      = { defs={} expr=v4494[16] }
        cs      = { defs={} expr=v4495[16] }
        ss      = { defs={} expr=v4496[16] }
        ds      = { defs={} expr=v4497[16] }
        fs      = { defs={} expr=v4498[16] }
        gs      = { defs={} expr=v4499[16] }
        cf      = { defs={} expr=v4500[1] }
        ?1      = { defs={} expr=v4501[1] }
        pf      = { defs={} expr=v4502[1] }
        ?3      = { defs={} expr=v4503[1] }
        af      = { defs={} expr=v4504[1] }
        ?5      = { defs={} expr=v4505[1] }
        zf      = { defs={} expr=v4506[1] }
        sf      = { defs={} expr=v4507[1] }
        tf      = { defs={} expr=v4508[1] }
        if      = { defs={} expr=v4509[1] }
        df      = { defs={} expr=v4510[1] }
        of      = { defs={} expr=v4511[1] }
        iopl0   = { defs={} expr=v4512[1] }
        iopl1   = { defs={} expr=v4513[1] }
        nt      = { defs={} expr=v4514[1] }
        ?15     = { defs={} expr=v4515[1] }
        rf      = { defs={} expr=v4516[1] }
        vm      = { defs={} expr=v4517[1] }
        ac      = { defs={} expr=v4518[1] }
        vif     = { defs={} expr=v4519[1] }
        vip     = { defs={} expr=v4520[1] }
        id      = { defs={} expr=v4521[1] }
        ?22     = { defs={} expr=v4522[1] }
        ?23     = { defs={} expr=v4523[1] }
        ?24     = { defs={} expr=v4524[1] }
        ?25     = { defs={} expr=v4525[1] }
        ?26     = { defs={} expr=v4526[1] }
        ?27     = { defs={} expr=v4527[1] }
        ?28     = { defs={} expr=v4528[1] }
        ?29     = { defs={} expr=v4529[1] }
        ?30     = { defs={} expr=v4530[1] }
        ?31     = { defs={} expr=v4531[1] }
        ip      = { defs={0x08048460} expr=0x08048461[32] }
    memory:
        address = { defs={0x08048460} expr=(add[32] (add[32] v4490[32] -4[32]) 3[32]) }
          value = { defs={0x08048460} expr=(extract[8] 24[32] 32[32] v4491[32]) }
          flags = { }
        address = { defs={0x08048460} expr=(add[32] (add[32] v4490[32] -4[32]) 2[32]) }
          value = { defs={0x08048460} expr=(extract[8] 16[32] 24[32] v4491[32]) }
          flags = { }
        address = { defs={0x08048460} expr=(add[32] (add[32] v4490[32] -4[32]) 1[32]) }
          value = { defs={0x08048460} expr=(extract[8] 8[32] 16[32] v4491[32]) }
          flags = { }
        address = { defs={0x08048460} expr=(add[32] v4490[32] -4[32]) }
          value = { defs={0x08048460} expr=(extract[8] 0[32] 8[32] v4491[32]) }
          flags = { }
    init mem:
0x8048461:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v4486[32] }
        cx      = { defs={} expr=v4487[32] }
        dx      = { defs={} expr=v4488[32] }
        bx      = { defs={} expr=v4489[32] }
        sp      = { defs={0x08048460} expr=(add[32] v4490[32] -4[32]) }
        bp      = { defs={0x08048460,0x08048461} expr=(add[32] v4490[32] -4[32]) }
        si      = { defs={} expr=v4492[32] }
        di      = { defs={} expr=v4493[32] }
        es      = { defs={} expr=v4494[16] }
        cs      = { defs={} expr=v4495[16] }
        ss      = { defs={} expr=v4496[16] }
        ds      = { defs={} expr=v4497[16] }
        fs      = { defs={} expr=v4498[16] }
        gs      = { defs={} expr=v4499[16] }
        cf      = { defs={} expr=v4500[1] }
        ?1      = { defs={} expr=v4501[1] }
        pf      = { defs={} expr=v4502[1] }
        ?3      = { defs={} expr=v4503[1] }
        af      = { defs={} expr=v4504[1] }
        ?5      = { defs={} expr=v4505[1] }
        zf      = { defs={} expr=v4506[1] }
        sf      = { defs={} expr=v4507[1] }
        tf      = { defs={} expr=v4508[1] }
        if      = { defs={} expr=v4509[1] }
        df      = { defs={} expr=v4510[1] }
        of      = { defs={} expr=v4511[1] }
        iopl0   = { defs={} expr=v4512[1] }
        iopl1   = { defs={} expr=v4513[1] }
        nt      = { defs={} expr=v4514[1] }
        ?15     = { defs={} expr=v4515[1] }
        rf      = { defs={} expr=v4516[1] }
        vm      = { defs={} expr=v4517[1] }
        ac      = { defs={} expr=v4518[1] }
        vif     = { defs={} expr=v4519[1] }
        vip     = { defs={} expr=v4520[1] }
        id      = { defs={} expr=v4521[1] }
        ?22     = { defs={} expr=v4522[1] }
        ?23     = { defs={} expr=v4523[1] }
        ?24     = { defs={} expr=v4524[1] }
        ?25     = { defs={} expr=v4525[1] }
        ?26     = { defs={} expr=v4526[1] }
        ?27     = { defs={} expr=v4527[1] }
        ?28     = { defs={} expr=v4528[1] }
        ?29     = { defs={} expr=v4529[1] }
        ?30     = { defs={} expr=v4530[1] }
        ?31     = { defs={} expr=v4531[1] }
        ip      = { defs={0x08048460,0x08048461} expr=0x08048463[32] }
    memory:
        address = { defs={0x08048460} expr=(add[32] (add[32] v4490[32] -4[32]) 3[32]) }
          value = { defs={0x08048460} expr=(extract[8] 24[32] 32[32] v4491[32]) }
          flags = { }
        address = { defs={0x08048460} expr=(add[32] (add[32] v4490[32] -4[32]) 2[32]) }
          value = { defs={0x08048460} expr=(extract[8] 16[32] 24[32] v4491[32]) }
          flags = { }
        address = { defs={0x08048460} expr=(add[32] (add[32] v4490[32] -4[32]) 1[32]) }
          value = { defs={0x08048460} expr=(extract[8] 8[32] 16[32] v4491[32]) }
          flags = { }
        address = { defs={0x08048460} expr=(add[32] v4490[32] -4[32]) }
          value = { defs={0x08048460} expr=(extract[8] 0[32] 8[32] v4491[32]) }
          flags = { }
    init mem:
0x8048463:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v4486[32] }
        cx      = { defs={} expr=v4487[32] }
        dx      = { defs={} expr=v4488[32] }
        bx      = { defs={} expr=v4489[32] }
        sp      = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] v4490[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048460,0x08048461} expr=(add[32] v4490[32] -4[32]) }
        si      = { defs={} expr=v4492[32] }
        di      = { defs={} expr=v4493[32] }
        es      = { defs={} expr=v4494[16] }
        cs      = { defs={} expr=v4495[16] }
        ss      = { defs={} expr=v4496[16] }
        ds      = { defs={} expr=v4497[16] }
        fs      = { defs={} expr=v4498[16] }
        gs      = { defs={} expr=v4499[16] }
        cf      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v4501[1] }
        pf      = { defs={0x08048460,0x08048463} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v4503[1] }
        af      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v4505[1] }
        zf      = { defs={0x08048460,0x08048463} expr=(zerop[1] (add[32] (add[32] v4490[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048460,0x08048463} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v4490[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v4508[1] }
        if      = { defs={} expr=v4509[1] }
        df      = { defs={} expr=v4510[1] }
        of      = { defs={0x08048460,0x08048463} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v4512[1] }
        iopl1   = { defs={} expr=v4513[1] }
        nt      = { defs={} expr=v4514[1] }
        ?15     = { defs={} expr=v4515[1] }
        rf      = { defs={} expr=v4516[1] }
        vm      = { defs={} expr=v4517[1] }
        ac      = { defs={} expr=v4518[1] }
        vif     = { defs={} expr=v4519[1] }
        vip     = { defs={} expr=v4520[1] }
        id      = { defs={} expr=v4521[1] }
        ?22     = { defs={} expr=v4522[1] }
        ?23     = { defs={} expr=v4523[1] }
        ?24     = { defs={} expr=v4524[1] }
        ?25     = { defs={} expr=v4525[1] }
        ?26     = { defs={} expr=v4526[1] }
        ?27     = { defs={} expr=v4527[1] }
        ?28     = { defs={} expr=v4528[1] }
        ?29     = { defs={} expr=v4529[1] }
        ?30     = { defs={} expr=v4530[1] }
        ?31     = { defs={} expr=v4531[1] }
        ip      = { defs={0x08048460,0x08048461,0x08048463} expr=0x08048466[32] }
    memory:
        address = { defs={0x08048460} expr=(add[32] (add[32] v4490[32] -4[32]) 3[32]) }
          value = { defs={0x08048460} expr=(extract[8] 24[32] 32[32] v4491[32]) }
          flags = { }
        address = { defs={0x08048460} expr=(add[32] (add[32] v4490[32] -4[32]) 2[32]) }
          value = { defs={0x08048460} expr=(extract[8] 16[32] 24[32] v4491[32]) }
          flags = { }
        address = { defs={0x08048460} expr=(add[32] (add[32] v4490[32] -4[32]) 1[32]) }
          value = { defs={0x08048460} expr=(extract[8] 8[32] 16[32] v4491[32]) }
          flags = { }
        address = { defs={0x08048460} expr=(add[32] v4490[32] -4[32]) }
          value = { defs={0x08048460} expr=(extract[8] 0[32] 8[32] v4491[32]) }
          flags = { }
    init mem:
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
    registers:
        ax      = { defs={} expr=v4486[32] }
        cx      = { defs={} expr=v4487[32] }
        dx      = { defs={} expr=v4488[32] }
        bx      = { defs={} expr=v4489[32] }
        sp      = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] v4490[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048460,0x08048461} expr=(add[32] v4490[32] -4[32]) }
        si      = { defs={} expr=v4492[32] }
        di      = { defs={} expr=v4493[32] }
        es      = { defs={} expr=v4494[16] }
        cs      = { defs={} expr=v4495[16] }
        ss      = { defs={} expr=v4496[16] }
        ds      = { defs={} expr=v4497[16] }
        fs      = { defs={} expr=v4498[16] }
        gs      = { defs={} expr=v4499[16] }
        cf      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v4501[1] }
        pf      = { defs={0x08048460,0x08048463} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v4503[1] }
        af      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v4505[1] }
        zf      = { defs={0x08048460,0x08048463} expr=(zerop[1] (add[32] (add[32] v4490[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048460,0x08048463} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v4490[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v4508[1] }
        if      = { defs={} expr=v4509[1] }
        df      = { defs={} expr=v4510[1] }
        of      = { defs={0x08048460,0x08048463} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v4512[1] }
        iopl1   = { defs={} expr=v4513[1] }
        nt      = { defs={} expr=v4514[1] }
        ?15     = { defs={} expr=v4515[1] }
        rf      = { defs={} expr=v4516[1] }
        vm      = { defs={} expr=v4517[1] }
        ac      = { defs={} expr=v4518[1] }
        vif     = { defs={} expr=v4519[1] }
        vip     = { defs={} expr=v4520[1] }
        id      = { defs={} expr=v4521[1] }
        ?22     = { defs={} expr=v4522[1] }
        ?23     = { defs={} expr=v4523[1] }
        ?24     = { defs={} expr=v4524[1] }
        ?25     = { defs={} expr=v4525[1] }
        ?26     = { defs={} expr=v4526[1] }
        ?27     = { defs={} expr=v4527[1] }
        ?28     = { defs={} expr=v4528[1] }
        ?29     = { defs={} expr=v4529[1] }
        ?30     = { defs={} expr=v4530[1] }
        ?31     = { defs={} expr=v4531[1] }
        ip      = { defs={0x08048460,0x08048461,0x08048463,0x08048466} expr=0x0804846d[32] }
    memory:
        address = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]) 3[32]) }
          value = { defs={0x08048466} expr=8[8] }
          flags = { }
        address = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]) 2[32]) }
          value = { defs={0x08048466} expr=4[8] }
          flags = { }
        address = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]) 1[32]) }
          value = { defs={0x08048466} expr=-123[8] }
          flags = { }
        address = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] v4490[32] -4[32]) -8[32]) }
          value = { defs={0x08048466} expr=-44[8] }
          flags = { }
        address = { defs={0x08048460} expr=(add[32] (add[32] v4490[32] -4[32]) 3[32]) }
          value = { defs={0x08048460} expr=(extract[8] 24[32] 32[32] v4491[32]) }
          flags = { }
        address = { defs={0x08048460} expr=(add[32] (add[32] v4490[32] -4[32]) 2[32]) }
          value = { defs={0x08048460} expr=(extract[8] 16[32] 24[32] v4491[32]) }
          flags = { }
        address = { defs={0x08048460} expr=(add[32] (add[32] v4490[32] -4[32]) 1[32]) }
          value = { defs={0x08048460} expr=(extract[8] 8[32] 16[32] v4491[32]) }
          flags = { }
        address = { defs={0x08048460} expr=(add[32] v4490[32] -4[32]) }
          value = { defs={0x08048460} expr=(extract[8] 0[32] 8[32] v4491[32]) }
          flags = { }
    init mem:
0x804846d:call   0x08048300<puts@plt>
    registers:
        ax      = { defs={} expr=v4486[32] }
        cx      = { defs={} expr=v4487[32] }
        dx      = { defs={} expr=v4488[32] }
        bx      = { defs={} expr=v4489[32] }
        sp      = { defs={0x08048460,0x08048463,0x0804846d} expr=(add[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]) -4[32]) }
        bp      = { defs={0x08048460,0x08048461} expr=(add[32] v4490[32] -4[32]) }
        si      = { defs={} expr=v4492[32] }
        di      = { defs={} expr=v4493[32] }
        es      = { defs={} expr=v4494[16] }
        cs      = { defs={} expr=v4495[16] }
        ss      = { defs={} expr=v4496[16] }
        ds      = { defs={} expr=v4497[16] }
        fs      = { defs={} expr=v4498[16] }
        gs      = { defs={} expr=v4499[16] }
        cf      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v4501[1] }
        pf      = { defs={0x08048460,0x08048463} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v4503[1] }
        af      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v4505[1] }
        zf      = { defs={0x08048460,0x08048463} expr=(zerop[1] (add[32] (add[32] v4490[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048460,0x08048463} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v4490[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v4508[1] }
        if      = { defs={} expr=v4509[1] }
        df      = { defs={} expr=v4510[1] }
        of      = { defs={0x08048460,0x08048463} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4490[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v4512[1] }
        iopl1   = { defs={} expr=v4513[1] }
        nt      = { defs={} expr=v4514[1] }
        ?15     = { defs={} expr=v4515[1] }
        rf      = { defs={} expr=v4516[1] }
        vm      = { defs={} expr=v4517[1] }
        ac      = { defs={} expr=v4518[1] }
        vif     = { defs={} expr=v4519[1] }
        vip     = { defs={} expr=v4520[1] }
        id      = { defs={} expr=v4521[1] }
        ?22     = { defs={} expr=v4522[1] }
        ?23     = { defs={} expr=v4523[1] }
        ?24     = { defs={} expr=v4524[1] }
        ?25     = { defs={} expr=v4525[1] }
        ?26     = { defs={} expr=v4526[1] }
        ?27     = { defs={} expr=v4527[1] }
        ?28     = { defs={} expr=v4528[1] }
        ?29     = { defs={} expr=v4529[1] }
        ?30     = { defs={} expr=v4530[1] }
        ?31     = { defs={} expr=v4531[1] }
        ip      = { defs={0x0804846d} expr=0x08048300[32] }
    memory:
        address = { defs={0x08048460,0x08048463,0x0804846d} expr=(add[32] (add[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]) -4[32]) 3[32]) }
          value = { defs={0x08048460,0x08048461,0x08048463,0x08048466,0x0804846d} expr=8[8] }
          flags = { }
        address = { defs={0x08048460,0x08048463,0x0804846d} expr=(add[32] (add[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]) -4[32]) 2[32]) }
          value = { defs={0x08048460,0x08048461,0x08048463,0x08048466,0x0804846d} expr=4[8] }
          flags = { }
        address = { defs={0x08048460,0x08048463,0x0804846d} expr=(add[32] (add[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]) -4[32]) 1[32]) }
          value = { defs={0x08048460,0x08048461,0x08048463,0x08048466,0x0804846d} expr=-124[8] }
          flags = { }
        address = { defs={0x08048460,0x08048463,0x0804846d} expr=(add[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]) -4[32]) }
          value = { defs={0x08048460,0x08048461,0x08048463,0x08048466,0x0804846d} expr=114[8] }
          flags = { }
        address = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]) 3[32]) }
          value = { defs={0x08048466} expr=8[8] }
          flags = { }
        address = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]) 2[32]) }
          value = { defs={0x08048466} expr=4[8] }
          flags = { }
        address = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] (add[32] v4490[32] -4[32]) -8[32]) 1[32]) }
          value = { defs={0x08048466} expr=-123[8] }
          flags = { }
        address = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] v4490[32] -4[32]) -8[32]) }
          value = { defs={0x08048466} expr=-44[8] }
          flags = { }
        address = { defs={0x08048460} expr=(add[32] (add[32] v4490[32] -4[32]) 3[32]) }
          value = { defs={0x08048460} expr=(extract[8] 24[32] 32[32] v4491[32]) }
          flags = { }
        address = { defs={0x08048460} expr=(add[32] (add[32] v4490[32] -4[32]) 2[32]) }
          value = { defs={0x08048460} expr=(extract[8] 16[32] 24[32] v4491[32]) }
          flags = { }
        address = { defs={0x08048460} expr=(add[32] (add[32] v4490[32] -4[32]) 1[32]) }
          value = { defs={0x08048460} expr=(extract[8] 8[32] 16[32] v4491[32]) }
          flags = { }
        address = { defs={0x08048460} expr=(add[32] v4490[32] -4[32]) }
          value = { defs={0x08048460} expr=(extract[8] 0[32] 8[32] v4491[32]) }
          flags = { }
    init mem:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    registers:
        ax      = { defs={} expr=v4681[32] }
        cx      = { defs={} expr=v4682[32] }
        dx      = { defs={} expr=v4683[32] }
        bx      = { defs={} expr=v4684[32] }
        sp      = { defs={} expr=v4685[32] }
        bp      = { defs={} expr=v4686[32] }
        si      = { defs={} expr=v4687[32] }
        di      = { defs={} expr=v4688[32] }
        es      = { defs={} expr=v4689[16] }
        cs      = { defs={} expr=v4690[16] }
        ss      = { defs={} expr=v4691[16] }
        ds      = { defs={} expr=v4692[16] }
        fs      = { defs={} expr=v4693[16] }
        gs      = { defs={} expr=v4694[16] }
        cf      = { defs={} expr=v4695[1] }
        ?1      = { defs={} expr=v4696[1] }
        pf      = { defs={} expr=v4697[1] }
        ?3      = { defs={} expr=v4698[1] }
        af      = { defs={} expr=v4699[1] }
        ?5      = { defs={} expr=v4700[1] }
        zf      = { defs={} expr=v4701[1] }
        sf      = { defs={} expr=v4702[1] }
        tf      = { defs={} expr=v4703[1] }
        if      = { defs={} expr=v4704[1] }
        df      = { defs={} expr=v4705[1] }
        of      = { defs={} expr=v4706[1] }
        iopl0   = { defs={} expr=v4707[1] }
        iopl1   = { defs={} expr=v4708[1] }
        nt      = { defs={} expr=v4709[1] }
        ?15     = { defs={} expr=v4710[1] }
        rf      = { defs={} expr=v4711[1] }
        vm      = { defs={} expr=v4712[1] }
        ac      = { defs={} expr=v4713[1] }
        vif     = { defs={} expr=v4714[1] }
        vip     = { defs={} expr=v4715[1] }
        id      = { defs={} expr=v4716[1] }
        ?22     = { defs={} expr=v4717[1] }
        ?23     = { defs={} expr=v4718[1] }
        ?24     = { defs={} expr=v4719[1] }
        ?25     = { defs={} expr=v4720[1] }
        ?26     = { defs={} expr=v4721[1] }
        ?27     = { defs={} expr=v4722[1] }
        ?28     = { defs={} expr=v4723[1] }
        ?29     = { defs={} expr=v4724[1] }
        ?30     = { defs={} expr=v4725[1] }
        ?31     = { defs={} expr=v4726[1] }
        ip      = { defs={0x08048472} expr=0x08048479[32] }
    memory:
        address = { defs={} expr=(add[32] v4685[32] 3[32]) }
          value = { defs={0x08048472} expr=0[8] }
          flags = { }
        address = { defs={} expr=(add[32] v4685[32] 2[32]) }
          value = { defs={0x08048472} expr=0[8] }
          flags = { }
        address = { defs={} expr=(add[32] v4685[32] 1[32]) }
          value = { defs={0x08048472} expr=0[8] }
          flags = { }
        address = { defs={} expr=v4685[32] }
          value = { defs={0x08048472} expr=0[8] }
          flags = { }
    init mem:
0x8048479:call   0x08048320<_exit@plt>
    registers:
        ax      = { defs={} expr=v4681[32] }
        cx      = { defs={} expr=v4682[32] }
        dx      = { defs={} expr=v4683[32] }
        bx      = { defs={} expr=v4684[32] }
        sp      = { defs={0x08048479} expr=(add[32] v4685[32] -4[32]) }
        bp      = { defs={} expr=v4686[32] }
        si      = { defs={} expr=v4687[32] }
        di      = { defs={} expr=v4688[32] }
        es      = { defs={} expr=v4689[16] }
        cs      = { defs={} expr=v4690[16] }
        ss      = { defs={} expr=v4691[16] }
        ds      = { defs={} expr=v4692[16] }
        fs      = { defs={} expr=v4693[16] }
        gs      = { defs={} expr=v4694[16] }
        cf      = { defs={} expr=v4695[1] }
        ?1      = { defs={} expr=v4696[1] }
        pf      = { defs={} expr=v4697[1] }
        ?3      = { defs={} expr=v4698[1] }
        af      = { defs={} expr=v4699[1] }
        ?5      = { defs={} expr=v4700[1] }
        zf      = { defs={} expr=v4701[1] }
        sf      = { defs={} expr=v4702[1] }
        tf      = { defs={} expr=v4703[1] }
        if      = { defs={} expr=v4704[1] }
        df      = { defs={} expr=v4705[1] }
        of      = { defs={} expr=v4706[1] }
        iopl0   = { defs={} expr=v4707[1] }
        iopl1   = { defs={} expr=v4708[1] }
        nt      = { defs={} expr=v4709[1] }
        ?15     = { defs={} expr=v4710[1] }
        rf      = { defs={} expr=v4711[1] }
        vm      = { defs={} expr=v4712[1] }
        ac      = { defs={} expr=v4713[1] }
        vif     = { defs={} expr=v4714[1] }
        vip     = { defs={} expr=v4715[1] }
        id      = { defs={} expr=v4716[1] }
        ?22     = { defs={} expr=v4717[1] }
        ?23     = { defs={} expr=v4718[1] }
        ?24     = { defs={} expr=v4719[1] }
        ?25     = { defs={} expr=v4720[1] }
        ?26     = { defs={} expr=v4721[1] }
        ?27     = { defs={} expr=v4722[1] }
        ?28     = { defs={} expr=v4723[1] }
        ?29     = { defs={} expr=v4724[1] }
        ?30     = { defs={} expr=v4725[1] }
        ?31     = { defs={} expr=v4726[1] }
        ip      = { defs={0x08048479} expr=0x08048320[32] }
    memory:
        address = { defs={0x08048479} expr=(add[32] (add[32] v4685[32] -4[32]) 3[32]) }
          value = { defs={0x08048472,0x08048479} expr=8[8] }
          flags = { }
        address = { defs={0x08048479} expr=(add[32] (add[32] v4685[32] -4[32]) 2[32]) }
          value = { defs={0x08048472,0x08048479} expr=4[8] }
          flags = { }
        address = { defs={0x08048479} expr=(add[32] (add[32] v4685[32] -4[32]) 1[32]) }
          value = { defs={0x08048472,0x08048479} expr=-124[8] }
          flags = { }
        address = { defs={0x08048479} expr=(add[32] v4685[32] -4[32]) }
          value = { defs={0x08048472,0x08048479} expr=126[8] }
          flags = { }
        address = { defs={} expr=(add[32] v4685[32] 3[32]) }
          value = { defs={0x08048472} expr=0[8] }
          flags = { }
        address = { defs={} expr=(add[32] v4685[32] 2[32]) }
          value = { defs={0x08048472} expr=0[8] }
          flags = { }
        address = { defs={} expr=(add[32] v4685[32] 1[32]) }
          value = { defs={0x08048472} expr=0[8] }
          flags = { }
        address = { defs={} expr=v4685[32] }
          value = { defs={0x08048472} expr=0[8] }
          flags = { }
    init mem:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048480:push   ebp
    registers:
        ax      = { defs={} expr=v4804[32] }
        cx      = { defs={} expr=v4805[32] }
        dx      = { defs={} expr=v4806[32] }
        bx      = { defs={} expr=v4807[32] }
        sp      = { defs={0x08048480} expr=(add[32] v4808[32] -4[32]) }
        bp      = { defs={} expr=v4809[32] }
        si      = { defs={} expr=v4810[32] }
        di      = { defs={} expr=v4811[32] }
        es      = { defs={} expr=v4812[16] }
        cs      = { defs={} expr=v4813[16] }
        ss      = { defs={} expr=v4814[16] }
        ds      = { defs={} expr=v4815[16] }
        fs      = { defs={} expr=v4816[16] }
        gs      = { defs={} expr=v4817[16] }
        cf      = { defs={} expr=v4818[1] }
        ?1      = { defs={} expr=v4819[1] }
        pf      = { defs={} expr=v4820[1] }
        ?3      = { defs={} expr=v4821[1] }
        af      = { defs={} expr=v4822[1] }
        ?5      = { defs={} expr=v4823[1] }
        zf      = { defs={} expr=v4824[1] }
        sf      = { defs={} expr=v4825[1] }
        tf      = { defs={} expr=v4826[1] }
        if      = { defs={} expr=v4827[1] }
        df      = { defs={} expr=v4828[1] }
        of      = { defs={} expr=v4829[1] }
        iopl0   = { defs={} expr=v4830[1] }
        iopl1   = { defs={} expr=v4831[1] }
        nt      = { defs={} expr=v4832[1] }
        ?15     = { defs={} expr=v4833[1] }
        rf      = { defs={} expr=v4834[1] }
        vm      = { defs={} expr=v4835[1] }
        ac      = { defs={} expr=v4836[1] }
        vif     = { defs={} expr=v4837[1] }
        vip     = { defs={} expr=v4838[1] }
        id      = { defs={} expr=v4839[1] }
        ?22     = { defs={} expr=v4840[1] }
        ?23     = { defs={} expr=v4841[1] }
        ?24     = { defs={} expr=v4842[1] }
        ?25     = { defs={} expr=v4843[1] }
        ?26     = { defs={} expr=v4844[1] }
        ?27     = { defs={} expr=v4845[1] }
        ?28     = { defs={} expr=v4846[1] }
        ?29     = { defs={} expr=v4847[1] }
        ?30     = { defs={} expr=v4848[1] }
        ?31     = { defs={} expr=v4849[1] }
        ip      = { defs={0x08048480} expr=0x08048481[32] }
    memory:
        address = { defs={0x08048480} expr=(add[32] (add[32] v4808[32] -4[32]) 3[32]) }
          value = { defs={0x08048480} expr=(extract[8] 24[32] 32[32] v4809[32]) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] (add[32] v4808[32] -4[32]) 2[32]) }
          value = { defs={0x08048480} expr=(extract[8] 16[32] 24[32] v4809[32]) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] (add[32] v4808[32] -4[32]) 1[32]) }
          value = { defs={0x08048480} expr=(extract[8] 8[32] 16[32] v4809[32]) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] v4808[32] -4[32]) }
          value = { defs={0x08048480} expr=(extract[8] 0[32] 8[32] v4809[32]) }
          flags = { }
    init mem:
0x8048481:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v4804[32] }
        cx      = { defs={} expr=v4805[32] }
        dx      = { defs={} expr=v4806[32] }
        bx      = { defs={} expr=v4807[32] }
        sp      = { defs={0x08048480} expr=(add[32] v4808[32] -4[32]) }
        bp      = { defs={0x08048480,0x08048481} expr=(add[32] v4808[32] -4[32]) }
        si      = { defs={} expr=v4810[32] }
        di      = { defs={} expr=v4811[32] }
        es      = { defs={} expr=v4812[16] }
        cs      = { defs={} expr=v4813[16] }
        ss      = { defs={} expr=v4814[16] }
        ds      = { defs={} expr=v4815[16] }
        fs      = { defs={} expr=v4816[16] }
        gs      = { defs={} expr=v4817[16] }
        cf      = { defs={} expr=v4818[1] }
        ?1      = { defs={} expr=v4819[1] }
        pf      = { defs={} expr=v4820[1] }
        ?3      = { defs={} expr=v4821[1] }
        af      = { defs={} expr=v4822[1] }
        ?5      = { defs={} expr=v4823[1] }
        zf      = { defs={} expr=v4824[1] }
        sf      = { defs={} expr=v4825[1] }
        tf      = { defs={} expr=v4826[1] }
        if      = { defs={} expr=v4827[1] }
        df      = { defs={} expr=v4828[1] }
        of      = { defs={} expr=v4829[1] }
        iopl0   = { defs={} expr=v4830[1] }
        iopl1   = { defs={} expr=v4831[1] }
        nt      = { defs={} expr=v4832[1] }
        ?15     = { defs={} expr=v4833[1] }
        rf      = { defs={} expr=v4834[1] }
        vm      = { defs={} expr=v4835[1] }
        ac      = { defs={} expr=v4836[1] }
        vif     = { defs={} expr=v4837[1] }
        vip     = { defs={} expr=v4838[1] }
        id      = { defs={} expr=v4839[1] }
        ?22     = { defs={} expr=v4840[1] }
        ?23     = { defs={} expr=v4841[1] }
        ?24     = { defs={} expr=v4842[1] }
        ?25     = { defs={} expr=v4843[1] }
        ?26     = { defs={} expr=v4844[1] }
        ?27     = { defs={} expr=v4845[1] }
        ?28     = { defs={} expr=v4846[1] }
        ?29     = { defs={} expr=v4847[1] }
        ?30     = { defs={} expr=v4848[1] }
        ?31     = { defs={} expr=v4849[1] }
        ip      = { defs={0x08048480,0x08048481} expr=0x08048483[32] }
    memory:
        address = { defs={0x08048480} expr=(add[32] (add[32] v4808[32] -4[32]) 3[32]) }
          value = { defs={0x08048480} expr=(extract[8] 24[32] 32[32] v4809[32]) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] (add[32] v4808[32] -4[32]) 2[32]) }
          value = { defs={0x08048480} expr=(extract[8] 16[32] 24[32] v4809[32]) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] (add[32] v4808[32] -4[32]) 1[32]) }
          value = { defs={0x08048480} expr=(extract[8] 8[32] 16[32] v4809[32]) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] v4808[32] -4[32]) }
          value = { defs={0x08048480} expr=(extract[8] 0[32] 8[32] v4809[32]) }
          flags = { }
    init mem:
0x8048483:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v4804[32] }
        cx      = { defs={} expr=v4805[32] }
        dx      = { defs={} expr=v4806[32] }
        bx      = { defs={} expr=v4807[32] }
        sp      = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] v4808[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048480,0x08048481} expr=(add[32] v4808[32] -4[32]) }
        si      = { defs={} expr=v4810[32] }
        di      = { defs={} expr=v4811[32] }
        es      = { defs={} expr=v4812[16] }
        cs      = { defs={} expr=v4813[16] }
        ss      = { defs={} expr=v4814[16] }
        ds      = { defs={} expr=v4815[16] }
        fs      = { defs={} expr=v4816[16] }
        gs      = { defs={} expr=v4817[16] }
        cf      = { defs={0x08048480,0x08048483} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4808[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4808[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v4819[1] }
        pf      = { defs={0x08048480,0x08048483} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4808[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4808[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4808[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4808[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4808[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4808[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4808[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4808[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v4821[1] }
        af      = { defs={0x08048480,0x08048483} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4808[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4808[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v4823[1] }
        zf      = { defs={0x08048480,0x08048483} expr=(zerop[1] (add[32] (add[32] v4808[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048480,0x08048483} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v4808[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v4826[1] }
        if      = { defs={} expr=v4827[1] }
        df      = { defs={} expr=v4828[1] }
        of      = { defs={0x08048480,0x08048483} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4808[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4808[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4808[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4808[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v4830[1] }
        iopl1   = { defs={} expr=v4831[1] }
        nt      = { defs={} expr=v4832[1] }
        ?15     = { defs={} expr=v4833[1] }
        rf      = { defs={} expr=v4834[1] }
        vm      = { defs={} expr=v4835[1] }
        ac      = { defs={} expr=v4836[1] }
        vif     = { defs={} expr=v4837[1] }
        vip     = { defs={} expr=v4838[1] }
        id      = { defs={} expr=v4839[1] }
        ?22     = { defs={} expr=v4840[1] }
        ?23     = { defs={} expr=v4841[1] }
        ?24     = { defs={} expr=v4842[1] }
        ?25     = { defs={} expr=v4843[1] }
        ?26     = { defs={} expr=v4844[1] }
        ?27     = { defs={} expr=v4845[1] }
        ?28     = { defs={} expr=v4846[1] }
        ?29     = { defs={} expr=v4847[1] }
        ?30     = { defs={} expr=v4848[1] }
        ?31     = { defs={} expr=v4849[1] }
        ip      = { defs={0x08048480,0x08048481,0x08048483} expr=0x08048486[32] }
    memory:
        address = { defs={0x08048480} expr=(add[32] (add[32] v4808[32] -4[32]) 3[32]) }
          value = { defs={0x08048480} expr=(extract[8] 24[32] 32[32] v4809[32]) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] (add[32] v4808[32] -4[32]) 2[32]) }
          value = { defs={0x08048480} expr=(extract[8] 16[32] 24[32] v4809[32]) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] (add[32] v4808[32] -4[32]) 1[32]) }
          value = { defs={0x08048480} expr=(extract[8] 8[32] 16[32] v4809[32]) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] v4808[32] -4[32]) }
          value = { defs={0x08048480} expr=(extract[8] 0[32] 8[32] v4809[32]) }
          flags = { }
    init mem:
0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]
    registers:
        ax      = { defs={} expr=v4804[32] }
        cx      = { defs={} expr=v4805[32] }
        dx      = { defs={} expr=v4806[32] }
        bx      = { defs={} expr=v4807[32] }
        sp      = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] v4808[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048480,0x08048481} expr=(add[32] v4808[32] -4[32]) }
        si      = { defs={} expr=v4810[32] }
        di      = { defs={} expr=v4811[32] }
        es      = { defs={} expr=v4812[16] }
        cs      = { defs={} expr=v4813[16] }
        ss      = { defs={} expr=v4814[16] }
        ds      = { defs={} expr=v4815[16] }
        fs      = { defs={} expr=v4816[16] }
        gs      = { defs={} expr=v4817[16] }
        cf      = { defs={0x08048480,0x08048483} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4808[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4808[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v4819[1] }
        pf      = { defs={0x08048486} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32]))))))) }
        ?3      = { defs={} expr=v4821[1] }
        af      = { defs={0x08048486} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4926[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v4926[32]) 1[33]))))) }
        ?5      = { defs={} expr=v4823[1] }
        zf      = { defs={0x08048486} expr=(zerop[1] (add[32] v4926[32] 1[32])) }
        sf      = { defs={0x08048486} expr=(extract[1] 31[32] 32[32] (add[32] v4926[32] 1[32])) }
        tf      = { defs={} expr=v4826[1] }
        if      = { defs={} expr=v4827[1] }
        df      = { defs={} expr=v4828[1] }
        of      = { defs={0x08048486} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4926[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v4926[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4926[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v4926[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v4830[1] }
        iopl1   = { defs={} expr=v4831[1] }
        nt      = { defs={} expr=v4832[1] }
        ?15     = { defs={} expr=v4833[1] }
        rf      = { defs={} expr=v4834[1] }
        vm      = { defs={} expr=v4835[1] }
        ac      = { defs={} expr=v4836[1] }
        vif     = { defs={} expr=v4837[1] }
        vip     = { defs={} expr=v4838[1] }
        id      = { defs={} expr=v4839[1] }
        ?22     = { defs={} expr=v4840[1] }
        ?23     = { defs={} expr=v4841[1] }
        ?24     = { defs={} expr=v4842[1] }
        ?25     = { defs={} expr=v4843[1] }
        ?26     = { defs={} expr=v4844[1] }
        ?27     = { defs={} expr=v4845[1] }
        ?28     = { defs={} expr=v4846[1] }
        ?29     = { defs={} expr=v4847[1] }
        ?30     = { defs={} expr=v4848[1] }
        ?31     = { defs={} expr=v4849[1] }
        ip      = { defs={0x08048480,0x08048481,0x08048483,0x08048486} expr=0x0804848c[32] }
    memory:
        address = { defs={0x08048486} expr=0x080496fb[32] }
          value = { defs={0x08048486} expr=(extract[8] 24[32] 32[32] (add[32] v4926[32] 1[32])) }
          flags = { }
        address = { defs={0x08048486} expr=0x080496fa[32] }
          value = { defs={0x08048486} expr=(extract[8] 16[32] 24[32] (add[32] v4926[32] 1[32])) }
          flags = { }
        address = { defs={0x08048486} expr=0x080496f9[32] }
          value = { defs={0x08048486} expr=(extract[8] 8[32] 16[32] (add[32] v4926[32] 1[32])) }
          flags = { }
        address = { defs={0x08048486} expr=0x080496f8[32] }
          value = { defs={0x08048486} expr=(extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32])) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] (add[32] v4808[32] -4[32]) 3[32]) }
          value = { defs={0x08048480} expr=(extract[8] 24[32] 32[32] v4809[32]) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] (add[32] v4808[32] -4[32]) 2[32]) }
          value = { defs={0x08048480} expr=(extract[8] 16[32] 24[32] v4809[32]) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] (add[32] v4808[32] -4[32]) 1[32]) }
          value = { defs={0x08048480} expr=(extract[8] 8[32] 16[32] v4809[32]) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] v4808[32] -4[32]) }
          value = { defs={0x08048480} expr=(extract[8] 0[32] 8[32] v4809[32]) }
          flags = { }
    init mem:
        address = { defs={0x08048486} expr=0x080496fb[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v4926[32]) }
          flags = { rdonly }
        address = { defs={0x08048486} expr=0x080496fa[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v4926[32]) }
          flags = { rdonly }
        address = { defs={0x08048486} expr=0x080496f9[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v4926[32]) }
          flags = { rdonly }
        address = { defs={0x08048486} expr=0x080496f8[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v4926[32]) }
          flags = { rdonly }
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
    registers:
        ax      = { defs={} expr=v4804[32] }
        cx      = { defs={} expr=v4805[32] }
        dx      = { defs={} expr=v4806[32] }
        bx      = { defs={} expr=v4807[32] }
        sp      = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] v4808[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048480,0x08048481} expr=(add[32] v4808[32] -4[32]) }
        si      = { defs={} expr=v4810[32] }
        di      = { defs={} expr=v4811[32] }
        es      = { defs={} expr=v4812[16] }
        cs      = { defs={} expr=v4813[16] }
        ss      = { defs={} expr=v4814[16] }
        ds      = { defs={} expr=v4815[16] }
        fs      = { defs={} expr=v4816[16] }
        gs      = { defs={} expr=v4817[16] }
        cf      = { defs={0x08048480,0x08048483} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4808[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4808[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v4819[1] }
        pf      = { defs={0x08048486} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32]))))))) }
        ?3      = { defs={} expr=v4821[1] }
        af      = { defs={0x08048486} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4926[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v4926[32]) 1[33]))))) }
        ?5      = { defs={} expr=v4823[1] }
        zf      = { defs={0x08048486} expr=(zerop[1] (add[32] v4926[32] 1[32])) }
        sf      = { defs={0x08048486} expr=(extract[1] 31[32] 32[32] (add[32] v4926[32] 1[32])) }
        tf      = { defs={} expr=v4826[1] }
        if      = { defs={} expr=v4827[1] }
        df      = { defs={} expr=v4828[1] }
        of      = { defs={0x08048486} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4926[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v4926[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4926[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v4926[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v4830[1] }
        iopl1   = { defs={} expr=v4831[1] }
        nt      = { defs={} expr=v4832[1] }
        ?15     = { defs={} expr=v4833[1] }
        rf      = { defs={} expr=v4834[1] }
        vm      = { defs={} expr=v4835[1] }
        ac      = { defs={} expr=v4836[1] }
        vif     = { defs={} expr=v4837[1] }
        vip     = { defs={} expr=v4838[1] }
        id      = { defs={} expr=v4839[1] }
        ?22     = { defs={} expr=v4840[1] }
        ?23     = { defs={} expr=v4841[1] }
        ?24     = { defs={} expr=v4842[1] }
        ?25     = { defs={} expr=v4843[1] }
        ?26     = { defs={} expr=v4844[1] }
        ?27     = { defs={} expr=v4845[1] }
        ?28     = { defs={} expr=v4846[1] }
        ?29     = { defs={} expr=v4847[1] }
        ?30     = { defs={} expr=v4848[1] }
        ?31     = { defs={} expr=v4849[1] }
        ip      = { defs={0x08048480,0x08048481,0x08048483,0x08048486,0x0804848c} expr=0x08048493[32] }
    memory:
        address = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] (add[32] v4808[32] -4[32]) -8[32]) 3[32]) }
          value = { defs={0x0804848c} expr=8[8] }
          flags = { }
        address = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] (add[32] v4808[32] -4[32]) -8[32]) 2[32]) }
          value = { defs={0x0804848c} expr=4[8] }
          flags = { }
        address = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] (add[32] v4808[32] -4[32]) -8[32]) 1[32]) }
          value = { defs={0x0804848c} expr=-123[8] }
          flags = { }
        address = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] v4808[32] -4[32]) -8[32]) }
          value = { defs={0x0804848c} expr=-44[8] }
          flags = { }
        address = { defs={0x08048486} expr=0x080496fb[32] }
          value = { defs={0x08048486} expr=(extract[8] 24[32] 32[32] (add[32] v4926[32] 1[32])) }
          flags = { }
        address = { defs={0x08048486} expr=0x080496fa[32] }
          value = { defs={0x08048486} expr=(extract[8] 16[32] 24[32] (add[32] v4926[32] 1[32])) }
          flags = { }
        address = { defs={0x08048486} expr=0x080496f9[32] }
          value = { defs={0x08048486} expr=(extract[8] 8[32] 16[32] (add[32] v4926[32] 1[32])) }
          flags = { }
        address = { defs={0x08048486} expr=0x080496f8[32] }
          value = { defs={0x08048486} expr=(extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32])) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] (add[32] v4808[32] -4[32]) 3[32]) }
          value = { defs={0x08048480} expr=(extract[8] 24[32] 32[32] v4809[32]) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] (add[32] v4808[32] -4[32]) 2[32]) }
          value = { defs={0x08048480} expr=(extract[8] 16[32] 24[32] v4809[32]) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] (add[32] v4808[32] -4[32]) 1[32]) }
          value = { defs={0x08048480} expr=(extract[8] 8[32] 16[32] v4809[32]) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] v4808[32] -4[32]) }
          value = { defs={0x08048480} expr=(extract[8] 0[32] 8[32] v4809[32]) }
          flags = { }
    init mem:
        address = { defs={0x08048486} expr=0x080496fb[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v4926[32]) }
          flags = { rdonly }
        address = { defs={0x08048486} expr=0x080496fa[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v4926[32]) }
          flags = { rdonly }
        address = { defs={0x08048486} expr=0x080496f9[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v4926[32]) }
          flags = { rdonly }
        address = { defs={0x08048486} expr=0x080496f8[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v4926[32]) }
          flags = { rdonly }
0x8048493:call   0x08048300<puts@plt>
    registers:
        ax      = { defs={} expr=v4804[32] }
        cx      = { defs={} expr=v4805[32] }
        dx      = { defs={} expr=v4806[32] }
        bx      = { defs={} expr=v4807[32] }
        sp      = { defs={0x08048480,0x08048483,0x08048493} expr=(add[32] (add[32] (add[32] v4808[32] -4[32]) -8[32]) -4[32]) }
        bp      = { defs={0x08048480,0x08048481} expr=(add[32] v4808[32] -4[32]) }
        si      = { defs={} expr=v4810[32] }
        di      = { defs={} expr=v4811[32] }
        es      = { defs={} expr=v4812[16] }
        cs      = { defs={} expr=v4813[16] }
        ss      = { defs={} expr=v4814[16] }
        ds      = { defs={} expr=v4815[16] }
        fs      = { defs={} expr=v4816[16] }
        gs      = { defs={} expr=v4817[16] }
        cf      = { defs={0x08048480,0x08048483} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4808[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4808[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v4819[1] }
        pf      = { defs={0x08048486} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32]))))))) }
        ?3      = { defs={} expr=v4821[1] }
        af      = { defs={0x08048486} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4926[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v4926[32]) 1[33]))))) }
        ?5      = { defs={} expr=v4823[1] }
        zf      = { defs={0x08048486} expr=(zerop[1] (add[32] v4926[32] 1[32])) }
        sf      = { defs={0x08048486} expr=(extract[1] 31[32] 32[32] (add[32] v4926[32] 1[32])) }
        tf      = { defs={} expr=v4826[1] }
        if      = { defs={} expr=v4827[1] }
        df      = { defs={} expr=v4828[1] }
        of      = { defs={0x08048486} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4926[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v4926[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v4926[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v4926[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v4830[1] }
        iopl1   = { defs={} expr=v4831[1] }
        nt      = { defs={} expr=v4832[1] }
        ?15     = { defs={} expr=v4833[1] }
        rf      = { defs={} expr=v4834[1] }
        vm      = { defs={} expr=v4835[1] }
        ac      = { defs={} expr=v4836[1] }
        vif     = { defs={} expr=v4837[1] }
        vip     = { defs={} expr=v4838[1] }
        id      = { defs={} expr=v4839[1] }
        ?22     = { defs={} expr=v4840[1] }
        ?23     = { defs={} expr=v4841[1] }
        ?24     = { defs={} expr=v4842[1] }
        ?25     = { defs={} expr=v4843[1] }
        ?26     = { defs={} expr=v4844[1] }
        ?27     = { defs={} expr=v4845[1] }
        ?28     = { defs={} expr=v4846[1] }
        ?29     = { defs={} expr=v4847[1] }
        ?30     = { defs={} expr=v4848[1] }
        ?31     = { defs={} expr=v4849[1] }
        ip      = { defs={0x08048493} expr=0x08048300[32] }
    memory:
        address = { defs={0x08048480,0x08048483,0x08048493} expr=(add[32] (add[32] (add[32] (add[32] v4808[32] -4[32]) -8[32]) -4[32]) 3[32]) }
          value = { defs={0x08048480,0x08048481,0x08048483,0x08048486,0x0804848c,0x08048493} expr=8[8] }
          flags = { }
        address = { defs={0x08048480,0x08048483,0x08048493} expr=(add[32] (add[32] (add[32] (add[32] v4808[32] -4[32]) -8[32]) -4[32]) 2[32]) }
          value = { defs={0x08048480,0x08048481,0x08048483,0x08048486,0x0804848c,0x08048493} expr=4[8] }
          flags = { }
        address = { defs={0x08048480,0x08048483,0x08048493} expr=(add[32] (add[32] (add[32] (add[32] v4808[32] -4[32]) -8[32]) -4[32]) 1[32]) }
          value = { defs={0x08048480,0x08048481,0x08048483,0x08048486,0x0804848c,0x08048493} expr=-124[8] }
          flags = { }
        address = { defs={0x08048480,0x08048483,0x08048493} expr=(add[32] (add[32] (add[32] v4808[32] -4[32]) -8[32]) -4[32]) }
          value = { defs={0x08048480,0x08048481,0x08048483,0x08048486,0x0804848c,0x08048493} expr=-104[8] }
          flags = { }
        address = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] (add[32] v4808[32] -4[32]) -8[32]) 3[32]) }
          value = { defs={0x0804848c} expr=8[8] }
          flags = { }
        address = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] (add[32] v4808[32] -4[32]) -8[32]) 2[32]) }
          value = { defs={0x0804848c} expr=4[8] }
          flags = { }
        address = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] (add[32] v4808[32] -4[32]) -8[32]) 1[32]) }
          value = { defs={0x0804848c} expr=-123[8] }
          flags = { }
        address = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] v4808[32] -4[32]) -8[32]) }
          value = { defs={0x0804848c} expr=-44[8] }
          flags = { }
        address = { defs={0x08048486} expr=0x080496fb[32] }
          value = { defs={0x08048486} expr=(extract[8] 24[32] 32[32] (add[32] v4926[32] 1[32])) }
          flags = { }
        address = { defs={0x08048486} expr=0x080496fa[32] }
          value = { defs={0x08048486} expr=(extract[8] 16[32] 24[32] (add[32] v4926[32] 1[32])) }
          flags = { }
        address = { defs={0x08048486} expr=0x080496f9[32] }
          value = { defs={0x08048486} expr=(extract[8] 8[32] 16[32] (add[32] v4926[32] 1[32])) }
          flags = { }
        address = { defs={0x08048486} expr=0x080496f8[32] }
          value = { defs={0x08048486} expr=(extract[8] 0[32] 8[32] (add[32] v4926[32] 1[32])) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] (add[32] v4808[32] -4[32]) 3[32]) }
          value = { defs={0x08048480} expr=(extract[8] 24[32] 32[32] v4809[32]) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] (add[32] v4808[32] -4[32]) 2[32]) }
          value = { defs={0x08048480} expr=(extract[8] 16[32] 24[32] v4809[32]) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] (add[32] v4808[32] -4[32]) 1[32]) }
          value = { defs={0x08048480} expr=(extract[8] 8[32] 16[32] v4809[32]) }
          flags = { }
        address = { defs={0x08048480} expr=(add[32] v4808[32] -4[32]) }
          value = { defs={0x08048480} expr=(extract[8] 0[32] 8[32] v4809[32]) }
          flags = { }
    init mem:
        address = { defs={0x08048486} expr=0x080496fb[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v4926[32]) }
          flags = { rdonly }
        address = { defs={0x08048486} expr=0x080496fa[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v4926[32]) }
          flags = { rdonly }
        address = { defs={0x08048486} expr=0x080496f9[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v4926[32]) }
          flags = { rdonly }
        address = { defs={0x08048486} expr=0x080496f8[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v4926[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    registers:
        ax      = { defs={} expr=v5062[32] }
        cx      = { defs={} expr=v5063[32] }
        dx      = { defs={} expr=v5064[32] }
        bx      = { defs={} expr=v5065[32] }
        sp      = { defs={} expr=v5066[32] }
        bp      = { defs={} expr=v5067[32] }
        si      = { defs={} expr=v5068[32] }
        di      = { defs={} expr=v5069[32] }
        es      = { defs={} expr=v5070[16] }
        cs      = { defs={} expr=v5071[16] }
        ss      = { defs={} expr=v5072[16] }
        ds      = { defs={} expr=v5073[16] }
        fs      = { defs={} expr=v5074[16] }
        gs      = { defs={} expr=v5075[16] }
        cf      = { defs={} expr=v5076[1] }
        ?1      = { defs={} expr=v5077[1] }
        pf      = { defs={} expr=v5078[1] }
        ?3      = { defs={} expr=v5079[1] }
        af      = { defs={} expr=v5080[1] }
        ?5      = { defs={} expr=v5081[1] }
        zf      = { defs={} expr=v5082[1] }
        sf      = { defs={} expr=v5083[1] }
        tf      = { defs={} expr=v5084[1] }
        if      = { defs={} expr=v5085[1] }
        df      = { defs={} expr=v5086[1] }
        of      = { defs={} expr=v5087[1] }
        iopl0   = { defs={} expr=v5088[1] }
        iopl1   = { defs={} expr=v5089[1] }
        nt      = { defs={} expr=v5090[1] }
        ?15     = { defs={} expr=v5091[1] }
        rf      = { defs={} expr=v5092[1] }
        vm      = { defs={} expr=v5093[1] }
        ac      = { defs={} expr=v5094[1] }
        vif     = { defs={} expr=v5095[1] }
        vip     = { defs={} expr=v5096[1] }
        id      = { defs={} expr=v5097[1] }
        ?22     = { defs={} expr=v5098[1] }
        ?23     = { defs={} expr=v5099[1] }
        ?24     = { defs={} expr=v5100[1] }
        ?25     = { defs={} expr=v5101[1] }
        ?26     = { defs={} expr=v5102[1] }
        ?27     = { defs={} expr=v5103[1] }
        ?28     = { defs={} expr=v5104[1] }
        ?29     = { defs={} expr=v5105[1] }
        ?30     = { defs={} expr=v5106[1] }
        ?31     = { defs={} expr=v5107[1] }
        ip      = { defs={0x08048498} expr=0x0804849f[32] }
    memory:
        address = { defs={} expr=(add[32] v5066[32] 3[32]) }
          value = { defs={0x08048498} expr=0[8] }
          flags = { }
        address = { defs={} expr=(add[32] v5066[32] 2[32]) }
          value = { defs={0x08048498} expr=0[8] }
          flags = { }
        address = { defs={} expr=(add[32] v5066[32] 1[32]) }
          value = { defs={0x08048498} expr=0[8] }
          flags = { }
        address = { defs={} expr=v5066[32] }
          value = { defs={0x08048498} expr=0[8] }
          flags = { }
    init mem:
0x804849f:call   0x08048320<_exit@plt>
    registers:
        ax      = { defs={} expr=v5062[32] }
        cx      = { defs={} expr=v5063[32] }
        dx      = { defs={} expr=v5064[32] }
        bx      = { defs={} expr=v5065[32] }
        sp      = { defs={0x0804849f} expr=(add[32] v5066[32] -4[32]) }
        bp      = { defs={} expr=v5067[32] }
        si      = { defs={} expr=v5068[32] }
        di      = { defs={} expr=v5069[32] }
        es      = { defs={} expr=v5070[16] }
        cs      = { defs={} expr=v5071[16] }
        ss      = { defs={} expr=v5072[16] }
        ds      = { defs={} expr=v5073[16] }
        fs      = { defs={} expr=v5074[16] }
        gs      = { defs={} expr=v5075[16] }
        cf      = { defs={} expr=v5076[1] }
        ?1      = { defs={} expr=v5077[1] }
        pf      = { defs={} expr=v5078[1] }
        ?3      = { defs={} expr=v5079[1] }
        af      = { defs={} expr=v5080[1] }
        ?5      = { defs={} expr=v5081[1] }
        zf      = { defs={} expr=v5082[1] }
        sf      = { defs={} expr=v5083[1] }
        tf      = { defs={} expr=v5084[1] }
        if      = { defs={} expr=v5085[1] }
        df      = { defs={} expr=v5086[1] }
        of      = { defs={} expr=v5087[1] }
        iopl0   = { defs={} expr=v5088[1] }
        iopl1   = { defs={} expr=v5089[1] }
        nt      = { defs={} expr=v5090[1] }
        ?15     = { defs={} expr=v5091[1] }
        rf      = { defs={} expr=v5092[1] }
        vm      = { defs={} expr=v5093[1] }
        ac      = { defs={} expr=v5094[1] }
        vif     = { defs={} expr=v5095[1] }
        vip     = { defs={} expr=v5096[1] }
        id      = { defs={} expr=v5097[1] }
        ?22     = { defs={} expr=v5098[1] }
        ?23     = { defs={} expr=v5099[1] }
        ?24     = { defs={} expr=v5100[1] }
        ?25     = { defs={} expr=v5101[1] }
        ?26     = { defs={} expr=v5102[1] }
        ?27     = { defs={} expr=v5103[1] }
        ?28     = { defs={} expr=v5104[1] }
        ?29     = { defs={} expr=v5105[1] }
        ?30     = { defs={} expr=v5106[1] }
        ?31     = { defs={} expr=v5107[1] }
        ip      = { defs={0x0804849f} expr=0x08048320[32] }
    memory:
        address = { defs={0x0804849f} expr=(add[32] (add[32] v5066[32] -4[32]) 3[32]) }
          value = { defs={0x08048498,0x0804849f} expr=8[8] }
          flags = { }
        address = { defs={0x0804849f} expr=(add[32] (add[32] v5066[32] -4[32]) 2[32]) }
          value = { defs={0x08048498,0x0804849f} expr=4[8] }
          flags = { }
        address = { defs={0x0804849f} expr=(add[32] (add[32] v5066[32] -4[32]) 1[32]) }
          value = { defs={0x08048498,0x0804849f} expr=-124[8] }
          flags = { }
        address = { defs={0x0804849f} expr=(add[32] v5066[32] -4[32]) }
          value = { defs={0x08048498,0x0804849f} expr=-92[8] }
          flags = { }
        address = { defs={} expr=(add[32] v5066[32] 3[32]) }
          value = { defs={0x08048498} expr=0[8] }
          flags = { }
        address = { defs={} expr=(add[32] v5066[32] 2[32]) }
          value = { defs={0x08048498} expr=0[8] }
          flags = { }
        address = { defs={} expr=(add[32] v5066[32] 1[32]) }
          value = { defs={0x08048498} expr=0[8] }
          flags = { }
        address = { defs={} expr=v5066[32] }
          value = { defs={0x08048498} expr=0[8] }
          flags = { }
    init mem:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484b0:push   ebp
    registers:
        ax      = { defs={} expr=v5185[32] }
        cx      = { defs={} expr=v5186[32] }
        dx      = { defs={} expr=v5187[32] }
        bx      = { defs={} expr=v5188[32] }
        sp      = { defs={0x080484b0} expr=(add[32] v5189[32] -4[32]) }
        bp      = { defs={} expr=v5190[32] }
        si      = { defs={} expr=v5191[32] }
        di      = { defs={} expr=v5192[32] }
        es      = { defs={} expr=v5193[16] }
        cs      = { defs={} expr=v5194[16] }
        ss      = { defs={} expr=v5195[16] }
        ds      = { defs={} expr=v5196[16] }
        fs      = { defs={} expr=v5197[16] }
        gs      = { defs={} expr=v5198[16] }
        cf      = { defs={} expr=v5199[1] }
        ?1      = { defs={} expr=v5200[1] }
        pf      = { defs={} expr=v5201[1] }
        ?3      = { defs={} expr=v5202[1] }
        af      = { defs={} expr=v5203[1] }
        ?5      = { defs={} expr=v5204[1] }
        zf      = { defs={} expr=v5205[1] }
        sf      = { defs={} expr=v5206[1] }
        tf      = { defs={} expr=v5207[1] }
        if      = { defs={} expr=v5208[1] }
        df      = { defs={} expr=v5209[1] }
        of      = { defs={} expr=v5210[1] }
        iopl0   = { defs={} expr=v5211[1] }
        iopl1   = { defs={} expr=v5212[1] }
        nt      = { defs={} expr=v5213[1] }
        ?15     = { defs={} expr=v5214[1] }
        rf      = { defs={} expr=v5215[1] }
        vm      = { defs={} expr=v5216[1] }
        ac      = { defs={} expr=v5217[1] }
        vif     = { defs={} expr=v5218[1] }
        vip     = { defs={} expr=v5219[1] }
        id      = { defs={} expr=v5220[1] }
        ?22     = { defs={} expr=v5221[1] }
        ?23     = { defs={} expr=v5222[1] }
        ?24     = { defs={} expr=v5223[1] }
        ?25     = { defs={} expr=v5224[1] }
        ?26     = { defs={} expr=v5225[1] }
        ?27     = { defs={} expr=v5226[1] }
        ?28     = { defs={} expr=v5227[1] }
        ?29     = { defs={} expr=v5228[1] }
        ?30     = { defs={} expr=v5229[1] }
        ?31     = { defs={} expr=v5230[1] }
        ip      = { defs={0x080484b0} expr=0x080484b1[32] }
    memory:
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 3[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 24[32] 32[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 2[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 16[32] 24[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 1[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 8[32] 16[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] v5189[32] -4[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 0[32] 8[32] v5190[32]) }
          flags = { }
    init mem:
0x80484b1:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v5185[32] }
        cx      = { defs={} expr=v5186[32] }
        dx      = { defs={} expr=v5187[32] }
        bx      = { defs={} expr=v5188[32] }
        sp      = { defs={0x080484b0} expr=(add[32] v5189[32] -4[32]) }
        bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v5189[32] -4[32]) }
        si      = { defs={} expr=v5191[32] }
        di      = { defs={} expr=v5192[32] }
        es      = { defs={} expr=v5193[16] }
        cs      = { defs={} expr=v5194[16] }
        ss      = { defs={} expr=v5195[16] }
        ds      = { defs={} expr=v5196[16] }
        fs      = { defs={} expr=v5197[16] }
        gs      = { defs={} expr=v5198[16] }
        cf      = { defs={} expr=v5199[1] }
        ?1      = { defs={} expr=v5200[1] }
        pf      = { defs={} expr=v5201[1] }
        ?3      = { defs={} expr=v5202[1] }
        af      = { defs={} expr=v5203[1] }
        ?5      = { defs={} expr=v5204[1] }
        zf      = { defs={} expr=v5205[1] }
        sf      = { defs={} expr=v5206[1] }
        tf      = { defs={} expr=v5207[1] }
        if      = { defs={} expr=v5208[1] }
        df      = { defs={} expr=v5209[1] }
        of      = { defs={} expr=v5210[1] }
        iopl0   = { defs={} expr=v5211[1] }
        iopl1   = { defs={} expr=v5212[1] }
        nt      = { defs={} expr=v5213[1] }
        ?15     = { defs={} expr=v5214[1] }
        rf      = { defs={} expr=v5215[1] }
        vm      = { defs={} expr=v5216[1] }
        ac      = { defs={} expr=v5217[1] }
        vif     = { defs={} expr=v5218[1] }
        vip     = { defs={} expr=v5219[1] }
        id      = { defs={} expr=v5220[1] }
        ?22     = { defs={} expr=v5221[1] }
        ?23     = { defs={} expr=v5222[1] }
        ?24     = { defs={} expr=v5223[1] }
        ?25     = { defs={} expr=v5224[1] }
        ?26     = { defs={} expr=v5225[1] }
        ?27     = { defs={} expr=v5226[1] }
        ?28     = { defs={} expr=v5227[1] }
        ?29     = { defs={} expr=v5228[1] }
        ?30     = { defs={} expr=v5229[1] }
        ?31     = { defs={} expr=v5230[1] }
        ip      = { defs={0x080484b0,0x080484b1} expr=0x080484b3[32] }
    memory:
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 3[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 24[32] 32[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 2[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 16[32] 24[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 1[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 8[32] 16[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] v5189[32] -4[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 0[32] 8[32] v5190[32]) }
          flags = { }
    init mem:
0x80484b3:push   edi
    registers:
        ax      = { defs={} expr=v5185[32] }
        cx      = { defs={} expr=v5186[32] }
        dx      = { defs={} expr=v5187[32] }
        bx      = { defs={} expr=v5188[32] }
        sp      = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v5189[32] -4[32]) -4[32]) }
        bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v5189[32] -4[32]) }
        si      = { defs={} expr=v5191[32] }
        di      = { defs={} expr=v5192[32] }
        es      = { defs={} expr=v5193[16] }
        cs      = { defs={} expr=v5194[16] }
        ss      = { defs={} expr=v5195[16] }
        ds      = { defs={} expr=v5196[16] }
        fs      = { defs={} expr=v5197[16] }
        gs      = { defs={} expr=v5198[16] }
        cf      = { defs={} expr=v5199[1] }
        ?1      = { defs={} expr=v5200[1] }
        pf      = { defs={} expr=v5201[1] }
        ?3      = { defs={} expr=v5202[1] }
        af      = { defs={} expr=v5203[1] }
        ?5      = { defs={} expr=v5204[1] }
        zf      = { defs={} expr=v5205[1] }
        sf      = { defs={} expr=v5206[1] }
        tf      = { defs={} expr=v5207[1] }
        if      = { defs={} expr=v5208[1] }
        df      = { defs={} expr=v5209[1] }
        of      = { defs={} expr=v5210[1] }
        iopl0   = { defs={} expr=v5211[1] }
        iopl1   = { defs={} expr=v5212[1] }
        nt      = { defs={} expr=v5213[1] }
        ?15     = { defs={} expr=v5214[1] }
        rf      = { defs={} expr=v5215[1] }
        vm      = { defs={} expr=v5216[1] }
        ac      = { defs={} expr=v5217[1] }
        vif     = { defs={} expr=v5218[1] }
        vip     = { defs={} expr=v5219[1] }
        id      = { defs={} expr=v5220[1] }
        ?22     = { defs={} expr=v5221[1] }
        ?23     = { defs={} expr=v5222[1] }
        ?24     = { defs={} expr=v5223[1] }
        ?25     = { defs={} expr=v5224[1] }
        ?26     = { defs={} expr=v5225[1] }
        ?27     = { defs={} expr=v5226[1] }
        ?28     = { defs={} expr=v5227[1] }
        ?29     = { defs={} expr=v5228[1] }
        ?30     = { defs={} expr=v5229[1] }
        ?31     = { defs={} expr=v5230[1] }
        ip      = { defs={0x080484b0,0x080484b1,0x080484b3} expr=0x080484b4[32] }
    memory:
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x080484b3} expr=(extract[8] 24[32] 32[32] v5192[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x080484b3} expr=(extract[8] 16[32] 24[32] v5192[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x080484b3} expr=(extract[8] 8[32] 16[32] v5192[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v5189[32] -4[32]) -4[32]) }
          value = { defs={0x080484b3} expr=(extract[8] 0[32] 8[32] v5192[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 3[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 24[32] 32[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 2[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 16[32] 24[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 1[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 8[32] 16[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] v5189[32] -4[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 0[32] 8[32] v5190[32]) }
          flags = { }
    init mem:
0x80484b4:push   esi
    registers:
        ax      = { defs={} expr=v5185[32] }
        cx      = { defs={} expr=v5186[32] }
        dx      = { defs={} expr=v5187[32] }
        bx      = { defs={} expr=v5188[32] }
        sp      = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v5189[32] -4[32]) }
        si      = { defs={} expr=v5191[32] }
        di      = { defs={} expr=v5192[32] }
        es      = { defs={} expr=v5193[16] }
        cs      = { defs={} expr=v5194[16] }
        ss      = { defs={} expr=v5195[16] }
        ds      = { defs={} expr=v5196[16] }
        fs      = { defs={} expr=v5197[16] }
        gs      = { defs={} expr=v5198[16] }
        cf      = { defs={} expr=v5199[1] }
        ?1      = { defs={} expr=v5200[1] }
        pf      = { defs={} expr=v5201[1] }
        ?3      = { defs={} expr=v5202[1] }
        af      = { defs={} expr=v5203[1] }
        ?5      = { defs={} expr=v5204[1] }
        zf      = { defs={} expr=v5205[1] }
        sf      = { defs={} expr=v5206[1] }
        tf      = { defs={} expr=v5207[1] }
        if      = { defs={} expr=v5208[1] }
        df      = { defs={} expr=v5209[1] }
        of      = { defs={} expr=v5210[1] }
        iopl0   = { defs={} expr=v5211[1] }
        iopl1   = { defs={} expr=v5212[1] }
        nt      = { defs={} expr=v5213[1] }
        ?15     = { defs={} expr=v5214[1] }
        rf      = { defs={} expr=v5215[1] }
        vm      = { defs={} expr=v5216[1] }
        ac      = { defs={} expr=v5217[1] }
        vif     = { defs={} expr=v5218[1] }
        vip     = { defs={} expr=v5219[1] }
        id      = { defs={} expr=v5220[1] }
        ?22     = { defs={} expr=v5221[1] }
        ?23     = { defs={} expr=v5222[1] }
        ?24     = { defs={} expr=v5223[1] }
        ?25     = { defs={} expr=v5224[1] }
        ?26     = { defs={} expr=v5225[1] }
        ?27     = { defs={} expr=v5226[1] }
        ?28     = { defs={} expr=v5227[1] }
        ?29     = { defs={} expr=v5228[1] }
        ?30     = { defs={} expr=v5229[1] }
        ?31     = { defs={} expr=v5230[1] }
        ip      = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4} expr=0x080484b5[32] }
    memory:
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x080484b4} expr=(extract[8] 24[32] 32[32] v5191[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x080484b4} expr=(extract[8] 16[32] 24[32] v5191[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x080484b4} expr=(extract[8] 8[32] 16[32] v5191[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b4} expr=(extract[8] 0[32] 8[32] v5191[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x080484b3} expr=(extract[8] 24[32] 32[32] v5192[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x080484b3} expr=(extract[8] 16[32] 24[32] v5192[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x080484b3} expr=(extract[8] 8[32] 16[32] v5192[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v5189[32] -4[32]) -4[32]) }
          value = { defs={0x080484b3} expr=(extract[8] 0[32] 8[32] v5192[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 3[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 24[32] 32[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 2[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 16[32] 24[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 1[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 8[32] 16[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] v5189[32] -4[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 0[32] 8[32] v5190[32]) }
          flags = { }
    init mem:
0x80484b5:push   ebx
    registers:
        ax      = { defs={} expr=v5185[32] }
        cx      = { defs={} expr=v5186[32] }
        dx      = { defs={} expr=v5187[32] }
        bx      = { defs={} expr=v5188[32] }
        sp      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v5189[32] -4[32]) }
        si      = { defs={} expr=v5191[32] }
        di      = { defs={} expr=v5192[32] }
        es      = { defs={} expr=v5193[16] }
        cs      = { defs={} expr=v5194[16] }
        ss      = { defs={} expr=v5195[16] }
        ds      = { defs={} expr=v5196[16] }
        fs      = { defs={} expr=v5197[16] }
        gs      = { defs={} expr=v5198[16] }
        cf      = { defs={} expr=v5199[1] }
        ?1      = { defs={} expr=v5200[1] }
        pf      = { defs={} expr=v5201[1] }
        ?3      = { defs={} expr=v5202[1] }
        af      = { defs={} expr=v5203[1] }
        ?5      = { defs={} expr=v5204[1] }
        zf      = { defs={} expr=v5205[1] }
        sf      = { defs={} expr=v5206[1] }
        tf      = { defs={} expr=v5207[1] }
        if      = { defs={} expr=v5208[1] }
        df      = { defs={} expr=v5209[1] }
        of      = { defs={} expr=v5210[1] }
        iopl0   = { defs={} expr=v5211[1] }
        iopl1   = { defs={} expr=v5212[1] }
        nt      = { defs={} expr=v5213[1] }
        ?15     = { defs={} expr=v5214[1] }
        rf      = { defs={} expr=v5215[1] }
        vm      = { defs={} expr=v5216[1] }
        ac      = { defs={} expr=v5217[1] }
        vif     = { defs={} expr=v5218[1] }
        vip     = { defs={} expr=v5219[1] }
        id      = { defs={} expr=v5220[1] }
        ?22     = { defs={} expr=v5221[1] }
        ?23     = { defs={} expr=v5222[1] }
        ?24     = { defs={} expr=v5223[1] }
        ?25     = { defs={} expr=v5224[1] }
        ?26     = { defs={} expr=v5225[1] }
        ?27     = { defs={} expr=v5226[1] }
        ?28     = { defs={} expr=v5227[1] }
        ?29     = { defs={} expr=v5228[1] }
        ?30     = { defs={} expr=v5229[1] }
        ?31     = { defs={} expr=v5230[1] }
        ip      = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5} expr=0x080484b6[32] }
    memory:
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x080484b5} expr=(extract[8] 24[32] 32[32] v5188[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x080484b5} expr=(extract[8] 16[32] 24[32] v5188[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x080484b5} expr=(extract[8] 8[32] 16[32] v5188[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b5} expr=(extract[8] 0[32] 8[32] v5188[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x080484b4} expr=(extract[8] 24[32] 32[32] v5191[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x080484b4} expr=(extract[8] 16[32] 24[32] v5191[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x080484b4} expr=(extract[8] 8[32] 16[32] v5191[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b4} expr=(extract[8] 0[32] 8[32] v5191[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x080484b3} expr=(extract[8] 24[32] 32[32] v5192[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x080484b3} expr=(extract[8] 16[32] 24[32] v5192[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x080484b3} expr=(extract[8] 8[32] 16[32] v5192[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v5189[32] -4[32]) -4[32]) }
          value = { defs={0x080484b3} expr=(extract[8] 0[32] 8[32] v5192[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 3[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 24[32] 32[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 2[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 16[32] 24[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 1[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 8[32] 16[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] v5189[32] -4[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 0[32] 8[32] v5190[32]) }
          flags = { }
    init mem:
0x80484b6:sub    esp, 0x0c
    registers:
        ax      = { defs={} expr=v5185[32] }
        cx      = { defs={} expr=v5186[32] }
        dx      = { defs={} expr=v5187[32] }
        bx      = { defs={} expr=v5188[32] }
        sp      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) }
        bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v5189[32] -4[32]) }
        si      = { defs={} expr=v5191[32] }
        di      = { defs={} expr=v5192[32] }
        es      = { defs={} expr=v5193[16] }
        cs      = { defs={} expr=v5194[16] }
        ss      = { defs={} expr=v5195[16] }
        ds      = { defs={} expr=v5196[16] }
        fs      = { defs={} expr=v5197[16] }
        gs      = { defs={} expr=v5198[16] }
        cf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?1      = { defs={} expr=v5200[1] }
        pf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))))) }
        ?3      = { defs={} expr=v5202[1] }
        af      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?5      = { defs={} expr=v5204[1] }
        zf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        sf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        tf      = { defs={} expr=v5207[1] }
        if      = { defs={} expr=v5208[1] }
        df      = { defs={} expr=v5209[1] }
        of      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        iopl0   = { defs={} expr=v5211[1] }
        iopl1   = { defs={} expr=v5212[1] }
        nt      = { defs={} expr=v5213[1] }
        ?15     = { defs={} expr=v5214[1] }
        rf      = { defs={} expr=v5215[1] }
        vm      = { defs={} expr=v5216[1] }
        ac      = { defs={} expr=v5217[1] }
        vif     = { defs={} expr=v5218[1] }
        vip     = { defs={} expr=v5219[1] }
        id      = { defs={} expr=v5220[1] }
        ?22     = { defs={} expr=v5221[1] }
        ?23     = { defs={} expr=v5222[1] }
        ?24     = { defs={} expr=v5223[1] }
        ?25     = { defs={} expr=v5224[1] }
        ?26     = { defs={} expr=v5225[1] }
        ?27     = { defs={} expr=v5226[1] }
        ?28     = { defs={} expr=v5227[1] }
        ?29     = { defs={} expr=v5228[1] }
        ?30     = { defs={} expr=v5229[1] }
        ?31     = { defs={} expr=v5230[1] }
        ip      = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=0x080484b9[32] }
    memory:
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x080484b5} expr=(extract[8] 24[32] 32[32] v5188[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x080484b5} expr=(extract[8] 16[32] 24[32] v5188[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x080484b5} expr=(extract[8] 8[32] 16[32] v5188[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b5} expr=(extract[8] 0[32] 8[32] v5188[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x080484b4} expr=(extract[8] 24[32] 32[32] v5191[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x080484b4} expr=(extract[8] 16[32] 24[32] v5191[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x080484b4} expr=(extract[8] 8[32] 16[32] v5191[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b4} expr=(extract[8] 0[32] 8[32] v5191[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x080484b3} expr=(extract[8] 24[32] 32[32] v5192[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x080484b3} expr=(extract[8] 16[32] 24[32] v5192[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x080484b3} expr=(extract[8] 8[32] 16[32] v5192[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v5189[32] -4[32]) -4[32]) }
          value = { defs={0x080484b3} expr=(extract[8] 0[32] 8[32] v5192[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 3[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 24[32] 32[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 2[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 16[32] 24[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 1[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 8[32] 16[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] v5189[32] -4[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 0[32] 8[32] v5190[32]) }
          flags = { }
    init mem:
0x80484b9:call   0x080484be<<Insn>>
    registers:
        ax      = { defs={} expr=v5185[32] }
        cx      = { defs={} expr=v5186[32] }
        dx      = { defs={} expr=v5187[32] }
        bx      = { defs={} expr=v5188[32] }
        sp      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) }
        bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v5189[32] -4[32]) }
        si      = { defs={} expr=v5191[32] }
        di      = { defs={} expr=v5192[32] }
        es      = { defs={} expr=v5193[16] }
        cs      = { defs={} expr=v5194[16] }
        ss      = { defs={} expr=v5195[16] }
        ds      = { defs={} expr=v5196[16] }
        fs      = { defs={} expr=v5197[16] }
        gs      = { defs={} expr=v5198[16] }
        cf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?1      = { defs={} expr=v5200[1] }
        pf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))))) }
        ?3      = { defs={} expr=v5202[1] }
        af      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?5      = { defs={} expr=v5204[1] }
        zf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        sf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        tf      = { defs={} expr=v5207[1] }
        if      = { defs={} expr=v5208[1] }
        df      = { defs={} expr=v5209[1] }
        of      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        iopl0   = { defs={} expr=v5211[1] }
        iopl1   = { defs={} expr=v5212[1] }
        nt      = { defs={} expr=v5213[1] }
        ?15     = { defs={} expr=v5214[1] }
        rf      = { defs={} expr=v5215[1] }
        vm      = { defs={} expr=v5216[1] }
        ac      = { defs={} expr=v5217[1] }
        vif     = { defs={} expr=v5218[1] }
        vip     = { defs={} expr=v5219[1] }
        id      = { defs={} expr=v5220[1] }
        ?22     = { defs={} expr=v5221[1] }
        ?23     = { defs={} expr=v5222[1] }
        ?24     = { defs={} expr=v5223[1] }
        ?25     = { defs={} expr=v5224[1] }
        ?26     = { defs={} expr=v5225[1] }
        ?27     = { defs={} expr=v5226[1] }
        ?28     = { defs={} expr=v5227[1] }
        ?29     = { defs={} expr=v5228[1] }
        ?30     = { defs={} expr=v5229[1] }
        ?31     = { defs={} expr=v5230[1] }
        ip      = { defs={0x080484b9} expr=0x080484be[32] }
    memory:
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 3[32]) }
          value = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=8[8] }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 2[32]) }
          value = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=4[8] }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 1[32]) }
          value = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=-124[8] }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) }
          value = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=-66[8] }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x080484b5} expr=(extract[8] 24[32] 32[32] v5188[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x080484b5} expr=(extract[8] 16[32] 24[32] v5188[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x080484b5} expr=(extract[8] 8[32] 16[32] v5188[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b5} expr=(extract[8] 0[32] 8[32] v5188[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x080484b4} expr=(extract[8] 24[32] 32[32] v5191[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x080484b4} expr=(extract[8] 16[32] 24[32] v5191[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x080484b4} expr=(extract[8] 8[32] 16[32] v5191[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b4} expr=(extract[8] 0[32] 8[32] v5191[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x080484b3} expr=(extract[8] 24[32] 32[32] v5192[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x080484b3} expr=(extract[8] 16[32] 24[32] v5192[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v5189[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x080484b3} expr=(extract[8] 8[32] 16[32] v5192[32]) }
          flags = { }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v5189[32] -4[32]) -4[32]) }
          value = { defs={0x080484b3} expr=(extract[8] 0[32] 8[32] v5192[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 3[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 24[32] 32[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 2[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 16[32] 24[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] (add[32] v5189[32] -4[32]) 1[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 8[32] 16[32] v5190[32]) }
          flags = { }
        address = { defs={0x080484b0} expr=(add[32] v5189[32] -4[32]) }
          value = { defs={0x080484b0} expr=(extract[8] 0[32] 8[32] v5190[32]) }
          flags = { }
    init mem:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
    registers:
        ax      = { defs={} expr=v5413[32] }
        cx      = { defs={} expr=v5414[32] }
        dx      = { defs={} expr=v5415[32] }
        bx      = { defs={0x080484be} expr=v5466[32] }
        sp      = { defs={0x080484be} expr=(add[32] v5417[32] 4[32]) }
        bp      = { defs={} expr=v5418[32] }
        si      = { defs={} expr=v5419[32] }
        di      = { defs={} expr=v5420[32] }
        es      = { defs={} expr=v5421[16] }
        cs      = { defs={} expr=v5422[16] }
        ss      = { defs={} expr=v5423[16] }
        ds      = { defs={} expr=v5424[16] }
        fs      = { defs={} expr=v5425[16] }
        gs      = { defs={} expr=v5426[16] }
        cf      = { defs={} expr=v5427[1] }
        ?1      = { defs={} expr=v5428[1] }
        pf      = { defs={} expr=v5429[1] }
        ?3      = { defs={} expr=v5430[1] }
        af      = { defs={} expr=v5431[1] }
        ?5      = { defs={} expr=v5432[1] }
        zf      = { defs={} expr=v5433[1] }
        sf      = { defs={} expr=v5434[1] }
        tf      = { defs={} expr=v5435[1] }
        if      = { defs={} expr=v5436[1] }
        df      = { defs={} expr=v5437[1] }
        of      = { defs={} expr=v5438[1] }
        iopl0   = { defs={} expr=v5439[1] }
        iopl1   = { defs={} expr=v5440[1] }
        nt      = { defs={} expr=v5441[1] }
        ?15     = { defs={} expr=v5442[1] }
        rf      = { defs={} expr=v5443[1] }
        vm      = { defs={} expr=v5444[1] }
        ac      = { defs={} expr=v5445[1] }
        vif     = { defs={} expr=v5446[1] }
        vip     = { defs={} expr=v5447[1] }
        id      = { defs={} expr=v5448[1] }
        ?22     = { defs={} expr=v5449[1] }
        ?23     = { defs={} expr=v5450[1] }
        ?24     = { defs={} expr=v5451[1] }
        ?25     = { defs={} expr=v5452[1] }
        ?26     = { defs={} expr=v5453[1] }
        ?27     = { defs={} expr=v5454[1] }
        ?28     = { defs={} expr=v5455[1] }
        ?29     = { defs={} expr=v5456[1] }
        ?30     = { defs={} expr=v5457[1] }
        ?31     = { defs={} expr=v5458[1] }
        ip      = { defs={0x080484be} expr=0x080484bf[32] }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v5417[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v5466[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v5417[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v5466[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v5417[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v5466[32]) }
          flags = { rdonly }
        address = { defs={} expr=v5417[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v5466[32]) }
          flags = { rdonly }
0x80484bf:add    ebx, 0x0000120a
    registers:
        ax      = { defs={} expr=v5413[32] }
        cx      = { defs={} expr=v5414[32] }
        dx      = { defs={} expr=v5415[32] }
        bx      = { defs={0x080484be,0x080484bf} expr=(add[32] v5466[32] 4618[32]) }
        sp      = { defs={0x080484be} expr=(add[32] v5417[32] 4[32]) }
        bp      = { defs={} expr=v5418[32] }
        si      = { defs={} expr=v5419[32] }
        di      = { defs={} expr=v5420[32] }
        es      = { defs={} expr=v5421[16] }
        cs      = { defs={} expr=v5422[16] }
        ss      = { defs={} expr=v5423[16] }
        ds      = { defs={} expr=v5424[16] }
        fs      = { defs={} expr=v5425[16] }
        gs      = { defs={} expr=v5426[16] }
        cf      = { defs={0x080484be,0x080484bf} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5466[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v5466[32]) 4618[33]))))) }
        ?1      = { defs={} expr=v5428[1] }
        pf      = { defs={0x080484be,0x080484bf} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v5466[32] 4618[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v5466[32] 4618[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v5466[32] 4618[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v5466[32] 4618[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v5466[32] 4618[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v5466[32] 4618[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v5466[32] 4618[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v5466[32] 4618[32]))))))) }
        ?3      = { defs={} expr=v5430[1] }
        af      = { defs={0x080484be,0x080484bf} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5466[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v5466[32]) 4618[33]))))) }
        ?5      = { defs={} expr=v5432[1] }
        zf      = { defs={0x080484be,0x080484bf} expr=(zerop[1] (add[32] v5466[32] 4618[32])) }
        sf      = { defs={0x080484be,0x080484bf} expr=(extract[1] 31[32] 32[32] (add[32] v5466[32] 4618[32])) }
        tf      = { defs={} expr=v5435[1] }
        if      = { defs={} expr=v5436[1] }
        df      = { defs={} expr=v5437[1] }
        of      = { defs={0x080484be,0x080484bf} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5466[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v5466[32]) 4618[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5466[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v5466[32]) 4618[33])))))) }
        iopl0   = { defs={} expr=v5439[1] }
        iopl1   = { defs={} expr=v5440[1] }
        nt      = { defs={} expr=v5441[1] }
        ?15     = { defs={} expr=v5442[1] }
        rf      = { defs={} expr=v5443[1] }
        vm      = { defs={} expr=v5444[1] }
        ac      = { defs={} expr=v5445[1] }
        vif     = { defs={} expr=v5446[1] }
        vip     = { defs={} expr=v5447[1] }
        id      = { defs={} expr=v5448[1] }
        ?22     = { defs={} expr=v5449[1] }
        ?23     = { defs={} expr=v5450[1] }
        ?24     = { defs={} expr=v5451[1] }
        ?25     = { defs={} expr=v5452[1] }
        ?26     = { defs={} expr=v5453[1] }
        ?27     = { defs={} expr=v5454[1] }
        ?28     = { defs={} expr=v5455[1] }
        ?29     = { defs={} expr=v5456[1] }
        ?30     = { defs={} expr=v5457[1] }
        ?31     = { defs={} expr=v5458[1] }
        ip      = { defs={0x080484be,0x080484bf} expr=0x080484c5[32] }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v5417[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v5466[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v5417[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v5466[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v5417[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v5466[32]) }
          flags = { rdonly }
        address = { defs={} expr=v5417[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v5466[32]) }
          flags = { rdonly }
0x80484c5:call   0x080482c8<_init>
    registers:
        ax      = { defs={} expr=v5413[32] }
        cx      = { defs={} expr=v5414[32] }
        dx      = { defs={} expr=v5415[32] }
        bx      = { defs={0x080484be,0x080484bf} expr=(add[32] v5466[32] 4618[32]) }
        sp      = { defs={0x080484be,0x080484c5} expr=(add[32] (add[32] v5417[32] 4[32]) -4[32]) }
        bp      = { defs={} expr=v5418[32] }
        si      = { defs={} expr=v5419[32] }
        di      = { defs={} expr=v5420[32] }
        es      = { defs={} expr=v5421[16] }
        cs      = { defs={} expr=v5422[16] }
        ss      = { defs={} expr=v5423[16] }
        ds      = { defs={} expr=v5424[16] }
        fs      = { defs={} expr=v5425[16] }
        gs      = { defs={} expr=v5426[16] }
        cf      = { defs={0x080484be,0x080484bf} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5466[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v5466[32]) 4618[33]))))) }
        ?1      = { defs={} expr=v5428[1] }
        pf      = { defs={0x080484be,0x080484bf} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v5466[32] 4618[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v5466[32] 4618[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v5466[32] 4618[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v5466[32] 4618[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v5466[32] 4618[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v5466[32] 4618[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v5466[32] 4618[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v5466[32] 4618[32]))))))) }
        ?3      = { defs={} expr=v5430[1] }
        af      = { defs={0x080484be,0x080484bf} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5466[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v5466[32]) 4618[33]))))) }
        ?5      = { defs={} expr=v5432[1] }
        zf      = { defs={0x080484be,0x080484bf} expr=(zerop[1] (add[32] v5466[32] 4618[32])) }
        sf      = { defs={0x080484be,0x080484bf} expr=(extract[1] 31[32] 32[32] (add[32] v5466[32] 4618[32])) }
        tf      = { defs={} expr=v5435[1] }
        if      = { defs={} expr=v5436[1] }
        df      = { defs={} expr=v5437[1] }
        of      = { defs={0x080484be,0x080484bf} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5466[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v5466[32]) 4618[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5466[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v5466[32]) 4618[33])))))) }
        iopl0   = { defs={} expr=v5439[1] }
        iopl1   = { defs={} expr=v5440[1] }
        nt      = { defs={} expr=v5441[1] }
        ?15     = { defs={} expr=v5442[1] }
        rf      = { defs={} expr=v5443[1] }
        vm      = { defs={} expr=v5444[1] }
        ac      = { defs={} expr=v5445[1] }
        vif     = { defs={} expr=v5446[1] }
        vip     = { defs={} expr=v5447[1] }
        id      = { defs={} expr=v5448[1] }
        ?22     = { defs={} expr=v5449[1] }
        ?23     = { defs={} expr=v5450[1] }
        ?24     = { defs={} expr=v5451[1] }
        ?25     = { defs={} expr=v5452[1] }
        ?26     = { defs={} expr=v5453[1] }
        ?27     = { defs={} expr=v5454[1] }
        ?28     = { defs={} expr=v5455[1] }
        ?29     = { defs={} expr=v5456[1] }
        ?30     = { defs={} expr=v5457[1] }
        ?31     = { defs={} expr=v5458[1] }
        ip      = { defs={0x080484c5} expr=0x080482c8[32] }
    memory:
        address = { defs={0x080484be,0x080484c5} expr=(add[32] (add[32] (add[32] v5417[32] 4[32]) -4[32]) 3[32]) }
          value = { defs={0x080484be,0x080484bf,0x080484c5} expr=8[8] }
          flags = { }
        address = { defs={0x080484be,0x080484c5} expr=(add[32] (add[32] (add[32] v5417[32] 4[32]) -4[32]) 2[32]) }
          value = { defs={0x080484be,0x080484bf,0x080484c5} expr=4[8] }
          flags = { }
        address = { defs={0x080484be,0x080484c5} expr=(add[32] (add[32] (add[32] v5417[32] 4[32]) -4[32]) 1[32]) }
          value = { defs={0x080484be,0x080484bf,0x080484c5} expr=-124[8] }
          flags = { }
        address = { defs={0x080484be,0x080484c5} expr=(add[32] (add[32] v5417[32] 4[32]) -4[32]) }
          value = { defs={0x080484be,0x080484bf,0x080484c5} expr=-54[8] }
          flags = { }
    init mem:
        address = { defs={} expr=(add[32] v5417[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v5466[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v5417[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v5466[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v5417[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v5466[32]) }
          flags = { rdonly }
        address = { defs={} expr=v5417[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v5466[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    registers:
        ax      = { defs={0x080484ca} expr=(add[32] v5593[32] -224[32]) }
        cx      = { defs={} expr=v5591[32] }
        dx      = { defs={} expr=v5592[32] }
        bx      = { defs={} expr=v5593[32] }
        sp      = { defs={} expr=v5594[32] }
        bp      = { defs={} expr=v5595[32] }
        si      = { defs={} expr=v5596[32] }
        di      = { defs={} expr=v5597[32] }
        es      = { defs={} expr=v5598[16] }
        cs      = { defs={} expr=v5599[16] }
        ss      = { defs={} expr=v5600[16] }
        ds      = { defs={} expr=v5601[16] }
        fs      = { defs={} expr=v5602[16] }
        gs      = { defs={} expr=v5603[16] }
        cf      = { defs={} expr=v5604[1] }
        ?1      = { defs={} expr=v5605[1] }
        pf      = { defs={} expr=v5606[1] }
        ?3      = { defs={} expr=v5607[1] }
        af      = { defs={} expr=v5608[1] }
        ?5      = { defs={} expr=v5609[1] }
        zf      = { defs={} expr=v5610[1] }
        sf      = { defs={} expr=v5611[1] }
        tf      = { defs={} expr=v5612[1] }
        if      = { defs={} expr=v5613[1] }
        df      = { defs={} expr=v5614[1] }
        of      = { defs={} expr=v5615[1] }
        iopl0   = { defs={} expr=v5616[1] }
        iopl1   = { defs={} expr=v5617[1] }
        nt      = { defs={} expr=v5618[1] }
        ?15     = { defs={} expr=v5619[1] }
        rf      = { defs={} expr=v5620[1] }
        vm      = { defs={} expr=v5621[1] }
        ac      = { defs={} expr=v5622[1] }
        vif     = { defs={} expr=v5623[1] }
        vip     = { defs={} expr=v5624[1] }
        id      = { defs={} expr=v5625[1] }
        ?22     = { defs={} expr=v5626[1] }
        ?23     = { defs={} expr=v5627[1] }
        ?24     = { defs={} expr=v5628[1] }
        ?25     = { defs={} expr=v5629[1] }
        ?26     = { defs={} expr=v5630[1] }
        ?27     = { defs={} expr=v5631[1] }
        ?28     = { defs={} expr=v5632[1] }
        ?29     = { defs={} expr=v5633[1] }
        ?30     = { defs={} expr=v5634[1] }
        ?31     = { defs={} expr=v5635[1] }
        ip      = { defs={0x080484ca} expr=0x080484d0[32] }
    memory:
    init mem:
0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    registers:
        ax      = { defs={0x080484ca} expr=(add[32] v5593[32] -224[32]) }
        cx      = { defs={} expr=v5591[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v5593[32] -224[32]) }
        bx      = { defs={} expr=v5593[32] }
        sp      = { defs={} expr=v5594[32] }
        bp      = { defs={} expr=v5595[32] }
        si      = { defs={} expr=v5596[32] }
        di      = { defs={} expr=v5597[32] }
        es      = { defs={} expr=v5598[16] }
        cs      = { defs={} expr=v5599[16] }
        ss      = { defs={} expr=v5600[16] }
        ds      = { defs={} expr=v5601[16] }
        fs      = { defs={} expr=v5602[16] }
        gs      = { defs={} expr=v5603[16] }
        cf      = { defs={} expr=v5604[1] }
        ?1      = { defs={} expr=v5605[1] }
        pf      = { defs={} expr=v5606[1] }
        ?3      = { defs={} expr=v5607[1] }
        af      = { defs={} expr=v5608[1] }
        ?5      = { defs={} expr=v5609[1] }
        zf      = { defs={} expr=v5610[1] }
        sf      = { defs={} expr=v5611[1] }
        tf      = { defs={} expr=v5612[1] }
        if      = { defs={} expr=v5613[1] }
        df      = { defs={} expr=v5614[1] }
        of      = { defs={} expr=v5615[1] }
        iopl0   = { defs={} expr=v5616[1] }
        iopl1   = { defs={} expr=v5617[1] }
        nt      = { defs={} expr=v5618[1] }
        ?15     = { defs={} expr=v5619[1] }
        rf      = { defs={} expr=v5620[1] }
        vm      = { defs={} expr=v5621[1] }
        ac      = { defs={} expr=v5622[1] }
        vif     = { defs={} expr=v5623[1] }
        vip     = { defs={} expr=v5624[1] }
        id      = { defs={} expr=v5625[1] }
        ?22     = { defs={} expr=v5626[1] }
        ?23     = { defs={} expr=v5627[1] }
        ?24     = { defs={} expr=v5628[1] }
        ?25     = { defs={} expr=v5629[1] }
        ?26     = { defs={} expr=v5630[1] }
        ?27     = { defs={} expr=v5631[1] }
        ?28     = { defs={} expr=v5632[1] }
        ?29     = { defs={} expr=v5633[1] }
        ?30     = { defs={} expr=v5634[1] }
        ?31     = { defs={} expr=v5635[1] }
        ip      = { defs={0x080484ca,0x080484d0} expr=0x080484d6[32] }
    memory:
    init mem:
0x80484d6:sub    eax, edx
    registers:
        ax      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])) }
        cx      = { defs={} expr=v5591[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v5593[32] -224[32]) }
        bx      = { defs={} expr=v5593[32] }
        sp      = { defs={} expr=v5594[32] }
        bp      = { defs={} expr=v5595[32] }
        si      = { defs={} expr=v5596[32] }
        di      = { defs={} expr=v5597[32] }
        es      = { defs={} expr=v5598[16] }
        cs      = { defs={} expr=v5599[16] }
        ss      = { defs={} expr=v5600[16] }
        ds      = { defs={} expr=v5601[16] }
        fs      = { defs={} expr=v5602[16] }
        gs      = { defs={} expr=v5603[16] }
        cf      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5593[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v5593[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v5593[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v5593[32] -224[32]))) 1[33]))))))) }
        ?1      = { defs={} expr=v5605[1] }
        pf      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))))))) }
        ?3      = { defs={} expr=v5607[1] }
        af      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5593[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v5593[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v5593[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v5593[32] -224[32]))) 1[33]))))))) }
        ?5      = { defs={} expr=v5609[1] }
        zf      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(zerop[1] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))) }
        sf      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))) }
        tf      = { defs={} expr=v5612[1] }
        if      = { defs={} expr=v5613[1] }
        df      = { defs={} expr=v5614[1] }
        of      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5593[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v5593[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v5593[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v5593[32] -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5593[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v5593[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v5593[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v5593[32] -224[32]))) 1[33]))))))) }
        iopl0   = { defs={} expr=v5616[1] }
        iopl1   = { defs={} expr=v5617[1] }
        nt      = { defs={} expr=v5618[1] }
        ?15     = { defs={} expr=v5619[1] }
        rf      = { defs={} expr=v5620[1] }
        vm      = { defs={} expr=v5621[1] }
        ac      = { defs={} expr=v5622[1] }
        vif     = { defs={} expr=v5623[1] }
        vip     = { defs={} expr=v5624[1] }
        id      = { defs={} expr=v5625[1] }
        ?22     = { defs={} expr=v5626[1] }
        ?23     = { defs={} expr=v5627[1] }
        ?24     = { defs={} expr=v5628[1] }
        ?25     = { defs={} expr=v5629[1] }
        ?26     = { defs={} expr=v5630[1] }
        ?27     = { defs={} expr=v5631[1] }
        ?28     = { defs={} expr=v5632[1] }
        ?29     = { defs={} expr=v5633[1] }
        ?30     = { defs={} expr=v5634[1] }
        ?31     = { defs={} expr=v5635[1] }
        ip      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=0x080484d8[32] }
    memory:
    init mem:
0x80484d8:sar    eax, 0x02
    registers:
        ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))) }
        cx      = { defs={} expr=v5591[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v5593[32] -224[32]) }
        bx      = { defs={} expr=v5593[32] }
        sp      = { defs={} expr=v5594[32] }
        bp      = { defs={} expr=v5595[32] }
        si      = { defs={} expr=v5596[32] }
        di      = { defs={} expr=v5597[32] }
        es      = { defs={} expr=v5598[16] }
        cs      = { defs={} expr=v5599[16] }
        ss      = { defs={} expr=v5600[16] }
        ds      = { defs={} expr=v5601[16] }
        fs      = { defs={} expr=v5602[16] }
        gs      = { defs={} expr=v5603[16] }
        cf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) }
        ?1      = { defs={} expr=v5605[1] }
        pf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))))))) }
        ?3      = { defs={} expr=v5607[1] }
        af      = { defs={0x080484d8} expr=v5717[1] }
        ?5      = { defs={} expr=v5609[1] }
        zf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) }
        sf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) }
        tf      = { defs={} expr=v5612[1] }
        if      = { defs={} expr=v5613[1] }
        df      = { defs={} expr=v5614[1] }
        of      = { defs={0x080484d8} expr=v5732[1] }
        iopl0   = { defs={} expr=v5616[1] }
        iopl1   = { defs={} expr=v5617[1] }
        nt      = { defs={} expr=v5618[1] }
        ?15     = { defs={} expr=v5619[1] }
        rf      = { defs={} expr=v5620[1] }
        vm      = { defs={} expr=v5621[1] }
        ac      = { defs={} expr=v5622[1] }
        vif     = { defs={} expr=v5623[1] }
        vip     = { defs={} expr=v5624[1] }
        id      = { defs={} expr=v5625[1] }
        ?22     = { defs={} expr=v5626[1] }
        ?23     = { defs={} expr=v5627[1] }
        ?24     = { defs={} expr=v5628[1] }
        ?25     = { defs={} expr=v5629[1] }
        ?26     = { defs={} expr=v5630[1] }
        ?27     = { defs={} expr=v5631[1] }
        ?28     = { defs={} expr=v5632[1] }
        ?29     = { defs={} expr=v5633[1] }
        ?30     = { defs={} expr=v5634[1] }
        ?31     = { defs={} expr=v5635[1] }
        ip      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=0x080484db[32] }
    memory:
    init mem:
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    registers:
        ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))) }
        cx      = { defs={} expr=v5591[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v5593[32] -224[32]) }
        bx      = { defs={} expr=v5593[32] }
        sp      = { defs={} expr=v5594[32] }
        bp      = { defs={} expr=v5595[32] }
        si      = { defs={} expr=v5596[32] }
        di      = { defs={} expr=v5597[32] }
        es      = { defs={} expr=v5598[16] }
        cs      = { defs={} expr=v5599[16] }
        ss      = { defs={} expr=v5600[16] }
        ds      = { defs={} expr=v5601[16] }
        fs      = { defs={} expr=v5602[16] }
        gs      = { defs={} expr=v5603[16] }
        cf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) }
        ?1      = { defs={} expr=v5605[1] }
        pf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))))))) }
        ?3      = { defs={} expr=v5607[1] }
        af      = { defs={0x080484d8} expr=v5717[1] }
        ?5      = { defs={} expr=v5609[1] }
        zf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) }
        sf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) }
        tf      = { defs={} expr=v5612[1] }
        if      = { defs={} expr=v5613[1] }
        df      = { defs={} expr=v5614[1] }
        of      = { defs={0x080484d8} expr=v5732[1] }
        iopl0   = { defs={} expr=v5616[1] }
        iopl1   = { defs={} expr=v5617[1] }
        nt      = { defs={} expr=v5618[1] }
        ?15     = { defs={} expr=v5619[1] }
        rf      = { defs={} expr=v5620[1] }
        vm      = { defs={} expr=v5621[1] }
        ac      = { defs={} expr=v5622[1] }
        vif     = { defs={} expr=v5623[1] }
        vip     = { defs={} expr=v5624[1] }
        id      = { defs={} expr=v5625[1] }
        ?22     = { defs={} expr=v5626[1] }
        ?23     = { defs={} expr=v5627[1] }
        ?24     = { defs={} expr=v5628[1] }
        ?25     = { defs={} expr=v5629[1] }
        ?26     = { defs={} expr=v5630[1] }
        ?27     = { defs={} expr=v5631[1] }
        ?28     = { defs={} expr=v5632[1] }
        ?29     = { defs={} expr=v5633[1] }
        ?30     = { defs={} expr=v5634[1] }
        ?31     = { defs={} expr=v5635[1] }
        ip      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=0x080484de[32] }
    memory:
        address = { defs={0x080484db} expr=(add[32] (add[32] v5595[32] -16[32]) 3[32]) }
          value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) }
          flags = { }
        address = { defs={0x080484db} expr=(add[32] (add[32] v5595[32] -16[32]) 2[32]) }
          value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) }
          flags = { }
        address = { defs={0x080484db} expr=(add[32] (add[32] v5595[32] -16[32]) 1[32]) }
          value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) }
          flags = { }
        address = { defs={0x080484db} expr=(add[32] v5595[32] -16[32]) }
          value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) }
          flags = { }
    init mem:
0x80484de:jne    0x080484f0<<StaticData@0x080484e8>+8>
    registers:
        ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))) }
        cx      = { defs={} expr=v5591[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v5593[32] -224[32]) }
        bx      = { defs={} expr=v5593[32] }
        sp      = { defs={} expr=v5594[32] }
        bp      = { defs={} expr=v5595[32] }
        si      = { defs={} expr=v5596[32] }
        di      = { defs={} expr=v5597[32] }
        es      = { defs={} expr=v5598[16] }
        cs      = { defs={} expr=v5599[16] }
        ss      = { defs={} expr=v5600[16] }
        ds      = { defs={} expr=v5601[16] }
        fs      = { defs={} expr=v5602[16] }
        gs      = { defs={} expr=v5603[16] }
        cf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) }
        ?1      = { defs={} expr=v5605[1] }
        pf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))))))) }
        ?3      = { defs={} expr=v5607[1] }
        af      = { defs={0x080484d8} expr=v5717[1] }
        ?5      = { defs={} expr=v5609[1] }
        zf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) }
        sf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) }
        tf      = { defs={} expr=v5612[1] }
        if      = { defs={} expr=v5613[1] }
        df      = { defs={} expr=v5614[1] }
        of      = { defs={0x080484d8} expr=v5732[1] }
        iopl0   = { defs={} expr=v5616[1] }
        iopl1   = { defs={} expr=v5617[1] }
        nt      = { defs={} expr=v5618[1] }
        ?15     = { defs={} expr=v5619[1] }
        rf      = { defs={} expr=v5620[1] }
        vm      = { defs={} expr=v5621[1] }
        ac      = { defs={} expr=v5622[1] }
        vif     = { defs={} expr=v5623[1] }
        vip     = { defs={} expr=v5624[1] }
        id      = { defs={} expr=v5625[1] }
        ?22     = { defs={} expr=v5626[1] }
        ?23     = { defs={} expr=v5627[1] }
        ?24     = { defs={} expr=v5628[1] }
        ?25     = { defs={} expr=v5629[1] }
        ?26     = { defs={} expr=v5630[1] }
        ?27     = { defs={} expr=v5631[1] }
        ?28     = { defs={} expr=v5632[1] }
        ?29     = { defs={} expr=v5633[1] }
        ?30     = { defs={} expr=v5634[1] }
        ?31     = { defs={} expr=v5635[1] }
        ip      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db,0x080484de} expr=(ite[32] (invert[1] (zerop[1] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32]))))) 0x080484f0[32] 0x080484e0[32]) }
    memory:
        address = { defs={0x080484db} expr=(add[32] (add[32] v5595[32] -16[32]) 3[32]) }
          value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) }
          flags = { }
        address = { defs={0x080484db} expr=(add[32] (add[32] v5595[32] -16[32]) 2[32]) }
          value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) }
          flags = { }
        address = { defs={0x080484db} expr=(add[32] (add[32] v5595[32] -16[32]) 1[32]) }
          value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) }
          flags = { }
        address = { defs={0x080484db} expr=(add[32] v5595[32] -16[32]) }
          value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v5593[32] -224[32]) (add[32] (invert[32] (add[32] v5593[32] -224[32])) 1[32])))) }
          flags = { }
    init mem:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e0:add    esp, 0x0c
    registers:
        ax      = { defs={} expr=v5839[32] }
        cx      = { defs={} expr=v5840[32] }
        dx      = { defs={} expr=v5841[32] }
        bx      = { defs={} expr=v5842[32] }
        sp      = { defs={0x080484e0} expr=(add[32] v5843[32] 12[32]) }
        bp      = { defs={} expr=v5844[32] }
        si      = { defs={} expr=v5845[32] }
        di      = { defs={} expr=v5846[32] }
        es      = { defs={} expr=v5847[16] }
        cs      = { defs={} expr=v5848[16] }
        ss      = { defs={} expr=v5849[16] }
        ds      = { defs={} expr=v5850[16] }
        fs      = { defs={} expr=v5851[16] }
        gs      = { defs={} expr=v5852[16] }
        cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33]))))) }
        ?1      = { defs={} expr=v5854[1] }
        pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))))))) }
        ?3      = { defs={} expr=v5856[1] }
        af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33]))))) }
        ?5      = { defs={} expr=v5858[1] }
        zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v5843[32] 12[32])) }
        sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v5843[32] 12[32])) }
        tf      = { defs={} expr=v5861[1] }
        if      = { defs={} expr=v5862[1] }
        df      = { defs={} expr=v5863[1] }
        of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v5865[1] }
        iopl1   = { defs={} expr=v5866[1] }
        nt      = { defs={} expr=v5867[1] }
        ?15     = { defs={} expr=v5868[1] }
        rf      = { defs={} expr=v5869[1] }
        vm      = { defs={} expr=v5870[1] }
        ac      = { defs={} expr=v5871[1] }
        vif     = { defs={} expr=v5872[1] }
        vip     = { defs={} expr=v5873[1] }
        id      = { defs={} expr=v5874[1] }
        ?22     = { defs={} expr=v5875[1] }
        ?23     = { defs={} expr=v5876[1] }
        ?24     = { defs={} expr=v5877[1] }
        ?25     = { defs={} expr=v5878[1] }
        ?26     = { defs={} expr=v5879[1] }
        ?27     = { defs={} expr=v5880[1] }
        ?28     = { defs={} expr=v5881[1] }
        ?29     = { defs={} expr=v5882[1] }
        ?30     = { defs={} expr=v5883[1] }
        ?31     = { defs={} expr=v5884[1] }
        ip      = { defs={0x080484e0} expr=0x080484e3[32] }
    memory:
    init mem:
0x80484e3:pop    ebx
    registers:
        ax      = { defs={} expr=v5839[32] }
        cx      = { defs={} expr=v5840[32] }
        dx      = { defs={} expr=v5841[32] }
        bx      = { defs={0x080484e3} expr=v5940[32] }
        sp      = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] v5843[32] 12[32]) 4[32]) }
        bp      = { defs={} expr=v5844[32] }
        si      = { defs={} expr=v5845[32] }
        di      = { defs={} expr=v5846[32] }
        es      = { defs={} expr=v5847[16] }
        cs      = { defs={} expr=v5848[16] }
        ss      = { defs={} expr=v5849[16] }
        ds      = { defs={} expr=v5850[16] }
        fs      = { defs={} expr=v5851[16] }
        gs      = { defs={} expr=v5852[16] }
        cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33]))))) }
        ?1      = { defs={} expr=v5854[1] }
        pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))))))) }
        ?3      = { defs={} expr=v5856[1] }
        af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33]))))) }
        ?5      = { defs={} expr=v5858[1] }
        zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v5843[32] 12[32])) }
        sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v5843[32] 12[32])) }
        tf      = { defs={} expr=v5861[1] }
        if      = { defs={} expr=v5862[1] }
        df      = { defs={} expr=v5863[1] }
        of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v5865[1] }
        iopl1   = { defs={} expr=v5866[1] }
        nt      = { defs={} expr=v5867[1] }
        ?15     = { defs={} expr=v5868[1] }
        rf      = { defs={} expr=v5869[1] }
        vm      = { defs={} expr=v5870[1] }
        ac      = { defs={} expr=v5871[1] }
        vif     = { defs={} expr=v5872[1] }
        vip     = { defs={} expr=v5873[1] }
        id      = { defs={} expr=v5874[1] }
        ?22     = { defs={} expr=v5875[1] }
        ?23     = { defs={} expr=v5876[1] }
        ?24     = { defs={} expr=v5877[1] }
        ?25     = { defs={} expr=v5878[1] }
        ?26     = { defs={} expr=v5879[1] }
        ?27     = { defs={} expr=v5880[1] }
        ?28     = { defs={} expr=v5881[1] }
        ?29     = { defs={} expr=v5882[1] }
        ?30     = { defs={} expr=v5883[1] }
        ?31     = { defs={} expr=v5884[1] }
        ip      = { defs={0x080484e0,0x080484e3} expr=0x080484e4[32] }
    memory:
    init mem:
        address = { defs={0x080484e0} expr=(add[32] (add[32] v5843[32] 12[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v5940[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0} expr=(add[32] (add[32] v5843[32] 12[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v5940[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0} expr=(add[32] (add[32] v5843[32] 12[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v5940[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0} expr=(add[32] v5843[32] 12[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v5940[32]) }
          flags = { rdonly }
0x80484e4:pop    esi
    registers:
        ax      = { defs={} expr=v5839[32] }
        cx      = { defs={} expr=v5840[32] }
        dx      = { defs={} expr=v5841[32] }
        bx      = { defs={0x080484e3} expr=v5940[32] }
        sp      = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) }
        bp      = { defs={} expr=v5844[32] }
        si      = { defs={0x080484e4} expr=v5958[32] }
        di      = { defs={} expr=v5846[32] }
        es      = { defs={} expr=v5847[16] }
        cs      = { defs={} expr=v5848[16] }
        ss      = { defs={} expr=v5849[16] }
        ds      = { defs={} expr=v5850[16] }
        fs      = { defs={} expr=v5851[16] }
        gs      = { defs={} expr=v5852[16] }
        cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33]))))) }
        ?1      = { defs={} expr=v5854[1] }
        pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))))))) }
        ?3      = { defs={} expr=v5856[1] }
        af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33]))))) }
        ?5      = { defs={} expr=v5858[1] }
        zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v5843[32] 12[32])) }
        sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v5843[32] 12[32])) }
        tf      = { defs={} expr=v5861[1] }
        if      = { defs={} expr=v5862[1] }
        df      = { defs={} expr=v5863[1] }
        of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v5865[1] }
        iopl1   = { defs={} expr=v5866[1] }
        nt      = { defs={} expr=v5867[1] }
        ?15     = { defs={} expr=v5868[1] }
        rf      = { defs={} expr=v5869[1] }
        vm      = { defs={} expr=v5870[1] }
        ac      = { defs={} expr=v5871[1] }
        vif     = { defs={} expr=v5872[1] }
        vip     = { defs={} expr=v5873[1] }
        id      = { defs={} expr=v5874[1] }
        ?22     = { defs={} expr=v5875[1] }
        ?23     = { defs={} expr=v5876[1] }
        ?24     = { defs={} expr=v5877[1] }
        ?25     = { defs={} expr=v5878[1] }
        ?26     = { defs={} expr=v5879[1] }
        ?27     = { defs={} expr=v5880[1] }
        ?28     = { defs={} expr=v5881[1] }
        ?29     = { defs={} expr=v5882[1] }
        ?30     = { defs={} expr=v5883[1] }
        ?31     = { defs={} expr=v5884[1] }
        ip      = { defs={0x080484e0,0x080484e3,0x080484e4} expr=0x080484e5[32] }
    memory:
    init mem:
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v5958[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v5958[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v5958[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] v5843[32] 12[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v5958[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0} expr=(add[32] (add[32] v5843[32] 12[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v5940[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0} expr=(add[32] (add[32] v5843[32] 12[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v5940[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0} expr=(add[32] (add[32] v5843[32] 12[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v5940[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0} expr=(add[32] v5843[32] 12[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v5940[32]) }
          flags = { rdonly }
0x80484e5:pop    edi
    registers:
        ax      = { defs={} expr=v5839[32] }
        cx      = { defs={} expr=v5840[32] }
        dx      = { defs={} expr=v5841[32] }
        bx      = { defs={0x080484e3} expr=v5940[32] }
        sp      = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={} expr=v5844[32] }
        si      = { defs={0x080484e4} expr=v5958[32] }
        di      = { defs={0x080484e5} expr=v5976[32] }
        es      = { defs={} expr=v5847[16] }
        cs      = { defs={} expr=v5848[16] }
        ss      = { defs={} expr=v5849[16] }
        ds      = { defs={} expr=v5850[16] }
        fs      = { defs={} expr=v5851[16] }
        gs      = { defs={} expr=v5852[16] }
        cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33]))))) }
        ?1      = { defs={} expr=v5854[1] }
        pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))))))) }
        ?3      = { defs={} expr=v5856[1] }
        af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33]))))) }
        ?5      = { defs={} expr=v5858[1] }
        zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v5843[32] 12[32])) }
        sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v5843[32] 12[32])) }
        tf      = { defs={} expr=v5861[1] }
        if      = { defs={} expr=v5862[1] }
        df      = { defs={} expr=v5863[1] }
        of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v5865[1] }
        iopl1   = { defs={} expr=v5866[1] }
        nt      = { defs={} expr=v5867[1] }
        ?15     = { defs={} expr=v5868[1] }
        rf      = { defs={} expr=v5869[1] }
        vm      = { defs={} expr=v5870[1] }
        ac      = { defs={} expr=v5871[1] }
        vif     = { defs={} expr=v5872[1] }
        vip     = { defs={} expr=v5873[1] }
        id      = { defs={} expr=v5874[1] }
        ?22     = { defs={} expr=v5875[1] }
        ?23     = { defs={} expr=v5876[1] }
        ?24     = { defs={} expr=v5877[1] }
        ?25     = { defs={} expr=v5878[1] }
        ?26     = { defs={} expr=v5879[1] }
        ?27     = { defs={} expr=v5880[1] }
        ?28     = { defs={} expr=v5881[1] }
        ?29     = { defs={} expr=v5882[1] }
        ?30     = { defs={} expr=v5883[1] }
        ?31     = { defs={} expr=v5884[1] }
        ip      = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=0x080484e6[32] }
    memory:
    init mem:
        address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v5976[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v5976[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v5976[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v5976[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v5958[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v5958[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v5958[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] v5843[32] 12[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v5958[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0} expr=(add[32] (add[32] v5843[32] 12[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v5940[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0} expr=(add[32] (add[32] v5843[32] 12[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v5940[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0} expr=(add[32] (add[32] v5843[32] 12[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v5940[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0} expr=(add[32] v5843[32] 12[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v5940[32]) }
          flags = { rdonly }
0x80484e6:pop    ebp
    registers:
        ax      = { defs={} expr=v5839[32] }
        cx      = { defs={} expr=v5840[32] }
        dx      = { defs={} expr=v5841[32] }
        bx      = { defs={0x080484e3} expr=v5940[32] }
        sp      = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={0x080484e6} expr=v5994[32] }
        si      = { defs={0x080484e4} expr=v5958[32] }
        di      = { defs={0x080484e5} expr=v5976[32] }
        es      = { defs={} expr=v5847[16] }
        cs      = { defs={} expr=v5848[16] }
        ss      = { defs={} expr=v5849[16] }
        ds      = { defs={} expr=v5850[16] }
        fs      = { defs={} expr=v5851[16] }
        gs      = { defs={} expr=v5852[16] }
        cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33]))))) }
        ?1      = { defs={} expr=v5854[1] }
        pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))))))) }
        ?3      = { defs={} expr=v5856[1] }
        af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33]))))) }
        ?5      = { defs={} expr=v5858[1] }
        zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v5843[32] 12[32])) }
        sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v5843[32] 12[32])) }
        tf      = { defs={} expr=v5861[1] }
        if      = { defs={} expr=v5862[1] }
        df      = { defs={} expr=v5863[1] }
        of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v5865[1] }
        iopl1   = { defs={} expr=v5866[1] }
        nt      = { defs={} expr=v5867[1] }
        ?15     = { defs={} expr=v5868[1] }
        rf      = { defs={} expr=v5869[1] }
        vm      = { defs={} expr=v5870[1] }
        ac      = { defs={} expr=v5871[1] }
        vif     = { defs={} expr=v5872[1] }
        vip     = { defs={} expr=v5873[1] }
        id      = { defs={} expr=v5874[1] }
        ?22     = { defs={} expr=v5875[1] }
        ?23     = { defs={} expr=v5876[1] }
        ?24     = { defs={} expr=v5877[1] }
        ?25     = { defs={} expr=v5878[1] }
        ?26     = { defs={} expr=v5879[1] }
        ?27     = { defs={} expr=v5880[1] }
        ?28     = { defs={} expr=v5881[1] }
        ?29     = { defs={} expr=v5882[1] }
        ?30     = { defs={} expr=v5883[1] }
        ?31     = { defs={} expr=v5884[1] }
        ip      = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6} expr=0x080484e7[32] }
    memory:
    init mem:
        address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v5994[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v5994[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v5994[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v5994[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v5976[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v5976[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v5976[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v5976[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v5958[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v5958[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v5958[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] v5843[32] 12[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v5958[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0} expr=(add[32] (add[32] v5843[32] 12[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v5940[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0} expr=(add[32] (add[32] v5843[32] 12[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v5940[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0} expr=(add[32] (add[32] v5843[32] 12[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v5940[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0} expr=(add[32] v5843[32] 12[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v5940[32]) }
          flags = { rdonly }
0x80484e7:ret    
    registers:
        ax      = { defs={} expr=v5839[32] }
        cx      = { defs={} expr=v5840[32] }
        dx      = { defs={} expr=v5841[32] }
        bx      = { defs={0x080484e3} expr=v5940[32] }
        sp      = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6,0x080484e7} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={0x080484e6} expr=v5994[32] }
        si      = { defs={0x080484e4} expr=v5958[32] }
        di      = { defs={0x080484e5} expr=v5976[32] }
        es      = { defs={} expr=v5847[16] }
        cs      = { defs={} expr=v5848[16] }
        ss      = { defs={} expr=v5849[16] }
        ds      = { defs={} expr=v5850[16] }
        fs      = { defs={} expr=v5851[16] }
        gs      = { defs={} expr=v5852[16] }
        cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33]))))) }
        ?1      = { defs={} expr=v5854[1] }
        pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v5843[32] 12[32]))))))) }
        ?3      = { defs={} expr=v5856[1] }
        af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33]))))) }
        ?5      = { defs={} expr=v5858[1] }
        zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v5843[32] 12[32])) }
        sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v5843[32] 12[32])) }
        tf      = { defs={} expr=v5861[1] }
        if      = { defs={} expr=v5862[1] }
        df      = { defs={} expr=v5863[1] }
        of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v5843[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v5843[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v5865[1] }
        iopl1   = { defs={} expr=v5866[1] }
        nt      = { defs={} expr=v5867[1] }
        ?15     = { defs={} expr=v5868[1] }
        rf      = { defs={} expr=v5869[1] }
        vm      = { defs={} expr=v5870[1] }
        ac      = { defs={} expr=v5871[1] }
        vif     = { defs={} expr=v5872[1] }
        vip     = { defs={} expr=v5873[1] }
        id      = { defs={} expr=v5874[1] }
        ?22     = { defs={} expr=v5875[1] }
        ?23     = { defs={} expr=v5876[1] }
        ?24     = { defs={} expr=v5877[1] }
        ?25     = { defs={} expr=v5878[1] }
        ?26     = { defs={} expr=v5879[1] }
        ?27     = { defs={} expr=v5880[1] }
        ?28     = { defs={} expr=v5881[1] }
        ?29     = { defs={} expr=v5882[1] }
        ?30     = { defs={} expr=v5883[1] }
        ?31     = { defs={} expr=v5884[1] }
        ip      = { defs={0x080484e7} expr=v6012[32] }
    memory:
    init mem:
        address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v6012[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v6012[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v6012[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v6012[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v5994[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v5994[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v5994[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v5994[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v5976[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v5976[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v5976[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v5976[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v5958[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v5958[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v5843[32] 12[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v5958[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] v5843[32] 12[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v5958[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0} expr=(add[32] (add[32] v5843[32] 12[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v5940[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0} expr=(add[32] (add[32] v5843[32] 12[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v5940[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0} expr=(add[32] (add[32] v5843[32] 12[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v5940[32]) }
          flags = { rdonly }
        address = { defs={0x080484e0} expr=(add[32] v5843[32] 12[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v5940[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048520:push   ebp
    registers:
        ax      = { defs={} expr=v6073[32] }
        cx      = { defs={} expr=v6074[32] }
        dx      = { defs={} expr=v6075[32] }
        bx      = { defs={} expr=v6076[32] }
        sp      = { defs={0x08048520} expr=(add[32] v6077[32] -4[32]) }
        bp      = { defs={} expr=v6078[32] }
        si      = { defs={} expr=v6079[32] }
        di      = { defs={} expr=v6080[32] }
        es      = { defs={} expr=v6081[16] }
        cs      = { defs={} expr=v6082[16] }
        ss      = { defs={} expr=v6083[16] }
        ds      = { defs={} expr=v6084[16] }
        fs      = { defs={} expr=v6085[16] }
        gs      = { defs={} expr=v6086[16] }
        cf      = { defs={} expr=v6087[1] }
        ?1      = { defs={} expr=v6088[1] }
        pf      = { defs={} expr=v6089[1] }
        ?3      = { defs={} expr=v6090[1] }
        af      = { defs={} expr=v6091[1] }
        ?5      = { defs={} expr=v6092[1] }
        zf      = { defs={} expr=v6093[1] }
        sf      = { defs={} expr=v6094[1] }
        tf      = { defs={} expr=v6095[1] }
        if      = { defs={} expr=v6096[1] }
        df      = { defs={} expr=v6097[1] }
        of      = { defs={} expr=v6098[1] }
        iopl0   = { defs={} expr=v6099[1] }
        iopl1   = { defs={} expr=v6100[1] }
        nt      = { defs={} expr=v6101[1] }
        ?15     = { defs={} expr=v6102[1] }
        rf      = { defs={} expr=v6103[1] }
        vm      = { defs={} expr=v6104[1] }
        ac      = { defs={} expr=v6105[1] }
        vif     = { defs={} expr=v6106[1] }
        vip     = { defs={} expr=v6107[1] }
        id      = { defs={} expr=v6108[1] }
        ?22     = { defs={} expr=v6109[1] }
        ?23     = { defs={} expr=v6110[1] }
        ?24     = { defs={} expr=v6111[1] }
        ?25     = { defs={} expr=v6112[1] }
        ?26     = { defs={} expr=v6113[1] }
        ?27     = { defs={} expr=v6114[1] }
        ?28     = { defs={} expr=v6115[1] }
        ?29     = { defs={} expr=v6116[1] }
        ?30     = { defs={} expr=v6117[1] }
        ?31     = { defs={} expr=v6118[1] }
        ip      = { defs={0x08048520} expr=0x08048521[32] }
    memory:
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 3[32]) }
          value = { defs={0x08048520} expr=(extract[8] 24[32] 32[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 2[32]) }
          value = { defs={0x08048520} expr=(extract[8] 16[32] 24[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 1[32]) }
          value = { defs={0x08048520} expr=(extract[8] 8[32] 16[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] v6077[32] -4[32]) }
          value = { defs={0x08048520} expr=(extract[8] 0[32] 8[32] v6078[32]) }
          flags = { }
    init mem:
0x8048521:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v6073[32] }
        cx      = { defs={} expr=v6074[32] }
        dx      = { defs={} expr=v6075[32] }
        bx      = { defs={} expr=v6076[32] }
        sp      = { defs={0x08048520} expr=(add[32] v6077[32] -4[32]) }
        bp      = { defs={0x08048520,0x08048521} expr=(add[32] v6077[32] -4[32]) }
        si      = { defs={} expr=v6079[32] }
        di      = { defs={} expr=v6080[32] }
        es      = { defs={} expr=v6081[16] }
        cs      = { defs={} expr=v6082[16] }
        ss      = { defs={} expr=v6083[16] }
        ds      = { defs={} expr=v6084[16] }
        fs      = { defs={} expr=v6085[16] }
        gs      = { defs={} expr=v6086[16] }
        cf      = { defs={} expr=v6087[1] }
        ?1      = { defs={} expr=v6088[1] }
        pf      = { defs={} expr=v6089[1] }
        ?3      = { defs={} expr=v6090[1] }
        af      = { defs={} expr=v6091[1] }
        ?5      = { defs={} expr=v6092[1] }
        zf      = { defs={} expr=v6093[1] }
        sf      = { defs={} expr=v6094[1] }
        tf      = { defs={} expr=v6095[1] }
        if      = { defs={} expr=v6096[1] }
        df      = { defs={} expr=v6097[1] }
        of      = { defs={} expr=v6098[1] }
        iopl0   = { defs={} expr=v6099[1] }
        iopl1   = { defs={} expr=v6100[1] }
        nt      = { defs={} expr=v6101[1] }
        ?15     = { defs={} expr=v6102[1] }
        rf      = { defs={} expr=v6103[1] }
        vm      = { defs={} expr=v6104[1] }
        ac      = { defs={} expr=v6105[1] }
        vif     = { defs={} expr=v6106[1] }
        vip     = { defs={} expr=v6107[1] }
        id      = { defs={} expr=v6108[1] }
        ?22     = { defs={} expr=v6109[1] }
        ?23     = { defs={} expr=v6110[1] }
        ?24     = { defs={} expr=v6111[1] }
        ?25     = { defs={} expr=v6112[1] }
        ?26     = { defs={} expr=v6113[1] }
        ?27     = { defs={} expr=v6114[1] }
        ?28     = { defs={} expr=v6115[1] }
        ?29     = { defs={} expr=v6116[1] }
        ?30     = { defs={} expr=v6117[1] }
        ?31     = { defs={} expr=v6118[1] }
        ip      = { defs={0x08048520,0x08048521} expr=0x08048523[32] }
    memory:
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 3[32]) }
          value = { defs={0x08048520} expr=(extract[8] 24[32] 32[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 2[32]) }
          value = { defs={0x08048520} expr=(extract[8] 16[32] 24[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 1[32]) }
          value = { defs={0x08048520} expr=(extract[8] 8[32] 16[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] v6077[32] -4[32]) }
          value = { defs={0x08048520} expr=(extract[8] 0[32] 8[32] v6078[32]) }
          flags = { }
    init mem:
0x8048523:push   edi
    registers:
        ax      = { defs={} expr=v6073[32] }
        cx      = { defs={} expr=v6074[32] }
        dx      = { defs={} expr=v6075[32] }
        bx      = { defs={} expr=v6076[32] }
        sp      = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v6077[32] -4[32]) -4[32]) }
        bp      = { defs={0x08048520,0x08048521} expr=(add[32] v6077[32] -4[32]) }
        si      = { defs={} expr=v6079[32] }
        di      = { defs={} expr=v6080[32] }
        es      = { defs={} expr=v6081[16] }
        cs      = { defs={} expr=v6082[16] }
        ss      = { defs={} expr=v6083[16] }
        ds      = { defs={} expr=v6084[16] }
        fs      = { defs={} expr=v6085[16] }
        gs      = { defs={} expr=v6086[16] }
        cf      = { defs={} expr=v6087[1] }
        ?1      = { defs={} expr=v6088[1] }
        pf      = { defs={} expr=v6089[1] }
        ?3      = { defs={} expr=v6090[1] }
        af      = { defs={} expr=v6091[1] }
        ?5      = { defs={} expr=v6092[1] }
        zf      = { defs={} expr=v6093[1] }
        sf      = { defs={} expr=v6094[1] }
        tf      = { defs={} expr=v6095[1] }
        if      = { defs={} expr=v6096[1] }
        df      = { defs={} expr=v6097[1] }
        of      = { defs={} expr=v6098[1] }
        iopl0   = { defs={} expr=v6099[1] }
        iopl1   = { defs={} expr=v6100[1] }
        nt      = { defs={} expr=v6101[1] }
        ?15     = { defs={} expr=v6102[1] }
        rf      = { defs={} expr=v6103[1] }
        vm      = { defs={} expr=v6104[1] }
        ac      = { defs={} expr=v6105[1] }
        vif     = { defs={} expr=v6106[1] }
        vip     = { defs={} expr=v6107[1] }
        id      = { defs={} expr=v6108[1] }
        ?22     = { defs={} expr=v6109[1] }
        ?23     = { defs={} expr=v6110[1] }
        ?24     = { defs={} expr=v6111[1] }
        ?25     = { defs={} expr=v6112[1] }
        ?26     = { defs={} expr=v6113[1] }
        ?27     = { defs={} expr=v6114[1] }
        ?28     = { defs={} expr=v6115[1] }
        ?29     = { defs={} expr=v6116[1] }
        ?30     = { defs={} expr=v6117[1] }
        ?31     = { defs={} expr=v6118[1] }
        ip      = { defs={0x08048520,0x08048521,0x08048523} expr=0x08048524[32] }
    memory:
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048523} expr=(extract[8] 24[32] 32[32] v6080[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048523} expr=(extract[8] 16[32] 24[32] v6080[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048523} expr=(extract[8] 8[32] 16[32] v6080[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v6077[32] -4[32]) -4[32]) }
          value = { defs={0x08048523} expr=(extract[8] 0[32] 8[32] v6080[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 3[32]) }
          value = { defs={0x08048520} expr=(extract[8] 24[32] 32[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 2[32]) }
          value = { defs={0x08048520} expr=(extract[8] 16[32] 24[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 1[32]) }
          value = { defs={0x08048520} expr=(extract[8] 8[32] 16[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] v6077[32] -4[32]) }
          value = { defs={0x08048520} expr=(extract[8] 0[32] 8[32] v6078[32]) }
          flags = { }
    init mem:
0x8048524:push   esi
    registers:
        ax      = { defs={} expr=v6073[32] }
        cx      = { defs={} expr=v6074[32] }
        dx      = { defs={} expr=v6075[32] }
        bx      = { defs={} expr=v6076[32] }
        sp      = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048520,0x08048521} expr=(add[32] v6077[32] -4[32]) }
        si      = { defs={} expr=v6079[32] }
        di      = { defs={} expr=v6080[32] }
        es      = { defs={} expr=v6081[16] }
        cs      = { defs={} expr=v6082[16] }
        ss      = { defs={} expr=v6083[16] }
        ds      = { defs={} expr=v6084[16] }
        fs      = { defs={} expr=v6085[16] }
        gs      = { defs={} expr=v6086[16] }
        cf      = { defs={} expr=v6087[1] }
        ?1      = { defs={} expr=v6088[1] }
        pf      = { defs={} expr=v6089[1] }
        ?3      = { defs={} expr=v6090[1] }
        af      = { defs={} expr=v6091[1] }
        ?5      = { defs={} expr=v6092[1] }
        zf      = { defs={} expr=v6093[1] }
        sf      = { defs={} expr=v6094[1] }
        tf      = { defs={} expr=v6095[1] }
        if      = { defs={} expr=v6096[1] }
        df      = { defs={} expr=v6097[1] }
        of      = { defs={} expr=v6098[1] }
        iopl0   = { defs={} expr=v6099[1] }
        iopl1   = { defs={} expr=v6100[1] }
        nt      = { defs={} expr=v6101[1] }
        ?15     = { defs={} expr=v6102[1] }
        rf      = { defs={} expr=v6103[1] }
        vm      = { defs={} expr=v6104[1] }
        ac      = { defs={} expr=v6105[1] }
        vif     = { defs={} expr=v6106[1] }
        vip     = { defs={} expr=v6107[1] }
        id      = { defs={} expr=v6108[1] }
        ?22     = { defs={} expr=v6109[1] }
        ?23     = { defs={} expr=v6110[1] }
        ?24     = { defs={} expr=v6111[1] }
        ?25     = { defs={} expr=v6112[1] }
        ?26     = { defs={} expr=v6113[1] }
        ?27     = { defs={} expr=v6114[1] }
        ?28     = { defs={} expr=v6115[1] }
        ?29     = { defs={} expr=v6116[1] }
        ?30     = { defs={} expr=v6117[1] }
        ?31     = { defs={} expr=v6118[1] }
        ip      = { defs={0x08048520,0x08048521,0x08048523,0x08048524} expr=0x08048525[32] }
    memory:
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048524} expr=(extract[8] 24[32] 32[32] v6079[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048524} expr=(extract[8] 16[32] 24[32] v6079[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048524} expr=(extract[8] 8[32] 16[32] v6079[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048524} expr=(extract[8] 0[32] 8[32] v6079[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048523} expr=(extract[8] 24[32] 32[32] v6080[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048523} expr=(extract[8] 16[32] 24[32] v6080[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048523} expr=(extract[8] 8[32] 16[32] v6080[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v6077[32] -4[32]) -4[32]) }
          value = { defs={0x08048523} expr=(extract[8] 0[32] 8[32] v6080[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 3[32]) }
          value = { defs={0x08048520} expr=(extract[8] 24[32] 32[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 2[32]) }
          value = { defs={0x08048520} expr=(extract[8] 16[32] 24[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 1[32]) }
          value = { defs={0x08048520} expr=(extract[8] 8[32] 16[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] v6077[32] -4[32]) }
          value = { defs={0x08048520} expr=(extract[8] 0[32] 8[32] v6078[32]) }
          flags = { }
    init mem:
0x8048525:push   ebx
    registers:
        ax      = { defs={} expr=v6073[32] }
        cx      = { defs={} expr=v6074[32] }
        dx      = { defs={} expr=v6075[32] }
        bx      = { defs={} expr=v6076[32] }
        sp      = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048520,0x08048521} expr=(add[32] v6077[32] -4[32]) }
        si      = { defs={} expr=v6079[32] }
        di      = { defs={} expr=v6080[32] }
        es      = { defs={} expr=v6081[16] }
        cs      = { defs={} expr=v6082[16] }
        ss      = { defs={} expr=v6083[16] }
        ds      = { defs={} expr=v6084[16] }
        fs      = { defs={} expr=v6085[16] }
        gs      = { defs={} expr=v6086[16] }
        cf      = { defs={} expr=v6087[1] }
        ?1      = { defs={} expr=v6088[1] }
        pf      = { defs={} expr=v6089[1] }
        ?3      = { defs={} expr=v6090[1] }
        af      = { defs={} expr=v6091[1] }
        ?5      = { defs={} expr=v6092[1] }
        zf      = { defs={} expr=v6093[1] }
        sf      = { defs={} expr=v6094[1] }
        tf      = { defs={} expr=v6095[1] }
        if      = { defs={} expr=v6096[1] }
        df      = { defs={} expr=v6097[1] }
        of      = { defs={} expr=v6098[1] }
        iopl0   = { defs={} expr=v6099[1] }
        iopl1   = { defs={} expr=v6100[1] }
        nt      = { defs={} expr=v6101[1] }
        ?15     = { defs={} expr=v6102[1] }
        rf      = { defs={} expr=v6103[1] }
        vm      = { defs={} expr=v6104[1] }
        ac      = { defs={} expr=v6105[1] }
        vif     = { defs={} expr=v6106[1] }
        vip     = { defs={} expr=v6107[1] }
        id      = { defs={} expr=v6108[1] }
        ?22     = { defs={} expr=v6109[1] }
        ?23     = { defs={} expr=v6110[1] }
        ?24     = { defs={} expr=v6111[1] }
        ?25     = { defs={} expr=v6112[1] }
        ?26     = { defs={} expr=v6113[1] }
        ?27     = { defs={} expr=v6114[1] }
        ?28     = { defs={} expr=v6115[1] }
        ?29     = { defs={} expr=v6116[1] }
        ?30     = { defs={} expr=v6117[1] }
        ?31     = { defs={} expr=v6118[1] }
        ip      = { defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525} expr=0x08048526[32] }
    memory:
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048525} expr=(extract[8] 24[32] 32[32] v6076[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048525} expr=(extract[8] 16[32] 24[32] v6076[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048525} expr=(extract[8] 8[32] 16[32] v6076[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048525} expr=(extract[8] 0[32] 8[32] v6076[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048524} expr=(extract[8] 24[32] 32[32] v6079[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048524} expr=(extract[8] 16[32] 24[32] v6079[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048524} expr=(extract[8] 8[32] 16[32] v6079[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048524} expr=(extract[8] 0[32] 8[32] v6079[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048523} expr=(extract[8] 24[32] 32[32] v6080[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048523} expr=(extract[8] 16[32] 24[32] v6080[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048523} expr=(extract[8] 8[32] 16[32] v6080[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v6077[32] -4[32]) -4[32]) }
          value = { defs={0x08048523} expr=(extract[8] 0[32] 8[32] v6080[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 3[32]) }
          value = { defs={0x08048520} expr=(extract[8] 24[32] 32[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 2[32]) }
          value = { defs={0x08048520} expr=(extract[8] 16[32] 24[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 1[32]) }
          value = { defs={0x08048520} expr=(extract[8] 8[32] 16[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] v6077[32] -4[32]) }
          value = { defs={0x08048520} expr=(extract[8] 0[32] 8[32] v6078[32]) }
          flags = { }
    init mem:
0x8048526:sub    esp, 0x0c
    registers:
        ax      = { defs={} expr=v6073[32] }
        cx      = { defs={} expr=v6074[32] }
        dx      = { defs={} expr=v6075[32] }
        bx      = { defs={} expr=v6076[32] }
        sp      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) }
        bp      = { defs={0x08048520,0x08048521} expr=(add[32] v6077[32] -4[32]) }
        si      = { defs={} expr=v6079[32] }
        di      = { defs={} expr=v6080[32] }
        es      = { defs={} expr=v6081[16] }
        cs      = { defs={} expr=v6082[16] }
        ss      = { defs={} expr=v6083[16] }
        ds      = { defs={} expr=v6084[16] }
        fs      = { defs={} expr=v6085[16] }
        gs      = { defs={} expr=v6086[16] }
        cf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?1      = { defs={} expr=v6088[1] }
        pf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))))) }
        ?3      = { defs={} expr=v6090[1] }
        af      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?5      = { defs={} expr=v6092[1] }
        zf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        sf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        tf      = { defs={} expr=v6095[1] }
        if      = { defs={} expr=v6096[1] }
        df      = { defs={} expr=v6097[1] }
        of      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        iopl0   = { defs={} expr=v6099[1] }
        iopl1   = { defs={} expr=v6100[1] }
        nt      = { defs={} expr=v6101[1] }
        ?15     = { defs={} expr=v6102[1] }
        rf      = { defs={} expr=v6103[1] }
        vm      = { defs={} expr=v6104[1] }
        ac      = { defs={} expr=v6105[1] }
        vif     = { defs={} expr=v6106[1] }
        vip     = { defs={} expr=v6107[1] }
        id      = { defs={} expr=v6108[1] }
        ?22     = { defs={} expr=v6109[1] }
        ?23     = { defs={} expr=v6110[1] }
        ?24     = { defs={} expr=v6111[1] }
        ?25     = { defs={} expr=v6112[1] }
        ?26     = { defs={} expr=v6113[1] }
        ?27     = { defs={} expr=v6114[1] }
        ?28     = { defs={} expr=v6115[1] }
        ?29     = { defs={} expr=v6116[1] }
        ?30     = { defs={} expr=v6117[1] }
        ?31     = { defs={} expr=v6118[1] }
        ip      = { defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525,0x08048526} expr=0x08048529[32] }
    memory:
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048525} expr=(extract[8] 24[32] 32[32] v6076[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048525} expr=(extract[8] 16[32] 24[32] v6076[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048525} expr=(extract[8] 8[32] 16[32] v6076[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048525} expr=(extract[8] 0[32] 8[32] v6076[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048524} expr=(extract[8] 24[32] 32[32] v6079[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048524} expr=(extract[8] 16[32] 24[32] v6079[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048524} expr=(extract[8] 8[32] 16[32] v6079[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048524} expr=(extract[8] 0[32] 8[32] v6079[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048523} expr=(extract[8] 24[32] 32[32] v6080[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048523} expr=(extract[8] 16[32] 24[32] v6080[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048523} expr=(extract[8] 8[32] 16[32] v6080[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v6077[32] -4[32]) -4[32]) }
          value = { defs={0x08048523} expr=(extract[8] 0[32] 8[32] v6080[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 3[32]) }
          value = { defs={0x08048520} expr=(extract[8] 24[32] 32[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 2[32]) }
          value = { defs={0x08048520} expr=(extract[8] 16[32] 24[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 1[32]) }
          value = { defs={0x08048520} expr=(extract[8] 8[32] 16[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] v6077[32] -4[32]) }
          value = { defs={0x08048520} expr=(extract[8] 0[32] 8[32] v6078[32]) }
          flags = { }
    init mem:
0x8048529:call   0x0804852e<<Insn>>
    registers:
        ax      = { defs={} expr=v6073[32] }
        cx      = { defs={} expr=v6074[32] }
        dx      = { defs={} expr=v6075[32] }
        bx      = { defs={} expr=v6076[32] }
        sp      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) }
        bp      = { defs={0x08048520,0x08048521} expr=(add[32] v6077[32] -4[32]) }
        si      = { defs={} expr=v6079[32] }
        di      = { defs={} expr=v6080[32] }
        es      = { defs={} expr=v6081[16] }
        cs      = { defs={} expr=v6082[16] }
        ss      = { defs={} expr=v6083[16] }
        ds      = { defs={} expr=v6084[16] }
        fs      = { defs={} expr=v6085[16] }
        gs      = { defs={} expr=v6086[16] }
        cf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?1      = { defs={} expr=v6088[1] }
        pf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))))) }
        ?3      = { defs={} expr=v6090[1] }
        af      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?5      = { defs={} expr=v6092[1] }
        zf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        sf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        tf      = { defs={} expr=v6095[1] }
        if      = { defs={} expr=v6096[1] }
        df      = { defs={} expr=v6097[1] }
        of      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        iopl0   = { defs={} expr=v6099[1] }
        iopl1   = { defs={} expr=v6100[1] }
        nt      = { defs={} expr=v6101[1] }
        ?15     = { defs={} expr=v6102[1] }
        rf      = { defs={} expr=v6103[1] }
        vm      = { defs={} expr=v6104[1] }
        ac      = { defs={} expr=v6105[1] }
        vif     = { defs={} expr=v6106[1] }
        vip     = { defs={} expr=v6107[1] }
        id      = { defs={} expr=v6108[1] }
        ?22     = { defs={} expr=v6109[1] }
        ?23     = { defs={} expr=v6110[1] }
        ?24     = { defs={} expr=v6111[1] }
        ?25     = { defs={} expr=v6112[1] }
        ?26     = { defs={} expr=v6113[1] }
        ?27     = { defs={} expr=v6114[1] }
        ?28     = { defs={} expr=v6115[1] }
        ?29     = { defs={} expr=v6116[1] }
        ?30     = { defs={} expr=v6117[1] }
        ?31     = { defs={} expr=v6118[1] }
        ip      = { defs={0x08048529} expr=0x0804852e[32] }
    memory:
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 3[32]) }
          value = { defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=8[8] }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 2[32]) }
          value = { defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=4[8] }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 1[32]) }
          value = { defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=-123[8] }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) }
          value = { defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=46[8] }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048525} expr=(extract[8] 24[32] 32[32] v6076[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048525} expr=(extract[8] 16[32] 24[32] v6076[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048525} expr=(extract[8] 8[32] 16[32] v6076[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048525} expr=(extract[8] 0[32] 8[32] v6076[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048524} expr=(extract[8] 24[32] 32[32] v6079[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048524} expr=(extract[8] 16[32] 24[32] v6079[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048524} expr=(extract[8] 8[32] 16[32] v6079[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048524} expr=(extract[8] 0[32] 8[32] v6079[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048523} expr=(extract[8] 24[32] 32[32] v6080[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048523} expr=(extract[8] 16[32] 24[32] v6080[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v6077[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048523} expr=(extract[8] 8[32] 16[32] v6080[32]) }
          flags = { }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v6077[32] -4[32]) -4[32]) }
          value = { defs={0x08048523} expr=(extract[8] 0[32] 8[32] v6080[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 3[32]) }
          value = { defs={0x08048520} expr=(extract[8] 24[32] 32[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 2[32]) }
          value = { defs={0x08048520} expr=(extract[8] 16[32] 24[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] (add[32] v6077[32] -4[32]) 1[32]) }
          value = { defs={0x08048520} expr=(extract[8] 8[32] 16[32] v6078[32]) }
          flags = { }
        address = { defs={0x08048520} expr=(add[32] v6077[32] -4[32]) }
          value = { defs={0x08048520} expr=(extract[8] 0[32] 8[32] v6078[32]) }
          flags = { }
    init mem:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
    registers:
        ax      = { defs={} expr=v6301[32] }
        cx      = { defs={} expr=v6302[32] }
        dx      = { defs={} expr=v6303[32] }
        bx      = { defs={0x0804852e} expr=v6354[32] }
        sp      = { defs={0x0804852e} expr=(add[32] v6305[32] 4[32]) }
        bp      = { defs={} expr=v6306[32] }
        si      = { defs={} expr=v6307[32] }
        di      = { defs={} expr=v6308[32] }
        es      = { defs={} expr=v6309[16] }
        cs      = { defs={} expr=v6310[16] }
        ss      = { defs={} expr=v6311[16] }
        ds      = { defs={} expr=v6312[16] }
        fs      = { defs={} expr=v6313[16] }
        gs      = { defs={} expr=v6314[16] }
        cf      = { defs={} expr=v6315[1] }
        ?1      = { defs={} expr=v6316[1] }
        pf      = { defs={} expr=v6317[1] }
        ?3      = { defs={} expr=v6318[1] }
        af      = { defs={} expr=v6319[1] }
        ?5      = { defs={} expr=v6320[1] }
        zf      = { defs={} expr=v6321[1] }
        sf      = { defs={} expr=v6322[1] }
        tf      = { defs={} expr=v6323[1] }
        if      = { defs={} expr=v6324[1] }
        df      = { defs={} expr=v6325[1] }
        of      = { defs={} expr=v6326[1] }
        iopl0   = { defs={} expr=v6327[1] }
        iopl1   = { defs={} expr=v6328[1] }
        nt      = { defs={} expr=v6329[1] }
        ?15     = { defs={} expr=v6330[1] }
        rf      = { defs={} expr=v6331[1] }
        vm      = { defs={} expr=v6332[1] }
        ac      = { defs={} expr=v6333[1] }
        vif     = { defs={} expr=v6334[1] }
        vip     = { defs={} expr=v6335[1] }
        id      = { defs={} expr=v6336[1] }
        ?22     = { defs={} expr=v6337[1] }
        ?23     = { defs={} expr=v6338[1] }
        ?24     = { defs={} expr=v6339[1] }
        ?25     = { defs={} expr=v6340[1] }
        ?26     = { defs={} expr=v6341[1] }
        ?27     = { defs={} expr=v6342[1] }
        ?28     = { defs={} expr=v6343[1] }
        ?29     = { defs={} expr=v6344[1] }
        ?30     = { defs={} expr=v6345[1] }
        ?31     = { defs={} expr=v6346[1] }
        ip      = { defs={0x0804852e} expr=0x0804852f[32] }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v6305[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v6305[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v6305[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=v6305[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v6354[32]) }
          flags = { rdonly }
0x804852f:add    ebx, 0x0000119a
    registers:
        ax      = { defs={} expr=v6301[32] }
        cx      = { defs={} expr=v6302[32] }
        dx      = { defs={} expr=v6303[32] }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v6354[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v6305[32] 4[32]) }
        bp      = { defs={} expr=v6306[32] }
        si      = { defs={} expr=v6307[32] }
        di      = { defs={} expr=v6308[32] }
        es      = { defs={} expr=v6309[16] }
        cs      = { defs={} expr=v6310[16] }
        ss      = { defs={} expr=v6311[16] }
        ds      = { defs={} expr=v6312[16] }
        fs      = { defs={} expr=v6313[16] }
        gs      = { defs={} expr=v6314[16] }
        cf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6354[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v6354[32]) 4506[33]))))) }
        ?1      = { defs={} expr=v6316[1] }
        pf      = { defs={0x0804852e,0x0804852f} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32]))))))) }
        ?3      = { defs={} expr=v6318[1] }
        af      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6354[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v6354[32]) 4506[33]))))) }
        ?5      = { defs={} expr=v6320[1] }
        zf      = { defs={0x0804852e,0x0804852f} expr=(zerop[1] (add[32] v6354[32] 4506[32])) }
        sf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (add[32] v6354[32] 4506[32])) }
        tf      = { defs={} expr=v6323[1] }
        if      = { defs={} expr=v6324[1] }
        df      = { defs={} expr=v6325[1] }
        of      = { defs={0x0804852e,0x0804852f} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6354[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v6354[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6354[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v6354[32]) 4506[33])))))) }
        iopl0   = { defs={} expr=v6327[1] }
        iopl1   = { defs={} expr=v6328[1] }
        nt      = { defs={} expr=v6329[1] }
        ?15     = { defs={} expr=v6330[1] }
        rf      = { defs={} expr=v6331[1] }
        vm      = { defs={} expr=v6332[1] }
        ac      = { defs={} expr=v6333[1] }
        vif     = { defs={} expr=v6334[1] }
        vip     = { defs={} expr=v6335[1] }
        id      = { defs={} expr=v6336[1] }
        ?22     = { defs={} expr=v6337[1] }
        ?23     = { defs={} expr=v6338[1] }
        ?24     = { defs={} expr=v6339[1] }
        ?25     = { defs={} expr=v6340[1] }
        ?26     = { defs={} expr=v6341[1] }
        ?27     = { defs={} expr=v6342[1] }
        ?28     = { defs={} expr=v6343[1] }
        ?29     = { defs={} expr=v6344[1] }
        ?30     = { defs={} expr=v6345[1] }
        ?31     = { defs={} expr=v6346[1] }
        ip      = { defs={0x0804852e,0x0804852f} expr=0x08048535[32] }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v6305[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v6305[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v6305[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=v6305[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v6354[32]) }
          flags = { rdonly }
0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535} expr=(add[32] (add[32] v6354[32] 4506[32]) -224[32]) }
        cx      = { defs={} expr=v6302[32] }
        dx      = { defs={} expr=v6303[32] }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v6354[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v6305[32] 4[32]) }
        bp      = { defs={} expr=v6306[32] }
        si      = { defs={} expr=v6307[32] }
        di      = { defs={} expr=v6308[32] }
        es      = { defs={} expr=v6309[16] }
        cs      = { defs={} expr=v6310[16] }
        ss      = { defs={} expr=v6311[16] }
        ds      = { defs={} expr=v6312[16] }
        fs      = { defs={} expr=v6313[16] }
        gs      = { defs={} expr=v6314[16] }
        cf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6354[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v6354[32]) 4506[33]))))) }
        ?1      = { defs={} expr=v6316[1] }
        pf      = { defs={0x0804852e,0x0804852f} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32]))))))) }
        ?3      = { defs={} expr=v6318[1] }
        af      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6354[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v6354[32]) 4506[33]))))) }
        ?5      = { defs={} expr=v6320[1] }
        zf      = { defs={0x0804852e,0x0804852f} expr=(zerop[1] (add[32] v6354[32] 4506[32])) }
        sf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (add[32] v6354[32] 4506[32])) }
        tf      = { defs={} expr=v6323[1] }
        if      = { defs={} expr=v6324[1] }
        df      = { defs={} expr=v6325[1] }
        of      = { defs={0x0804852e,0x0804852f} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6354[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v6354[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6354[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v6354[32]) 4506[33])))))) }
        iopl0   = { defs={} expr=v6327[1] }
        iopl1   = { defs={} expr=v6328[1] }
        nt      = { defs={} expr=v6329[1] }
        ?15     = { defs={} expr=v6330[1] }
        rf      = { defs={} expr=v6331[1] }
        vm      = { defs={} expr=v6332[1] }
        ac      = { defs={} expr=v6333[1] }
        vif     = { defs={} expr=v6334[1] }
        vip     = { defs={} expr=v6335[1] }
        id      = { defs={} expr=v6336[1] }
        ?22     = { defs={} expr=v6337[1] }
        ?23     = { defs={} expr=v6338[1] }
        ?24     = { defs={} expr=v6339[1] }
        ?25     = { defs={} expr=v6340[1] }
        ?26     = { defs={} expr=v6341[1] }
        ?27     = { defs={} expr=v6342[1] }
        ?28     = { defs={} expr=v6343[1] }
        ?29     = { defs={} expr=v6344[1] }
        ?30     = { defs={} expr=v6345[1] }
        ?31     = { defs={} expr=v6346[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535} expr=0x0804853b[32] }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v6305[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v6305[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v6305[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=v6305[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v6354[32]) }
          flags = { rdonly }
0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535} expr=(add[32] (add[32] v6354[32] 4506[32]) -224[32]) }
        cx      = { defs={} expr=v6302[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v6354[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v6354[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v6305[32] 4[32]) }
        bp      = { defs={} expr=v6306[32] }
        si      = { defs={} expr=v6307[32] }
        di      = { defs={} expr=v6308[32] }
        es      = { defs={} expr=v6309[16] }
        cs      = { defs={} expr=v6310[16] }
        ss      = { defs={} expr=v6311[16] }
        ds      = { defs={} expr=v6312[16] }
        fs      = { defs={} expr=v6313[16] }
        gs      = { defs={} expr=v6314[16] }
        cf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6354[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v6354[32]) 4506[33]))))) }
        ?1      = { defs={} expr=v6316[1] }
        pf      = { defs={0x0804852e,0x0804852f} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v6354[32] 4506[32]))))))) }
        ?3      = { defs={} expr=v6318[1] }
        af      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6354[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v6354[32]) 4506[33]))))) }
        ?5      = { defs={} expr=v6320[1] }
        zf      = { defs={0x0804852e,0x0804852f} expr=(zerop[1] (add[32] v6354[32] 4506[32])) }
        sf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (add[32] v6354[32] 4506[32])) }
        tf      = { defs={} expr=v6323[1] }
        if      = { defs={} expr=v6324[1] }
        df      = { defs={} expr=v6325[1] }
        of      = { defs={0x0804852e,0x0804852f} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6354[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v6354[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6354[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v6354[32]) 4506[33])))))) }
        iopl0   = { defs={} expr=v6327[1] }
        iopl1   = { defs={} expr=v6328[1] }
        nt      = { defs={} expr=v6329[1] }
        ?15     = { defs={} expr=v6330[1] }
        rf      = { defs={} expr=v6331[1] }
        vm      = { defs={} expr=v6332[1] }
        ac      = { defs={} expr=v6333[1] }
        vif     = { defs={} expr=v6334[1] }
        vip     = { defs={} expr=v6335[1] }
        id      = { defs={} expr=v6336[1] }
        ?22     = { defs={} expr=v6337[1] }
        ?23     = { defs={} expr=v6338[1] }
        ?24     = { defs={} expr=v6339[1] }
        ?25     = { defs={} expr=v6340[1] }
        ?26     = { defs={} expr=v6341[1] }
        ?27     = { defs={} expr=v6342[1] }
        ?28     = { defs={} expr=v6343[1] }
        ?29     = { defs={} expr=v6344[1] }
        ?30     = { defs={} expr=v6345[1] }
        ?31     = { defs={} expr=v6346[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b} expr=0x08048541[32] }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v6305[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v6305[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v6305[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=v6305[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v6354[32]) }
          flags = { rdonly }
0x8048541:sub    eax, edx
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])) }
        cx      = { defs={} expr=v6302[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v6354[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v6354[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v6305[32] 4[32]) }
        bp      = { defs={} expr=v6306[32] }
        si      = { defs={} expr=v6307[32] }
        di      = { defs={} expr=v6308[32] }
        es      = { defs={} expr=v6309[16] }
        cs      = { defs={} expr=v6310[16] }
        ss      = { defs={} expr=v6311[16] }
        ds      = { defs={} expr=v6312[16] }
        fs      = { defs={} expr=v6313[16] }
        gs      = { defs={} expr=v6314[16] }
        cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]))) 1[33]))))))) }
        ?1      = { defs={} expr=v6316[1] }
        pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))))))) }
        ?3      = { defs={} expr=v6318[1] }
        af      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]))) 1[33]))))))) }
        ?5      = { defs={} expr=v6320[1] }
        zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(zerop[1] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) }
        sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) }
        tf      = { defs={} expr=v6323[1] }
        if      = { defs={} expr=v6324[1] }
        df      = { defs={} expr=v6325[1] }
        of      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]))) 1[33]))))))) }
        iopl0   = { defs={} expr=v6327[1] }
        iopl1   = { defs={} expr=v6328[1] }
        nt      = { defs={} expr=v6329[1] }
        ?15     = { defs={} expr=v6330[1] }
        rf      = { defs={} expr=v6331[1] }
        vm      = { defs={} expr=v6332[1] }
        ac      = { defs={} expr=v6333[1] }
        vif     = { defs={} expr=v6334[1] }
        vip     = { defs={} expr=v6335[1] }
        id      = { defs={} expr=v6336[1] }
        ?22     = { defs={} expr=v6337[1] }
        ?23     = { defs={} expr=v6338[1] }
        ?24     = { defs={} expr=v6339[1] }
        ?25     = { defs={} expr=v6340[1] }
        ?26     = { defs={} expr=v6341[1] }
        ?27     = { defs={} expr=v6342[1] }
        ?28     = { defs={} expr=v6343[1] }
        ?29     = { defs={} expr=v6344[1] }
        ?30     = { defs={} expr=v6345[1] }
        ?31     = { defs={} expr=v6346[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=0x08048543[32] }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v6305[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v6305[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v6305[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=v6305[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v6354[32]) }
          flags = { rdonly }
0x8048543:sar    eax, 0x02
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) }
        cx      = { defs={} expr=v6302[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v6354[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v6354[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v6305[32] 4[32]) }
        bp      = { defs={} expr=v6306[32] }
        si      = { defs={} expr=v6307[32] }
        di      = { defs={} expr=v6308[32] }
        es      = { defs={} expr=v6309[16] }
        cs      = { defs={} expr=v6310[16] }
        ss      = { defs={} expr=v6311[16] }
        ds      = { defs={} expr=v6312[16] }
        fs      = { defs={} expr=v6313[16] }
        gs      = { defs={} expr=v6314[16] }
        cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
        ?1      = { defs={} expr=v6316[1] }
        pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))))))))) }
        ?3      = { defs={} expr=v6318[1] }
        af      = { defs={0x08048543} expr=v6494[1] }
        ?5      = { defs={} expr=v6320[1] }
        zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
        sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
        tf      = { defs={} expr=v6323[1] }
        if      = { defs={} expr=v6324[1] }
        df      = { defs={} expr=v6325[1] }
        of      = { defs={0x08048543} expr=v6509[1] }
        iopl0   = { defs={} expr=v6327[1] }
        iopl1   = { defs={} expr=v6328[1] }
        nt      = { defs={} expr=v6329[1] }
        ?15     = { defs={} expr=v6330[1] }
        rf      = { defs={} expr=v6331[1] }
        vm      = { defs={} expr=v6332[1] }
        ac      = { defs={} expr=v6333[1] }
        vif     = { defs={} expr=v6334[1] }
        vip     = { defs={} expr=v6335[1] }
        id      = { defs={} expr=v6336[1] }
        ?22     = { defs={} expr=v6337[1] }
        ?23     = { defs={} expr=v6338[1] }
        ?24     = { defs={} expr=v6339[1] }
        ?25     = { defs={} expr=v6340[1] }
        ?26     = { defs={} expr=v6341[1] }
        ?27     = { defs={} expr=v6342[1] }
        ?28     = { defs={} expr=v6343[1] }
        ?29     = { defs={} expr=v6344[1] }
        ?30     = { defs={} expr=v6345[1] }
        ?31     = { defs={} expr=v6346[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=0x08048546[32] }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v6305[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v6305[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v6305[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=v6305[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v6354[32]) }
          flags = { rdonly }
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) }
        cx      = { defs={} expr=v6302[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v6354[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v6354[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v6305[32] 4[32]) }
        bp      = { defs={} expr=v6306[32] }
        si      = { defs={} expr=v6307[32] }
        di      = { defs={} expr=v6308[32] }
        es      = { defs={} expr=v6309[16] }
        cs      = { defs={} expr=v6310[16] }
        ss      = { defs={} expr=v6311[16] }
        ds      = { defs={} expr=v6312[16] }
        fs      = { defs={} expr=v6313[16] }
        gs      = { defs={} expr=v6314[16] }
        cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
        ?1      = { defs={} expr=v6316[1] }
        pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))))))))) }
        ?3      = { defs={} expr=v6318[1] }
        af      = { defs={0x08048543} expr=v6494[1] }
        ?5      = { defs={} expr=v6320[1] }
        zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
        sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
        tf      = { defs={} expr=v6323[1] }
        if      = { defs={} expr=v6324[1] }
        df      = { defs={} expr=v6325[1] }
        of      = { defs={0x08048543} expr=v6509[1] }
        iopl0   = { defs={} expr=v6327[1] }
        iopl1   = { defs={} expr=v6328[1] }
        nt      = { defs={} expr=v6329[1] }
        ?15     = { defs={} expr=v6330[1] }
        rf      = { defs={} expr=v6331[1] }
        vm      = { defs={} expr=v6332[1] }
        ac      = { defs={} expr=v6333[1] }
        vif     = { defs={} expr=v6334[1] }
        vip     = { defs={} expr=v6335[1] }
        id      = { defs={} expr=v6336[1] }
        ?22     = { defs={} expr=v6337[1] }
        ?23     = { defs={} expr=v6338[1] }
        ?24     = { defs={} expr=v6339[1] }
        ?25     = { defs={} expr=v6340[1] }
        ?26     = { defs={} expr=v6341[1] }
        ?27     = { defs={} expr=v6342[1] }
        ?28     = { defs={} expr=v6343[1] }
        ?29     = { defs={} expr=v6344[1] }
        ?30     = { defs={} expr=v6345[1] }
        ?31     = { defs={} expr=v6346[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=0x08048549[32] }
    memory:
        address = { defs={0x08048546} expr=(add[32] (add[32] v6306[32] -16[32]) 3[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
          flags = { }
        address = { defs={0x08048546} expr=(add[32] (add[32] v6306[32] -16[32]) 2[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
          flags = { }
        address = { defs={0x08048546} expr=(add[32] (add[32] v6306[32] -16[32]) 1[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
          flags = { }
        address = { defs={0x08048546} expr=(add[32] v6306[32] -16[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
          flags = { }
    init mem:
        address = { defs={} expr=(add[32] v6305[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v6305[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v6305[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=v6305[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v6354[32]) }
          flags = { rdonly }
0x8048549:dec    eax
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) }
        cx      = { defs={} expr=v6302[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v6354[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v6354[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v6305[32] 4[32]) }
        bp      = { defs={} expr=v6306[32] }
        si      = { defs={} expr=v6307[32] }
        di      = { defs={} expr=v6308[32] }
        es      = { defs={} expr=v6309[16] }
        cs      = { defs={} expr=v6310[16] }
        ss      = { defs={} expr=v6311[16] }
        ds      = { defs={} expr=v6312[16] }
        fs      = { defs={} expr=v6313[16] }
        gs      = { defs={} expr=v6314[16] }
        cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
        ?1      = { defs={} expr=v6316[1] }
        pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]))))))) }
        ?3      = { defs={} expr=v6318[1] }
        af      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33])))))) }
        ?5      = { defs={} expr=v6320[1] }
        zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(zerop[1] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32])) }
        sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(extract[1] 31[32] 32[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32])) }
        tf      = { defs={} expr=v6323[1] }
        if      = { defs={} expr=v6324[1] }
        df      = { defs={} expr=v6325[1] }
        of      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33])))))) }
        iopl0   = { defs={} expr=v6327[1] }
        iopl1   = { defs={} expr=v6328[1] }
        nt      = { defs={} expr=v6329[1] }
        ?15     = { defs={} expr=v6330[1] }
        rf      = { defs={} expr=v6331[1] }
        vm      = { defs={} expr=v6332[1] }
        ac      = { defs={} expr=v6333[1] }
        vif     = { defs={} expr=v6334[1] }
        vip     = { defs={} expr=v6335[1] }
        id      = { defs={} expr=v6336[1] }
        ?22     = { defs={} expr=v6337[1] }
        ?23     = { defs={} expr=v6338[1] }
        ?24     = { defs={} expr=v6339[1] }
        ?25     = { defs={} expr=v6340[1] }
        ?26     = { defs={} expr=v6341[1] }
        ?27     = { defs={} expr=v6342[1] }
        ?28     = { defs={} expr=v6343[1] }
        ?29     = { defs={} expr=v6344[1] }
        ?30     = { defs={} expr=v6345[1] }
        ?31     = { defs={} expr=v6346[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546,0x08048549} expr=0x0804854a[32] }
    memory:
        address = { defs={0x08048546} expr=(add[32] (add[32] v6306[32] -16[32]) 3[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
          flags = { }
        address = { defs={0x08048546} expr=(add[32] (add[32] v6306[32] -16[32]) 2[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
          flags = { }
        address = { defs={0x08048546} expr=(add[32] (add[32] v6306[32] -16[32]) 1[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
          flags = { }
        address = { defs={0x08048546} expr=(add[32] v6306[32] -16[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
          flags = { }
    init mem:
        address = { defs={} expr=(add[32] v6305[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v6305[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v6305[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=v6305[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v6354[32]) }
          flags = { rdonly }
0x804854a:cmp    eax, 0xff<-0x01>
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) }
        cx      = { defs={} expr=v6302[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v6354[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v6354[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v6305[32] 4[32]) }
        bp      = { defs={} expr=v6306[32] }
        si      = { defs={} expr=v6307[32] }
        di      = { defs={} expr=v6308[32] }
        es      = { defs={} expr=v6309[16] }
        cs      = { defs={} expr=v6310[16] }
        ss      = { defs={} expr=v6311[16] }
        ds      = { defs={} expr=v6312[16] }
        fs      = { defs={} expr=v6313[16] }
        gs      = { defs={} expr=v6314[16] }
        cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
        ?1      = { defs={} expr=v6316[1] }
        pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))))) }
        ?3      = { defs={} expr=v6318[1] }
        af      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
        ?5      = { defs={} expr=v6320[1] }
        zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) }
        sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) }
        tf      = { defs={} expr=v6323[1] }
        if      = { defs={} expr=v6324[1] }
        df      = { defs={} expr=v6325[1] }
        of      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
        iopl0   = { defs={} expr=v6327[1] }
        iopl1   = { defs={} expr=v6328[1] }
        nt      = { defs={} expr=v6329[1] }
        ?15     = { defs={} expr=v6330[1] }
        rf      = { defs={} expr=v6331[1] }
        vm      = { defs={} expr=v6332[1] }
        ac      = { defs={} expr=v6333[1] }
        vif     = { defs={} expr=v6334[1] }
        vip     = { defs={} expr=v6335[1] }
        id      = { defs={} expr=v6336[1] }
        ?22     = { defs={} expr=v6337[1] }
        ?23     = { defs={} expr=v6338[1] }
        ?24     = { defs={} expr=v6339[1] }
        ?25     = { defs={} expr=v6340[1] }
        ?26     = { defs={} expr=v6341[1] }
        ?27     = { defs={} expr=v6342[1] }
        ?28     = { defs={} expr=v6343[1] }
        ?29     = { defs={} expr=v6344[1] }
        ?30     = { defs={} expr=v6345[1] }
        ?31     = { defs={} expr=v6346[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546,0x08048549,0x0804854a} expr=0x0804854d[32] }
    memory:
        address = { defs={0x08048546} expr=(add[32] (add[32] v6306[32] -16[32]) 3[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
          flags = { }
        address = { defs={0x08048546} expr=(add[32] (add[32] v6306[32] -16[32]) 2[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
          flags = { }
        address = { defs={0x08048546} expr=(add[32] (add[32] v6306[32] -16[32]) 1[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
          flags = { }
        address = { defs={0x08048546} expr=(add[32] v6306[32] -16[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
          flags = { }
    init mem:
        address = { defs={} expr=(add[32] v6305[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v6305[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v6305[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=v6305[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v6354[32]) }
          flags = { rdonly }
0x804854d:je     0x0804856b<<Insn>>
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) }
        cx      = { defs={} expr=v6302[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v6354[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v6354[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v6305[32] 4[32]) }
        bp      = { defs={} expr=v6306[32] }
        si      = { defs={} expr=v6307[32] }
        di      = { defs={} expr=v6308[32] }
        es      = { defs={} expr=v6309[16] }
        cs      = { defs={} expr=v6310[16] }
        ss      = { defs={} expr=v6311[16] }
        ds      = { defs={} expr=v6312[16] }
        fs      = { defs={} expr=v6313[16] }
        gs      = { defs={} expr=v6314[16] }
        cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
        ?1      = { defs={} expr=v6316[1] }
        pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))))) }
        ?3      = { defs={} expr=v6318[1] }
        af      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
        ?5      = { defs={} expr=v6320[1] }
        zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) }
        sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) }
        tf      = { defs={} expr=v6323[1] }
        if      = { defs={} expr=v6324[1] }
        df      = { defs={} expr=v6325[1] }
        of      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
        iopl0   = { defs={} expr=v6327[1] }
        iopl1   = { defs={} expr=v6328[1] }
        nt      = { defs={} expr=v6329[1] }
        ?15     = { defs={} expr=v6330[1] }
        rf      = { defs={} expr=v6331[1] }
        vm      = { defs={} expr=v6332[1] }
        ac      = { defs={} expr=v6333[1] }
        vif     = { defs={} expr=v6334[1] }
        vip     = { defs={} expr=v6335[1] }
        id      = { defs={} expr=v6336[1] }
        ?22     = { defs={} expr=v6337[1] }
        ?23     = { defs={} expr=v6338[1] }
        ?24     = { defs={} expr=v6339[1] }
        ?25     = { defs={} expr=v6340[1] }
        ?26     = { defs={} expr=v6341[1] }
        ?27     = { defs={} expr=v6342[1] }
        ?28     = { defs={} expr=v6343[1] }
        ?29     = { defs={} expr=v6344[1] }
        ?30     = { defs={} expr=v6345[1] }
        ?31     = { defs={} expr=v6346[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546,0x08048549,0x0804854a,0x0804854d} expr=(ite[32] (zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) 0x0804856b[32] 0x0804854f[32]) }
    memory:
        address = { defs={0x08048546} expr=(add[32] (add[32] v6306[32] -16[32]) 3[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
          flags = { }
        address = { defs={0x08048546} expr=(add[32] (add[32] v6306[32] -16[32]) 2[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
          flags = { }
        address = { defs={0x08048546} expr=(add[32] (add[32] v6306[32] -16[32]) 1[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
          flags = { }
        address = { defs={0x08048546} expr=(add[32] v6306[32] -16[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v6354[32] 4506[32]) -224[32])) 1[32])))) }
          flags = { }
    init mem:
        address = { defs={} expr=(add[32] v6305[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v6305[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v6305[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v6354[32]) }
          flags = { rdonly }
        address = { defs={} expr=v6305[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v6354[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804854f:lea    esi, [edx + eax*0x04]
    registers:
        ax      = { defs={} expr=v6713[32] }
        cx      = { defs={} expr=v6714[32] }
        dx      = { defs={} expr=v6715[32] }
        bx      = { defs={} expr=v6716[32] }
        sp      = { defs={} expr=v6717[32] }
        bp      = { defs={} expr=v6718[32] }
        si      = { defs={0x0804854f} expr=(add[32] v6715[32] (extract[32] 0[32] 32[32] (umul[40] v6713[32] 4[8]))) }
        di      = { defs={} expr=v6720[32] }
        es      = { defs={} expr=v6721[16] }
        cs      = { defs={} expr=v6722[16] }
        ss      = { defs={} expr=v6723[16] }
        ds      = { defs={} expr=v6724[16] }
        fs      = { defs={} expr=v6725[16] }
        gs      = { defs={} expr=v6726[16] }
        cf      = { defs={} expr=v6727[1] }
        ?1      = { defs={} expr=v6728[1] }
        pf      = { defs={} expr=v6729[1] }
        ?3      = { defs={} expr=v6730[1] }
        af      = { defs={} expr=v6731[1] }
        ?5      = { defs={} expr=v6732[1] }
        zf      = { defs={} expr=v6733[1] }
        sf      = { defs={} expr=v6734[1] }
        tf      = { defs={} expr=v6735[1] }
        if      = { defs={} expr=v6736[1] }
        df      = { defs={} expr=v6737[1] }
        of      = { defs={} expr=v6738[1] }
        iopl0   = { defs={} expr=v6739[1] }
        iopl1   = { defs={} expr=v6740[1] }
        nt      = { defs={} expr=v6741[1] }
        ?15     = { defs={} expr=v6742[1] }
        rf      = { defs={} expr=v6743[1] }
        vm      = { defs={} expr=v6744[1] }
        ac      = { defs={} expr=v6745[1] }
        vif     = { defs={} expr=v6746[1] }
        vip     = { defs={} expr=v6747[1] }
        id      = { defs={} expr=v6748[1] }
        ?22     = { defs={} expr=v6749[1] }
        ?23     = { defs={} expr=v6750[1] }
        ?24     = { defs={} expr=v6751[1] }
        ?25     = { defs={} expr=v6752[1] }
        ?26     = { defs={} expr=v6753[1] }
        ?27     = { defs={} expr=v6754[1] }
        ?28     = { defs={} expr=v6755[1] }
        ?29     = { defs={} expr=v6756[1] }
        ?30     = { defs={} expr=v6757[1] }
        ?31     = { defs={} expr=v6758[1] }
        ip      = { defs={0x0804854f} expr=0x08048552[32] }
    memory:
    init mem:
0x8048552:xor    edi, edi
    registers:
        ax      = { defs={} expr=v6713[32] }
        cx      = { defs={} expr=v6714[32] }
        dx      = { defs={} expr=v6715[32] }
        bx      = { defs={} expr=v6716[32] }
        sp      = { defs={} expr=v6717[32] }
        bp      = { defs={} expr=v6718[32] }
        si      = { defs={0x0804854f} expr=(add[32] v6715[32] (extract[32] 0[32] 32[32] (umul[40] v6713[32] 4[8]))) }
        di      = { defs={0x08048552} expr=0[32] }
        es      = { defs={} expr=v6721[16] }
        cs      = { defs={} expr=v6722[16] }
        ss      = { defs={} expr=v6723[16] }
        ds      = { defs={} expr=v6724[16] }
        fs      = { defs={} expr=v6725[16] }
        gs      = { defs={} expr=v6726[16] }
        cf      = { defs={0x08048552} expr=0[1] }
        ?1      = { defs={} expr=v6728[1] }
        pf      = { defs={0x08048552} expr=1[1] }
        ?3      = { defs={} expr=v6730[1] }
        af      = { defs={0x08048552} expr=v6802[1] }
        ?5      = { defs={} expr=v6732[1] }
        zf      = { defs={0x08048552} expr=1[1] }
        sf      = { defs={0x08048552} expr=0[1] }
        tf      = { defs={} expr=v6735[1] }
        if      = { defs={} expr=v6736[1] }
        df      = { defs={} expr=v6737[1] }
        of      = { defs={0x08048552} expr=0[1] }
        iopl0   = { defs={} expr=v6739[1] }
        iopl1   = { defs={} expr=v6740[1] }
        nt      = { defs={} expr=v6741[1] }
        ?15     = { defs={} expr=v6742[1] }
        rf      = { defs={} expr=v6743[1] }
        vm      = { defs={} expr=v6744[1] }
        ac      = { defs={} expr=v6745[1] }
        vif     = { defs={} expr=v6746[1] }
        vip     = { defs={} expr=v6747[1] }
        id      = { defs={} expr=v6748[1] }
        ?22     = { defs={} expr=v6749[1] }
        ?23     = { defs={} expr=v6750[1] }
        ?24     = { defs={} expr=v6751[1] }
        ?25     = { defs={} expr=v6752[1] }
        ?26     = { defs={} expr=v6753[1] }
        ?27     = { defs={} expr=v6754[1] }
        ?28     = { defs={} expr=v6755[1] }
        ?29     = { defs={} expr=v6756[1] }
        ?30     = { defs={} expr=v6757[1] }
        ?31     = { defs={} expr=v6758[1] }
        ip      = { defs={0x0804854f,0x08048552} expr=0x08048554[32] }
    memory:
    init mem:
0x8048554:lea    esi, [esi + 0x00000000]
    registers:
        ax      = { defs={} expr=v6713[32] }
        cx      = { defs={} expr=v6714[32] }
        dx      = { defs={} expr=v6715[32] }
        bx      = { defs={} expr=v6716[32] }
        sp      = { defs={} expr=v6717[32] }
        bp      = { defs={} expr=v6718[32] }
        si      = { defs={0x0804854f,0x08048554} expr=(add[32] v6715[32] (extract[32] 0[32] 32[32] (umul[40] v6713[32] 4[8]))) }
        di      = { defs={0x08048552} expr=0[32] }
        es      = { defs={} expr=v6721[16] }
        cs      = { defs={} expr=v6722[16] }
        ss      = { defs={} expr=v6723[16] }
        ds      = { defs={} expr=v6724[16] }
        fs      = { defs={} expr=v6725[16] }
        gs      = { defs={} expr=v6726[16] }
        cf      = { defs={0x08048552} expr=0[1] }
        ?1      = { defs={} expr=v6728[1] }
        pf      = { defs={0x08048552} expr=1[1] }
        ?3      = { defs={} expr=v6730[1] }
        af      = { defs={0x08048552} expr=v6802[1] }
        ?5      = { defs={} expr=v6732[1] }
        zf      = { defs={0x08048552} expr=1[1] }
        sf      = { defs={0x08048552} expr=0[1] }
        tf      = { defs={} expr=v6735[1] }
        if      = { defs={} expr=v6736[1] }
        df      = { defs={} expr=v6737[1] }
        of      = { defs={0x08048552} expr=0[1] }
        iopl0   = { defs={} expr=v6739[1] }
        iopl1   = { defs={} expr=v6740[1] }
        nt      = { defs={} expr=v6741[1] }
        ?15     = { defs={} expr=v6742[1] }
        rf      = { defs={} expr=v6743[1] }
        vm      = { defs={} expr=v6744[1] }
        ac      = { defs={} expr=v6745[1] }
        vif     = { defs={} expr=v6746[1] }
        vip     = { defs={} expr=v6747[1] }
        id      = { defs={} expr=v6748[1] }
        ?22     = { defs={} expr=v6749[1] }
        ?23     = { defs={} expr=v6750[1] }
        ?24     = { defs={} expr=v6751[1] }
        ?25     = { defs={} expr=v6752[1] }
        ?26     = { defs={} expr=v6753[1] }
        ?27     = { defs={} expr=v6754[1] }
        ?28     = { defs={} expr=v6755[1] }
        ?29     = { defs={} expr=v6756[1] }
        ?30     = { defs={} expr=v6757[1] }
        ?31     = { defs={} expr=v6758[1] }
        ip      = { defs={0x0804854f,0x08048552,0x08048554} expr=0x0804855a[32] }
    memory:
    init mem:
0x804855a:lea    edi, [edi + 0x00000000]
    registers:
        ax      = { defs={} expr=v6713[32] }
        cx      = { defs={} expr=v6714[32] }
        dx      = { defs={} expr=v6715[32] }
        bx      = { defs={} expr=v6716[32] }
        sp      = { defs={} expr=v6717[32] }
        bp      = { defs={} expr=v6718[32] }
        si      = { defs={0x0804854f,0x08048554} expr=(add[32] v6715[32] (extract[32] 0[32] 32[32] (umul[40] v6713[32] 4[8]))) }
        di      = { defs={0x08048552,0x0804855a} expr=0[32] }
        es      = { defs={} expr=v6721[16] }
        cs      = { defs={} expr=v6722[16] }
        ss      = { defs={} expr=v6723[16] }
        ds      = { defs={} expr=v6724[16] }
        fs      = { defs={} expr=v6725[16] }
        gs      = { defs={} expr=v6726[16] }
        cf      = { defs={0x08048552} expr=0[1] }
        ?1      = { defs={} expr=v6728[1] }
        pf      = { defs={0x08048552} expr=1[1] }
        ?3      = { defs={} expr=v6730[1] }
        af      = { defs={0x08048552} expr=v6802[1] }
        ?5      = { defs={} expr=v6732[1] }
        zf      = { defs={0x08048552} expr=1[1] }
        sf      = { defs={0x08048552} expr=0[1] }
        tf      = { defs={} expr=v6735[1] }
        if      = { defs={} expr=v6736[1] }
        df      = { defs={} expr=v6737[1] }
        of      = { defs={0x08048552} expr=0[1] }
        iopl0   = { defs={} expr=v6739[1] }
        iopl1   = { defs={} expr=v6740[1] }
        nt      = { defs={} expr=v6741[1] }
        ?15     = { defs={} expr=v6742[1] }
        rf      = { defs={} expr=v6743[1] }
        vm      = { defs={} expr=v6744[1] }
        ac      = { defs={} expr=v6745[1] }
        vif     = { defs={} expr=v6746[1] }
        vip     = { defs={} expr=v6747[1] }
        id      = { defs={} expr=v6748[1] }
        ?22     = { defs={} expr=v6749[1] }
        ?23     = { defs={} expr=v6750[1] }
        ?24     = { defs={} expr=v6751[1] }
        ?25     = { defs={} expr=v6752[1] }
        ?26     = { defs={} expr=v6753[1] }
        ?27     = { defs={} expr=v6754[1] }
        ?28     = { defs={} expr=v6755[1] }
        ?29     = { defs={} expr=v6756[1] }
        ?30     = { defs={} expr=v6757[1] }
        ?31     = { defs={} expr=v6758[1] }
        ip      = { defs={0x0804854f,0x08048552,0x08048554,0x0804855a} expr=0x08048560[32] }
    memory:
    init mem:
0x8048560:call   DWORD PTR ds:[esi]
    registers:
        ax      = { defs={} expr=v6713[32] }
        cx      = { defs={} expr=v6714[32] }
        dx      = { defs={} expr=v6715[32] }
        bx      = { defs={} expr=v6716[32] }
        sp      = { defs={0x08048560} expr=(add[32] v6717[32] -4[32]) }
        bp      = { defs={} expr=v6718[32] }
        si      = { defs={0x0804854f,0x08048554} expr=(add[32] v6715[32] (extract[32] 0[32] 32[32] (umul[40] v6713[32] 4[8]))) }
        di      = { defs={0x08048552,0x0804855a} expr=0[32] }
        es      = { defs={} expr=v6721[16] }
        cs      = { defs={} expr=v6722[16] }
        ss      = { defs={} expr=v6723[16] }
        ds      = { defs={} expr=v6724[16] }
        fs      = { defs={} expr=v6725[16] }
        gs      = { defs={} expr=v6726[16] }
        cf      = { defs={0x08048552} expr=0[1] }
        ?1      = { defs={} expr=v6728[1] }
        pf      = { defs={0x08048552} expr=1[1] }
        ?3      = { defs={} expr=v6730[1] }
        af      = { defs={0x08048552} expr=v6802[1] }
        ?5      = { defs={} expr=v6732[1] }
        zf      = { defs={0x08048552} expr=1[1] }
        sf      = { defs={0x08048552} expr=0[1] }
        tf      = { defs={} expr=v6735[1] }
        if      = { defs={} expr=v6736[1] }
        df      = { defs={} expr=v6737[1] }
        of      = { defs={0x08048552} expr=0[1] }
        iopl0   = { defs={} expr=v6739[1] }
        iopl1   = { defs={} expr=v6740[1] }
        nt      = { defs={} expr=v6741[1] }
        ?15     = { defs={} expr=v6742[1] }
        rf      = { defs={} expr=v6743[1] }
        vm      = { defs={} expr=v6744[1] }
        ac      = { defs={} expr=v6745[1] }
        vif     = { defs={} expr=v6746[1] }
        vip     = { defs={} expr=v6747[1] }
        id      = { defs={} expr=v6748[1] }
        ?22     = { defs={} expr=v6749[1] }
        ?23     = { defs={} expr=v6750[1] }
        ?24     = { defs={} expr=v6751[1] }
        ?25     = { defs={} expr=v6752[1] }
        ?26     = { defs={} expr=v6753[1] }
        ?27     = { defs={} expr=v6754[1] }
        ?28     = { defs={} expr=v6755[1] }
        ?29     = { defs={} expr=v6756[1] }
        ?30     = { defs={} expr=v6757[1] }
        ?31     = { defs={} expr=v6758[1] }
        ip      = { defs={0x08048560} expr=v6832[32] }
    memory:
        address = { defs={0x08048560} expr=(add[32] (add[32] v6717[32] -4[32]) 3[32]) }
          value = { defs={0x0804854f,0x08048552,0x08048554,0x0804855a,0x08048560} expr=8[8] }
          flags = { }
        address = { defs={0x08048560} expr=(add[32] (add[32] v6717[32] -4[32]) 2[32]) }
          value = { defs={0x0804854f,0x08048552,0x08048554,0x0804855a,0x08048560} expr=4[8] }
          flags = { }
        address = { defs={0x08048560} expr=(add[32] (add[32] v6717[32] -4[32]) 1[32]) }
          value = { defs={0x0804854f,0x08048552,0x08048554,0x0804855a,0x08048560} expr=-123[8] }
          flags = { }
        address = { defs={0x08048560} expr=(add[32] v6717[32] -4[32]) }
          value = { defs={0x0804854f,0x08048552,0x08048554,0x0804855a,0x08048560} expr=98[8] }
          flags = { }
    init mem:
        address = { defs={0x0804854f,0x08048554} expr=(add[32] (add[32] v6715[32] (extract[32] 0[32] 32[32] (umul[40] v6713[32] 4[8]))) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v6832[32]) }
          flags = { rdonly }
        address = { defs={0x0804854f,0x08048554} expr=(add[32] (add[32] v6715[32] (extract[32] 0[32] 32[32] (umul[40] v6713[32] 4[8]))) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v6832[32]) }
          flags = { rdonly }
        address = { defs={0x0804854f,0x08048554} expr=(add[32] (add[32] v6715[32] (extract[32] 0[32] 32[32] (umul[40] v6713[32] 4[8]))) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v6832[32]) }
          flags = { rdonly }
        address = { defs={0x0804854f,0x08048554} expr=(add[32] v6715[32] (extract[32] 0[32] 32[32] (umul[40] v6713[32] 4[8]))) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v6832[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048562:inc    edi
    registers:
        ax      = { defs={} expr=v6893[32] }
        cx      = { defs={} expr=v6894[32] }
        dx      = { defs={} expr=v6895[32] }
        bx      = { defs={} expr=v6896[32] }
        sp      = { defs={} expr=v6897[32] }
        bp      = { defs={} expr=v6898[32] }
        si      = { defs={} expr=v6899[32] }
        di      = { defs={0x08048562} expr=(add[32] v6900[32] 1[32]) }
        es      = { defs={} expr=v6901[16] }
        cs      = { defs={} expr=v6902[16] }
        ss      = { defs={} expr=v6903[16] }
        ds      = { defs={} expr=v6904[16] }
        fs      = { defs={} expr=v6905[16] }
        gs      = { defs={} expr=v6906[16] }
        cf      = { defs={} expr=v6907[1] }
        ?1      = { defs={} expr=v6908[1] }
        pf      = { defs={0x08048562} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v6900[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v6900[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v6900[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v6900[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v6900[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v6900[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v6900[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v6900[32] 1[32]))))))) }
        ?3      = { defs={} expr=v6910[1] }
        af      = { defs={0x08048562} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6900[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v6900[32]) 1[33]))))) }
        ?5      = { defs={} expr=v6912[1] }
        zf      = { defs={0x08048562} expr=(zerop[1] (add[32] v6900[32] 1[32])) }
        sf      = { defs={0x08048562} expr=(extract[1] 31[32] 32[32] (add[32] v6900[32] 1[32])) }
        tf      = { defs={} expr=v6915[1] }
        if      = { defs={} expr=v6916[1] }
        df      = { defs={} expr=v6917[1] }
        of      = { defs={0x08048562} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6900[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v6900[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6900[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v6900[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v6919[1] }
        iopl1   = { defs={} expr=v6920[1] }
        nt      = { defs={} expr=v6921[1] }
        ?15     = { defs={} expr=v6922[1] }
        rf      = { defs={} expr=v6923[1] }
        vm      = { defs={} expr=v6924[1] }
        ac      = { defs={} expr=v6925[1] }
        vif     = { defs={} expr=v6926[1] }
        vip     = { defs={} expr=v6927[1] }
        id      = { defs={} expr=v6928[1] }
        ?22     = { defs={} expr=v6929[1] }
        ?23     = { defs={} expr=v6930[1] }
        ?24     = { defs={} expr=v6931[1] }
        ?25     = { defs={} expr=v6932[1] }
        ?26     = { defs={} expr=v6933[1] }
        ?27     = { defs={} expr=v6934[1] }
        ?28     = { defs={} expr=v6935[1] }
        ?29     = { defs={} expr=v6936[1] }
        ?30     = { defs={} expr=v6937[1] }
        ?31     = { defs={} expr=v6938[1] }
        ip      = { defs={0x08048562} expr=0x08048563[32] }
    memory:
    init mem:
0x8048563:sub    esi, 0x04
    registers:
        ax      = { defs={} expr=v6893[32] }
        cx      = { defs={} expr=v6894[32] }
        dx      = { defs={} expr=v6895[32] }
        bx      = { defs={} expr=v6896[32] }
        sp      = { defs={} expr=v6897[32] }
        bp      = { defs={} expr=v6898[32] }
        si      = { defs={0x08048563} expr=(add[32] v6899[32] -4[32]) }
        di      = { defs={0x08048562} expr=(add[32] v6900[32] 1[32]) }
        es      = { defs={} expr=v6901[16] }
        cs      = { defs={} expr=v6902[16] }
        ss      = { defs={} expr=v6903[16] }
        ds      = { defs={} expr=v6904[16] }
        fs      = { defs={} expr=v6905[16] }
        gs      = { defs={} expr=v6906[16] }
        cf      = { defs={0x08048563} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6899[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v6899[32]) 4294967292[33])))))) }
        ?1      = { defs={} expr=v6908[1] }
        pf      = { defs={0x08048563} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v6899[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v6899[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v6899[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v6899[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v6899[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v6899[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v6899[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v6899[32] -4[32]))))))) }
        ?3      = { defs={} expr=v6910[1] }
        af      = { defs={0x08048563} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6899[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v6899[32]) 4294967292[33])))))) }
        ?5      = { defs={} expr=v6912[1] }
        zf      = { defs={0x08048563} expr=(zerop[1] (add[32] v6899[32] -4[32])) }
        sf      = { defs={0x08048563} expr=(extract[1] 31[32] 32[32] (add[32] v6899[32] -4[32])) }
        tf      = { defs={} expr=v6915[1] }
        if      = { defs={} expr=v6916[1] }
        df      = { defs={} expr=v6917[1] }
        of      = { defs={0x08048563} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6899[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v6899[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6899[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v6899[32]) 4294967292[33])))))) }
        iopl0   = { defs={} expr=v6919[1] }
        iopl1   = { defs={} expr=v6920[1] }
        nt      = { defs={} expr=v6921[1] }
        ?15     = { defs={} expr=v6922[1] }
        rf      = { defs={} expr=v6923[1] }
        vm      = { defs={} expr=v6924[1] }
        ac      = { defs={} expr=v6925[1] }
        vif     = { defs={} expr=v6926[1] }
        vip     = { defs={} expr=v6927[1] }
        id      = { defs={} expr=v6928[1] }
        ?22     = { defs={} expr=v6929[1] }
        ?23     = { defs={} expr=v6930[1] }
        ?24     = { defs={} expr=v6931[1] }
        ?25     = { defs={} expr=v6932[1] }
        ?26     = { defs={} expr=v6933[1] }
        ?27     = { defs={} expr=v6934[1] }
        ?28     = { defs={} expr=v6935[1] }
        ?29     = { defs={} expr=v6936[1] }
        ?30     = { defs={} expr=v6937[1] }
        ?31     = { defs={} expr=v6938[1] }
        ip      = { defs={0x08048562,0x08048563} expr=0x08048566[32] }
    memory:
    init mem:
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi
    registers:
        ax      = { defs={} expr=v6893[32] }
        cx      = { defs={} expr=v6894[32] }
        dx      = { defs={} expr=v6895[32] }
        bx      = { defs={} expr=v6896[32] }
        sp      = { defs={} expr=v6897[32] }
        bp      = { defs={} expr=v6898[32] }
        si      = { defs={0x08048563} expr=(add[32] v6899[32] -4[32]) }
        di      = { defs={0x08048562} expr=(add[32] v6900[32] 1[32]) }
        es      = { defs={} expr=v6901[16] }
        cs      = { defs={} expr=v6902[16] }
        ss      = { defs={} expr=v6903[16] }
        ds      = { defs={} expr=v6904[16] }
        fs      = { defs={} expr=v6905[16] }
        gs      = { defs={} expr=v6906[16] }
        cf      = { defs={0x08048562,0x08048566} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7045[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v6900[32] 1[32]))) (add[33] (uextend[33] 33[32] v7045[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v6900[32] 1[32]))) 1[33]))))))) }
        ?1      = { defs={} expr=v6908[1] }
        pf      = { defs={0x08048562,0x08048566} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32])))))))) }
        ?3      = { defs={} expr=v6910[1] }
        af      = { defs={0x08048562,0x08048566} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7045[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v6900[32] 1[32]))) (add[33] (uextend[33] 33[32] v7045[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v6900[32] 1[32]))) 1[33]))))))) }
        ?5      = { defs={} expr=v6912[1] }
        zf      = { defs={0x08048562,0x08048566} expr=(zerop[1] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32]))) }
        sf      = { defs={0x08048562,0x08048566} expr=(extract[1] 31[32] 32[32] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32]))) }
        tf      = { defs={} expr=v6915[1] }
        if      = { defs={} expr=v6916[1] }
        df      = { defs={} expr=v6917[1] }
        of      = { defs={0x08048562,0x08048566} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7045[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v6900[32] 1[32]))) (add[33] (uextend[33] 33[32] v7045[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v6900[32] 1[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7045[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v6900[32] 1[32]))) (add[33] (uextend[33] 33[32] v7045[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v6900[32] 1[32]))) 1[33]))))))) }
        iopl0   = { defs={} expr=v6919[1] }
        iopl1   = { defs={} expr=v6920[1] }
        nt      = { defs={} expr=v6921[1] }
        ?15     = { defs={} expr=v6922[1] }
        rf      = { defs={} expr=v6923[1] }
        vm      = { defs={} expr=v6924[1] }
        ac      = { defs={} expr=v6925[1] }
        vif     = { defs={} expr=v6926[1] }
        vip     = { defs={} expr=v6927[1] }
        id      = { defs={} expr=v6928[1] }
        ?22     = { defs={} expr=v6929[1] }
        ?23     = { defs={} expr=v6930[1] }
        ?24     = { defs={} expr=v6931[1] }
        ?25     = { defs={} expr=v6932[1] }
        ?26     = { defs={} expr=v6933[1] }
        ?27     = { defs={} expr=v6934[1] }
        ?28     = { defs={} expr=v6935[1] }
        ?29     = { defs={} expr=v6936[1] }
        ?30     = { defs={} expr=v6937[1] }
        ?31     = { defs={} expr=v6938[1] }
        ip      = { defs={0x08048562,0x08048563,0x08048566} expr=0x08048569[32] }
    memory:
    init mem:
        address = { defs={0x08048566} expr=(add[32] (add[32] v6898[32] -16[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7045[32]) }
          flags = { rdonly }
        address = { defs={0x08048566} expr=(add[32] (add[32] v6898[32] -16[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7045[32]) }
          flags = { rdonly }
        address = { defs={0x08048566} expr=(add[32] (add[32] v6898[32] -16[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7045[32]) }
          flags = { rdonly }
        address = { defs={0x08048566} expr=(add[32] v6898[32] -16[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7045[32]) }
          flags = { rdonly }
0x8048569:jne    0x08048560<<Insn>>
    registers:
        ax      = { defs={} expr=v6893[32] }
        cx      = { defs={} expr=v6894[32] }
        dx      = { defs={} expr=v6895[32] }
        bx      = { defs={} expr=v6896[32] }
        sp      = { defs={} expr=v6897[32] }
        bp      = { defs={} expr=v6898[32] }
        si      = { defs={0x08048563} expr=(add[32] v6899[32] -4[32]) }
        di      = { defs={0x08048562} expr=(add[32] v6900[32] 1[32]) }
        es      = { defs={} expr=v6901[16] }
        cs      = { defs={} expr=v6902[16] }
        ss      = { defs={} expr=v6903[16] }
        ds      = { defs={} expr=v6904[16] }
        fs      = { defs={} expr=v6905[16] }
        gs      = { defs={} expr=v6906[16] }
        cf      = { defs={0x08048562,0x08048566} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7045[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v6900[32] 1[32]))) (add[33] (uextend[33] 33[32] v7045[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v6900[32] 1[32]))) 1[33]))))))) }
        ?1      = { defs={} expr=v6908[1] }
        pf      = { defs={0x08048562,0x08048566} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32])))))))) }
        ?3      = { defs={} expr=v6910[1] }
        af      = { defs={0x08048562,0x08048566} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7045[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v6900[32] 1[32]))) (add[33] (uextend[33] 33[32] v7045[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v6900[32] 1[32]))) 1[33]))))))) }
        ?5      = { defs={} expr=v6912[1] }
        zf      = { defs={0x08048562,0x08048566} expr=(zerop[1] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32]))) }
        sf      = { defs={0x08048562,0x08048566} expr=(extract[1] 31[32] 32[32] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32]))) }
        tf      = { defs={} expr=v6915[1] }
        if      = { defs={} expr=v6916[1] }
        df      = { defs={} expr=v6917[1] }
        of      = { defs={0x08048562,0x08048566} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7045[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v6900[32] 1[32]))) (add[33] (uextend[33] 33[32] v7045[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v6900[32] 1[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7045[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v6900[32] 1[32]))) (add[33] (uextend[33] 33[32] v7045[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v6900[32] 1[32]))) 1[33]))))))) }
        iopl0   = { defs={} expr=v6919[1] }
        iopl1   = { defs={} expr=v6920[1] }
        nt      = { defs={} expr=v6921[1] }
        ?15     = { defs={} expr=v6922[1] }
        rf      = { defs={} expr=v6923[1] }
        vm      = { defs={} expr=v6924[1] }
        ac      = { defs={} expr=v6925[1] }
        vif     = { defs={} expr=v6926[1] }
        vip     = { defs={} expr=v6927[1] }
        id      = { defs={} expr=v6928[1] }
        ?22     = { defs={} expr=v6929[1] }
        ?23     = { defs={} expr=v6930[1] }
        ?24     = { defs={} expr=v6931[1] }
        ?25     = { defs={} expr=v6932[1] }
        ?26     = { defs={} expr=v6933[1] }
        ?27     = { defs={} expr=v6934[1] }
        ?28     = { defs={} expr=v6935[1] }
        ?29     = { defs={} expr=v6936[1] }
        ?30     = { defs={} expr=v6937[1] }
        ?31     = { defs={} expr=v6938[1] }
        ip      = { defs={0x08048562,0x08048563,0x08048566,0x08048569} expr=(ite[32] (invert[1] (zerop[1] (add[32] v7045[32] (add[32] (invert[32] (add[32] v6900[32] 1[32])) 1[32])))) 0x08048560[32] 0x0804856b[32]) }
    memory:
    init mem:
        address = { defs={0x08048566} expr=(add[32] (add[32] v6898[32] -16[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7045[32]) }
          flags = { rdonly }
        address = { defs={0x08048566} expr=(add[32] (add[32] v6898[32] -16[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7045[32]) }
          flags = { rdonly }
        address = { defs={0x08048566} expr=(add[32] (add[32] v6898[32] -16[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7045[32]) }
          flags = { rdonly }
        address = { defs={0x08048566} expr=(add[32] v6898[32] -16[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7045[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804856b:call   0x080485b0<_fini>
    registers:
        ax      = { defs={} expr=v7158[32] }
        cx      = { defs={} expr=v7159[32] }
        dx      = { defs={} expr=v7160[32] }
        bx      = { defs={} expr=v7161[32] }
        sp      = { defs={0x0804856b} expr=(add[32] v7162[32] -4[32]) }
        bp      = { defs={} expr=v7163[32] }
        si      = { defs={} expr=v7164[32] }
        di      = { defs={} expr=v7165[32] }
        es      = { defs={} expr=v7166[16] }
        cs      = { defs={} expr=v7167[16] }
        ss      = { defs={} expr=v7168[16] }
        ds      = { defs={} expr=v7169[16] }
        fs      = { defs={} expr=v7170[16] }
        gs      = { defs={} expr=v7171[16] }
        cf      = { defs={} expr=v7172[1] }
        ?1      = { defs={} expr=v7173[1] }
        pf      = { defs={} expr=v7174[1] }
        ?3      = { defs={} expr=v7175[1] }
        af      = { defs={} expr=v7176[1] }
        ?5      = { defs={} expr=v7177[1] }
        zf      = { defs={} expr=v7178[1] }
        sf      = { defs={} expr=v7179[1] }
        tf      = { defs={} expr=v7180[1] }
        if      = { defs={} expr=v7181[1] }
        df      = { defs={} expr=v7182[1] }
        of      = { defs={} expr=v7183[1] }
        iopl0   = { defs={} expr=v7184[1] }
        iopl1   = { defs={} expr=v7185[1] }
        nt      = { defs={} expr=v7186[1] }
        ?15     = { defs={} expr=v7187[1] }
        rf      = { defs={} expr=v7188[1] }
        vm      = { defs={} expr=v7189[1] }
        ac      = { defs={} expr=v7190[1] }
        vif     = { defs={} expr=v7191[1] }
        vip     = { defs={} expr=v7192[1] }
        id      = { defs={} expr=v7193[1] }
        ?22     = { defs={} expr=v7194[1] }
        ?23     = { defs={} expr=v7195[1] }
        ?24     = { defs={} expr=v7196[1] }
        ?25     = { defs={} expr=v7197[1] }
        ?26     = { defs={} expr=v7198[1] }
        ?27     = { defs={} expr=v7199[1] }
        ?28     = { defs={} expr=v7200[1] }
        ?29     = { defs={} expr=v7201[1] }
        ?30     = { defs={} expr=v7202[1] }
        ?31     = { defs={} expr=v7203[1] }
        ip      = { defs={0x0804856b} expr=0x080485b0[32] }
    memory:
        address = { defs={0x0804856b} expr=(add[32] (add[32] v7162[32] -4[32]) 3[32]) }
          value = { defs={0x0804856b} expr=8[8] }
          flags = { }
        address = { defs={0x0804856b} expr=(add[32] (add[32] v7162[32] -4[32]) 2[32]) }
          value = { defs={0x0804856b} expr=4[8] }
          flags = { }
        address = { defs={0x0804856b} expr=(add[32] (add[32] v7162[32] -4[32]) 1[32]) }
          value = { defs={0x0804856b} expr=-123[8] }
          flags = { }
        address = { defs={0x0804856b} expr=(add[32] v7162[32] -4[32]) }
          value = { defs={0x0804856b} expr=112[8] }
          flags = { }
    init mem:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
    registers:
        ax      = { defs={} expr=v7269[32] }
        cx      = { defs={} expr=v7270[32] }
        dx      = { defs={} expr=v7271[32] }
        bx      = { defs={} expr=v7272[32] }
        sp      = { defs={0x08048570} expr=(add[32] v7273[32] 12[32]) }
        bp      = { defs={} expr=v7274[32] }
        si      = { defs={} expr=v7275[32] }
        di      = { defs={} expr=v7276[32] }
        es      = { defs={} expr=v7277[16] }
        cs      = { defs={} expr=v7278[16] }
        ss      = { defs={} expr=v7279[16] }
        ds      = { defs={} expr=v7280[16] }
        fs      = { defs={} expr=v7281[16] }
        gs      = { defs={} expr=v7282[16] }
        cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33]))))) }
        ?1      = { defs={} expr=v7284[1] }
        pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))))))) }
        ?3      = { defs={} expr=v7286[1] }
        af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33]))))) }
        ?5      = { defs={} expr=v7288[1] }
        zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v7273[32] 12[32])) }
        sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v7273[32] 12[32])) }
        tf      = { defs={} expr=v7291[1] }
        if      = { defs={} expr=v7292[1] }
        df      = { defs={} expr=v7293[1] }
        of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v7295[1] }
        iopl1   = { defs={} expr=v7296[1] }
        nt      = { defs={} expr=v7297[1] }
        ?15     = { defs={} expr=v7298[1] }
        rf      = { defs={} expr=v7299[1] }
        vm      = { defs={} expr=v7300[1] }
        ac      = { defs={} expr=v7301[1] }
        vif     = { defs={} expr=v7302[1] }
        vip     = { defs={} expr=v7303[1] }
        id      = { defs={} expr=v7304[1] }
        ?22     = { defs={} expr=v7305[1] }
        ?23     = { defs={} expr=v7306[1] }
        ?24     = { defs={} expr=v7307[1] }
        ?25     = { defs={} expr=v7308[1] }
        ?26     = { defs={} expr=v7309[1] }
        ?27     = { defs={} expr=v7310[1] }
        ?28     = { defs={} expr=v7311[1] }
        ?29     = { defs={} expr=v7312[1] }
        ?30     = { defs={} expr=v7313[1] }
        ?31     = { defs={} expr=v7314[1] }
        ip      = { defs={0x08048570} expr=0x08048573[32] }
    memory:
    init mem:
0x8048573:pop    ebx
    registers:
        ax      = { defs={} expr=v7269[32] }
        cx      = { defs={} expr=v7270[32] }
        dx      = { defs={} expr=v7271[32] }
        bx      = { defs={0x08048573} expr=v7370[32] }
        sp      = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] v7273[32] 12[32]) 4[32]) }
        bp      = { defs={} expr=v7274[32] }
        si      = { defs={} expr=v7275[32] }
        di      = { defs={} expr=v7276[32] }
        es      = { defs={} expr=v7277[16] }
        cs      = { defs={} expr=v7278[16] }
        ss      = { defs={} expr=v7279[16] }
        ds      = { defs={} expr=v7280[16] }
        fs      = { defs={} expr=v7281[16] }
        gs      = { defs={} expr=v7282[16] }
        cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33]))))) }
        ?1      = { defs={} expr=v7284[1] }
        pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))))))) }
        ?3      = { defs={} expr=v7286[1] }
        af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33]))))) }
        ?5      = { defs={} expr=v7288[1] }
        zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v7273[32] 12[32])) }
        sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v7273[32] 12[32])) }
        tf      = { defs={} expr=v7291[1] }
        if      = { defs={} expr=v7292[1] }
        df      = { defs={} expr=v7293[1] }
        of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v7295[1] }
        iopl1   = { defs={} expr=v7296[1] }
        nt      = { defs={} expr=v7297[1] }
        ?15     = { defs={} expr=v7298[1] }
        rf      = { defs={} expr=v7299[1] }
        vm      = { defs={} expr=v7300[1] }
        ac      = { defs={} expr=v7301[1] }
        vif     = { defs={} expr=v7302[1] }
        vip     = { defs={} expr=v7303[1] }
        id      = { defs={} expr=v7304[1] }
        ?22     = { defs={} expr=v7305[1] }
        ?23     = { defs={} expr=v7306[1] }
        ?24     = { defs={} expr=v7307[1] }
        ?25     = { defs={} expr=v7308[1] }
        ?26     = { defs={} expr=v7309[1] }
        ?27     = { defs={} expr=v7310[1] }
        ?28     = { defs={} expr=v7311[1] }
        ?29     = { defs={} expr=v7312[1] }
        ?30     = { defs={} expr=v7313[1] }
        ?31     = { defs={} expr=v7314[1] }
        ip      = { defs={0x08048570,0x08048573} expr=0x08048574[32] }
    memory:
    init mem:
        address = { defs={0x08048570} expr=(add[32] (add[32] v7273[32] 12[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7370[32]) }
          flags = { rdonly }
        address = { defs={0x08048570} expr=(add[32] (add[32] v7273[32] 12[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7370[32]) }
          flags = { rdonly }
        address = { defs={0x08048570} expr=(add[32] (add[32] v7273[32] 12[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7370[32]) }
          flags = { rdonly }
        address = { defs={0x08048570} expr=(add[32] v7273[32] 12[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7370[32]) }
          flags = { rdonly }
0x8048574:pop    esi
    registers:
        ax      = { defs={} expr=v7269[32] }
        cx      = { defs={} expr=v7270[32] }
        dx      = { defs={} expr=v7271[32] }
        bx      = { defs={0x08048573} expr=v7370[32] }
        sp      = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) }
        bp      = { defs={} expr=v7274[32] }
        si      = { defs={0x08048574} expr=v7388[32] }
        di      = { defs={} expr=v7276[32] }
        es      = { defs={} expr=v7277[16] }
        cs      = { defs={} expr=v7278[16] }
        ss      = { defs={} expr=v7279[16] }
        ds      = { defs={} expr=v7280[16] }
        fs      = { defs={} expr=v7281[16] }
        gs      = { defs={} expr=v7282[16] }
        cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33]))))) }
        ?1      = { defs={} expr=v7284[1] }
        pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))))))) }
        ?3      = { defs={} expr=v7286[1] }
        af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33]))))) }
        ?5      = { defs={} expr=v7288[1] }
        zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v7273[32] 12[32])) }
        sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v7273[32] 12[32])) }
        tf      = { defs={} expr=v7291[1] }
        if      = { defs={} expr=v7292[1] }
        df      = { defs={} expr=v7293[1] }
        of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v7295[1] }
        iopl1   = { defs={} expr=v7296[1] }
        nt      = { defs={} expr=v7297[1] }
        ?15     = { defs={} expr=v7298[1] }
        rf      = { defs={} expr=v7299[1] }
        vm      = { defs={} expr=v7300[1] }
        ac      = { defs={} expr=v7301[1] }
        vif     = { defs={} expr=v7302[1] }
        vip     = { defs={} expr=v7303[1] }
        id      = { defs={} expr=v7304[1] }
        ?22     = { defs={} expr=v7305[1] }
        ?23     = { defs={} expr=v7306[1] }
        ?24     = { defs={} expr=v7307[1] }
        ?25     = { defs={} expr=v7308[1] }
        ?26     = { defs={} expr=v7309[1] }
        ?27     = { defs={} expr=v7310[1] }
        ?28     = { defs={} expr=v7311[1] }
        ?29     = { defs={} expr=v7312[1] }
        ?30     = { defs={} expr=v7313[1] }
        ?31     = { defs={} expr=v7314[1] }
        ip      = { defs={0x08048570,0x08048573,0x08048574} expr=0x08048575[32] }
    memory:
    init mem:
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7388[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7388[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7388[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] v7273[32] 12[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7388[32]) }
          flags = { rdonly }
        address = { defs={0x08048570} expr=(add[32] (add[32] v7273[32] 12[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7370[32]) }
          flags = { rdonly }
        address = { defs={0x08048570} expr=(add[32] (add[32] v7273[32] 12[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7370[32]) }
          flags = { rdonly }
        address = { defs={0x08048570} expr=(add[32] (add[32] v7273[32] 12[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7370[32]) }
          flags = { rdonly }
        address = { defs={0x08048570} expr=(add[32] v7273[32] 12[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7370[32]) }
          flags = { rdonly }
0x8048575:pop    edi
    registers:
        ax      = { defs={} expr=v7269[32] }
        cx      = { defs={} expr=v7270[32] }
        dx      = { defs={} expr=v7271[32] }
        bx      = { defs={0x08048573} expr=v7370[32] }
        sp      = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={} expr=v7274[32] }
        si      = { defs={0x08048574} expr=v7388[32] }
        di      = { defs={0x08048575} expr=v7406[32] }
        es      = { defs={} expr=v7277[16] }
        cs      = { defs={} expr=v7278[16] }
        ss      = { defs={} expr=v7279[16] }
        ds      = { defs={} expr=v7280[16] }
        fs      = { defs={} expr=v7281[16] }
        gs      = { defs={} expr=v7282[16] }
        cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33]))))) }
        ?1      = { defs={} expr=v7284[1] }
        pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))))))) }
        ?3      = { defs={} expr=v7286[1] }
        af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33]))))) }
        ?5      = { defs={} expr=v7288[1] }
        zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v7273[32] 12[32])) }
        sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v7273[32] 12[32])) }
        tf      = { defs={} expr=v7291[1] }
        if      = { defs={} expr=v7292[1] }
        df      = { defs={} expr=v7293[1] }
        of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v7295[1] }
        iopl1   = { defs={} expr=v7296[1] }
        nt      = { defs={} expr=v7297[1] }
        ?15     = { defs={} expr=v7298[1] }
        rf      = { defs={} expr=v7299[1] }
        vm      = { defs={} expr=v7300[1] }
        ac      = { defs={} expr=v7301[1] }
        vif     = { defs={} expr=v7302[1] }
        vip     = { defs={} expr=v7303[1] }
        id      = { defs={} expr=v7304[1] }
        ?22     = { defs={} expr=v7305[1] }
        ?23     = { defs={} expr=v7306[1] }
        ?24     = { defs={} expr=v7307[1] }
        ?25     = { defs={} expr=v7308[1] }
        ?26     = { defs={} expr=v7309[1] }
        ?27     = { defs={} expr=v7310[1] }
        ?28     = { defs={} expr=v7311[1] }
        ?29     = { defs={} expr=v7312[1] }
        ?30     = { defs={} expr=v7313[1] }
        ?31     = { defs={} expr=v7314[1] }
        ip      = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=0x08048576[32] }
    memory:
    init mem:
        address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7406[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7406[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7406[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7406[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7388[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7388[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7388[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] v7273[32] 12[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7388[32]) }
          flags = { rdonly }
        address = { defs={0x08048570} expr=(add[32] (add[32] v7273[32] 12[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7370[32]) }
          flags = { rdonly }
        address = { defs={0x08048570} expr=(add[32] (add[32] v7273[32] 12[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7370[32]) }
          flags = { rdonly }
        address = { defs={0x08048570} expr=(add[32] (add[32] v7273[32] 12[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7370[32]) }
          flags = { rdonly }
        address = { defs={0x08048570} expr=(add[32] v7273[32] 12[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7370[32]) }
          flags = { rdonly }
0x8048576:pop    ebp
    registers:
        ax      = { defs={} expr=v7269[32] }
        cx      = { defs={} expr=v7270[32] }
        dx      = { defs={} expr=v7271[32] }
        bx      = { defs={0x08048573} expr=v7370[32] }
        sp      = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={0x08048576} expr=v7424[32] }
        si      = { defs={0x08048574} expr=v7388[32] }
        di      = { defs={0x08048575} expr=v7406[32] }
        es      = { defs={} expr=v7277[16] }
        cs      = { defs={} expr=v7278[16] }
        ss      = { defs={} expr=v7279[16] }
        ds      = { defs={} expr=v7280[16] }
        fs      = { defs={} expr=v7281[16] }
        gs      = { defs={} expr=v7282[16] }
        cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33]))))) }
        ?1      = { defs={} expr=v7284[1] }
        pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))))))) }
        ?3      = { defs={} expr=v7286[1] }
        af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33]))))) }
        ?5      = { defs={} expr=v7288[1] }
        zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v7273[32] 12[32])) }
        sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v7273[32] 12[32])) }
        tf      = { defs={} expr=v7291[1] }
        if      = { defs={} expr=v7292[1] }
        df      = { defs={} expr=v7293[1] }
        of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v7295[1] }
        iopl1   = { defs={} expr=v7296[1] }
        nt      = { defs={} expr=v7297[1] }
        ?15     = { defs={} expr=v7298[1] }
        rf      = { defs={} expr=v7299[1] }
        vm      = { defs={} expr=v7300[1] }
        ac      = { defs={} expr=v7301[1] }
        vif     = { defs={} expr=v7302[1] }
        vip     = { defs={} expr=v7303[1] }
        id      = { defs={} expr=v7304[1] }
        ?22     = { defs={} expr=v7305[1] }
        ?23     = { defs={} expr=v7306[1] }
        ?24     = { defs={} expr=v7307[1] }
        ?25     = { defs={} expr=v7308[1] }
        ?26     = { defs={} expr=v7309[1] }
        ?27     = { defs={} expr=v7310[1] }
        ?28     = { defs={} expr=v7311[1] }
        ?29     = { defs={} expr=v7312[1] }
        ?30     = { defs={} expr=v7313[1] }
        ?31     = { defs={} expr=v7314[1] }
        ip      = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576} expr=0x08048577[32] }
    memory:
    init mem:
        address = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7424[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7424[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7424[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7424[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7406[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7406[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7406[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7406[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7388[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7388[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7388[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] v7273[32] 12[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7388[32]) }
          flags = { rdonly }
        address = { defs={0x08048570} expr=(add[32] (add[32] v7273[32] 12[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7370[32]) }
          flags = { rdonly }
        address = { defs={0x08048570} expr=(add[32] (add[32] v7273[32] 12[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7370[32]) }
          flags = { rdonly }
        address = { defs={0x08048570} expr=(add[32] (add[32] v7273[32] 12[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7370[32]) }
          flags = { rdonly }
        address = { defs={0x08048570} expr=(add[32] v7273[32] 12[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7370[32]) }
          flags = { rdonly }
0x8048577:ret    
    registers:
        ax      = { defs={} expr=v7269[32] }
        cx      = { defs={} expr=v7270[32] }
        dx      = { defs={} expr=v7271[32] }
        bx      = { defs={0x08048573} expr=v7370[32] }
        sp      = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576,0x08048577} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={0x08048576} expr=v7424[32] }
        si      = { defs={0x08048574} expr=v7388[32] }
        di      = { defs={0x08048575} expr=v7406[32] }
        es      = { defs={} expr=v7277[16] }
        cs      = { defs={} expr=v7278[16] }
        ss      = { defs={} expr=v7279[16] }
        ds      = { defs={} expr=v7280[16] }
        fs      = { defs={} expr=v7281[16] }
        gs      = { defs={} expr=v7282[16] }
        cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33]))))) }
        ?1      = { defs={} expr=v7284[1] }
        pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7273[32] 12[32]))))))) }
        ?3      = { defs={} expr=v7286[1] }
        af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33]))))) }
        ?5      = { defs={} expr=v7288[1] }
        zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v7273[32] 12[32])) }
        sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v7273[32] 12[32])) }
        tf      = { defs={} expr=v7291[1] }
        if      = { defs={} expr=v7292[1] }
        df      = { defs={} expr=v7293[1] }
        of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7273[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7273[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v7295[1] }
        iopl1   = { defs={} expr=v7296[1] }
        nt      = { defs={} expr=v7297[1] }
        ?15     = { defs={} expr=v7298[1] }
        rf      = { defs={} expr=v7299[1] }
        vm      = { defs={} expr=v7300[1] }
        ac      = { defs={} expr=v7301[1] }
        vif     = { defs={} expr=v7302[1] }
        vip     = { defs={} expr=v7303[1] }
        id      = { defs={} expr=v7304[1] }
        ?22     = { defs={} expr=v7305[1] }
        ?23     = { defs={} expr=v7306[1] }
        ?24     = { defs={} expr=v7307[1] }
        ?25     = { defs={} expr=v7308[1] }
        ?26     = { defs={} expr=v7309[1] }
        ?27     = { defs={} expr=v7310[1] }
        ?28     = { defs={} expr=v7311[1] }
        ?29     = { defs={} expr=v7312[1] }
        ?30     = { defs={} expr=v7313[1] }
        ?31     = { defs={} expr=v7314[1] }
        ip      = { defs={0x08048577} expr=v7442[32] }
    memory:
    init mem:
        address = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7442[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7442[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7442[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7442[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7424[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7424[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7424[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7424[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7406[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7406[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7406[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7406[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7388[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7388[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v7273[32] 12[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7388[32]) }
          flags = { rdonly }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] v7273[32] 12[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7388[32]) }
          flags = { rdonly }
        address = { defs={0x08048570} expr=(add[32] (add[32] v7273[32] 12[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7370[32]) }
          flags = { rdonly }
        address = { defs={0x08048570} expr=(add[32] (add[32] v7273[32] 12[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7370[32]) }
          flags = { rdonly }
        address = { defs={0x08048570} expr=(add[32] (add[32] v7273[32] 12[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7370[32]) }
          flags = { rdonly }
        address = { defs={0x08048570} expr=(add[32] v7273[32] 12[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7370[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048580:push   ebp
    registers:
        ax      = { defs={} expr=v7503[32] }
        cx      = { defs={} expr=v7504[32] }
        dx      = { defs={} expr=v7505[32] }
        bx      = { defs={} expr=v7506[32] }
        sp      = { defs={0x08048580} expr=(add[32] v7507[32] -4[32]) }
        bp      = { defs={} expr=v7508[32] }
        si      = { defs={} expr=v7509[32] }
        di      = { defs={} expr=v7510[32] }
        es      = { defs={} expr=v7511[16] }
        cs      = { defs={} expr=v7512[16] }
        ss      = { defs={} expr=v7513[16] }
        ds      = { defs={} expr=v7514[16] }
        fs      = { defs={} expr=v7515[16] }
        gs      = { defs={} expr=v7516[16] }
        cf      = { defs={} expr=v7517[1] }
        ?1      = { defs={} expr=v7518[1] }
        pf      = { defs={} expr=v7519[1] }
        ?3      = { defs={} expr=v7520[1] }
        af      = { defs={} expr=v7521[1] }
        ?5      = { defs={} expr=v7522[1] }
        zf      = { defs={} expr=v7523[1] }
        sf      = { defs={} expr=v7524[1] }
        tf      = { defs={} expr=v7525[1] }
        if      = { defs={} expr=v7526[1] }
        df      = { defs={} expr=v7527[1] }
        of      = { defs={} expr=v7528[1] }
        iopl0   = { defs={} expr=v7529[1] }
        iopl1   = { defs={} expr=v7530[1] }
        nt      = { defs={} expr=v7531[1] }
        ?15     = { defs={} expr=v7532[1] }
        rf      = { defs={} expr=v7533[1] }
        vm      = { defs={} expr=v7534[1] }
        ac      = { defs={} expr=v7535[1] }
        vif     = { defs={} expr=v7536[1] }
        vip     = { defs={} expr=v7537[1] }
        id      = { defs={} expr=v7538[1] }
        ?22     = { defs={} expr=v7539[1] }
        ?23     = { defs={} expr=v7540[1] }
        ?24     = { defs={} expr=v7541[1] }
        ?25     = { defs={} expr=v7542[1] }
        ?26     = { defs={} expr=v7543[1] }
        ?27     = { defs={} expr=v7544[1] }
        ?28     = { defs={} expr=v7545[1] }
        ?29     = { defs={} expr=v7546[1] }
        ?30     = { defs={} expr=v7547[1] }
        ?31     = { defs={} expr=v7548[1] }
        ip      = { defs={0x08048580} expr=0x08048581[32] }
    memory:
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 3[32]) }
          value = { defs={0x08048580} expr=(extract[8] 24[32] 32[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 2[32]) }
          value = { defs={0x08048580} expr=(extract[8] 16[32] 24[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 1[32]) }
          value = { defs={0x08048580} expr=(extract[8] 8[32] 16[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] v7507[32] -4[32]) }
          value = { defs={0x08048580} expr=(extract[8] 0[32] 8[32] v7508[32]) }
          flags = { }
    init mem:
0x8048581:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v7503[32] }
        cx      = { defs={} expr=v7504[32] }
        dx      = { defs={} expr=v7505[32] }
        bx      = { defs={} expr=v7506[32] }
        sp      = { defs={0x08048580} expr=(add[32] v7507[32] -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v7507[32] -4[32]) }
        si      = { defs={} expr=v7509[32] }
        di      = { defs={} expr=v7510[32] }
        es      = { defs={} expr=v7511[16] }
        cs      = { defs={} expr=v7512[16] }
        ss      = { defs={} expr=v7513[16] }
        ds      = { defs={} expr=v7514[16] }
        fs      = { defs={} expr=v7515[16] }
        gs      = { defs={} expr=v7516[16] }
        cf      = { defs={} expr=v7517[1] }
        ?1      = { defs={} expr=v7518[1] }
        pf      = { defs={} expr=v7519[1] }
        ?3      = { defs={} expr=v7520[1] }
        af      = { defs={} expr=v7521[1] }
        ?5      = { defs={} expr=v7522[1] }
        zf      = { defs={} expr=v7523[1] }
        sf      = { defs={} expr=v7524[1] }
        tf      = { defs={} expr=v7525[1] }
        if      = { defs={} expr=v7526[1] }
        df      = { defs={} expr=v7527[1] }
        of      = { defs={} expr=v7528[1] }
        iopl0   = { defs={} expr=v7529[1] }
        iopl1   = { defs={} expr=v7530[1] }
        nt      = { defs={} expr=v7531[1] }
        ?15     = { defs={} expr=v7532[1] }
        rf      = { defs={} expr=v7533[1] }
        vm      = { defs={} expr=v7534[1] }
        ac      = { defs={} expr=v7535[1] }
        vif     = { defs={} expr=v7536[1] }
        vip     = { defs={} expr=v7537[1] }
        id      = { defs={} expr=v7538[1] }
        ?22     = { defs={} expr=v7539[1] }
        ?23     = { defs={} expr=v7540[1] }
        ?24     = { defs={} expr=v7541[1] }
        ?25     = { defs={} expr=v7542[1] }
        ?26     = { defs={} expr=v7543[1] }
        ?27     = { defs={} expr=v7544[1] }
        ?28     = { defs={} expr=v7545[1] }
        ?29     = { defs={} expr=v7546[1] }
        ?30     = { defs={} expr=v7547[1] }
        ?31     = { defs={} expr=v7548[1] }
        ip      = { defs={0x08048580,0x08048581} expr=0x08048583[32] }
    memory:
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 3[32]) }
          value = { defs={0x08048580} expr=(extract[8] 24[32] 32[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 2[32]) }
          value = { defs={0x08048580} expr=(extract[8] 16[32] 24[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 1[32]) }
          value = { defs={0x08048580} expr=(extract[8] 8[32] 16[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] v7507[32] -4[32]) }
          value = { defs={0x08048580} expr=(extract[8] 0[32] 8[32] v7508[32]) }
          flags = { }
    init mem:
0x8048583:push   ebx
    registers:
        ax      = { defs={} expr=v7503[32] }
        cx      = { defs={} expr=v7504[32] }
        dx      = { defs={} expr=v7505[32] }
        bx      = { defs={} expr=v7506[32] }
        sp      = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v7507[32] -4[32]) -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v7507[32] -4[32]) }
        si      = { defs={} expr=v7509[32] }
        di      = { defs={} expr=v7510[32] }
        es      = { defs={} expr=v7511[16] }
        cs      = { defs={} expr=v7512[16] }
        ss      = { defs={} expr=v7513[16] }
        ds      = { defs={} expr=v7514[16] }
        fs      = { defs={} expr=v7515[16] }
        gs      = { defs={} expr=v7516[16] }
        cf      = { defs={} expr=v7517[1] }
        ?1      = { defs={} expr=v7518[1] }
        pf      = { defs={} expr=v7519[1] }
        ?3      = { defs={} expr=v7520[1] }
        af      = { defs={} expr=v7521[1] }
        ?5      = { defs={} expr=v7522[1] }
        zf      = { defs={} expr=v7523[1] }
        sf      = { defs={} expr=v7524[1] }
        tf      = { defs={} expr=v7525[1] }
        if      = { defs={} expr=v7526[1] }
        df      = { defs={} expr=v7527[1] }
        of      = { defs={} expr=v7528[1] }
        iopl0   = { defs={} expr=v7529[1] }
        iopl1   = { defs={} expr=v7530[1] }
        nt      = { defs={} expr=v7531[1] }
        ?15     = { defs={} expr=v7532[1] }
        rf      = { defs={} expr=v7533[1] }
        vm      = { defs={} expr=v7534[1] }
        ac      = { defs={} expr=v7535[1] }
        vif     = { defs={} expr=v7536[1] }
        vip     = { defs={} expr=v7537[1] }
        id      = { defs={} expr=v7538[1] }
        ?22     = { defs={} expr=v7539[1] }
        ?23     = { defs={} expr=v7540[1] }
        ?24     = { defs={} expr=v7541[1] }
        ?25     = { defs={} expr=v7542[1] }
        ?26     = { defs={} expr=v7543[1] }
        ?27     = { defs={} expr=v7544[1] }
        ?28     = { defs={} expr=v7545[1] }
        ?29     = { defs={} expr=v7546[1] }
        ?30     = { defs={} expr=v7547[1] }
        ?31     = { defs={} expr=v7548[1] }
        ip      = { defs={0x08048580,0x08048581,0x08048583} expr=0x08048584[32] }
    memory:
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048583} expr=(extract[8] 24[32] 32[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048583} expr=(extract[8] 16[32] 24[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048583} expr=(extract[8] 8[32] 16[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v7507[32] -4[32]) -4[32]) }
          value = { defs={0x08048583} expr=(extract[8] 0[32] 8[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 3[32]) }
          value = { defs={0x08048580} expr=(extract[8] 24[32] 32[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 2[32]) }
          value = { defs={0x08048580} expr=(extract[8] 16[32] 24[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 1[32]) }
          value = { defs={0x08048580} expr=(extract[8] 8[32] 16[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] v7507[32] -4[32]) }
          value = { defs={0x08048580} expr=(extract[8] 0[32] 8[32] v7508[32]) }
          flags = { }
    init mem:
0x8048584:sub    esp, 0x04
    registers:
        ax      = { defs={} expr=v7503[32] }
        cx      = { defs={} expr=v7504[32] }
        dx      = { defs={} expr=v7505[32] }
        bx      = { defs={} expr=v7506[32] }
        sp      = { defs={0x08048580,0x08048583,0x08048584} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v7507[32] -4[32]) }
        si      = { defs={} expr=v7509[32] }
        di      = { defs={} expr=v7510[32] }
        es      = { defs={} expr=v7511[16] }
        cs      = { defs={} expr=v7512[16] }
        ss      = { defs={} expr=v7513[16] }
        ds      = { defs={} expr=v7514[16] }
        fs      = { defs={} expr=v7515[16] }
        gs      = { defs={} expr=v7516[16] }
        cf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) 4294967292[33])))))) }
        ?1      = { defs={} expr=v7518[1] }
        pf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]))))))) }
        ?3      = { defs={} expr=v7520[1] }
        af      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) 4294967292[33])))))) }
        ?5      = { defs={} expr=v7522[1] }
        zf      = { defs={0x08048580,0x08048583,0x08048584} expr=(zerop[1] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32])) }
        sf      = { defs={0x08048580,0x08048583,0x08048584} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32])) }
        tf      = { defs={} expr=v7525[1] }
        if      = { defs={} expr=v7526[1] }
        df      = { defs={} expr=v7527[1] }
        of      = { defs={0x08048580,0x08048583,0x08048584} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) 4294967292[33])))))) }
        iopl0   = { defs={} expr=v7529[1] }
        iopl1   = { defs={} expr=v7530[1] }
        nt      = { defs={} expr=v7531[1] }
        ?15     = { defs={} expr=v7532[1] }
        rf      = { defs={} expr=v7533[1] }
        vm      = { defs={} expr=v7534[1] }
        ac      = { defs={} expr=v7535[1] }
        vif     = { defs={} expr=v7536[1] }
        vip     = { defs={} expr=v7537[1] }
        id      = { defs={} expr=v7538[1] }
        ?22     = { defs={} expr=v7539[1] }
        ?23     = { defs={} expr=v7540[1] }
        ?24     = { defs={} expr=v7541[1] }
        ?25     = { defs={} expr=v7542[1] }
        ?26     = { defs={} expr=v7543[1] }
        ?27     = { defs={} expr=v7544[1] }
        ?28     = { defs={} expr=v7545[1] }
        ?29     = { defs={} expr=v7546[1] }
        ?30     = { defs={} expr=v7547[1] }
        ?31     = { defs={} expr=v7548[1] }
        ip      = { defs={0x08048580,0x08048581,0x08048583,0x08048584} expr=0x08048587[32] }
    memory:
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048583} expr=(extract[8] 24[32] 32[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048583} expr=(extract[8] 16[32] 24[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048583} expr=(extract[8] 8[32] 16[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v7507[32] -4[32]) -4[32]) }
          value = { defs={0x08048583} expr=(extract[8] 0[32] 8[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 3[32]) }
          value = { defs={0x08048580} expr=(extract[8] 24[32] 32[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 2[32]) }
          value = { defs={0x08048580} expr=(extract[8] 16[32] 24[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 1[32]) }
          value = { defs={0x08048580} expr=(extract[8] 8[32] 16[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] v7507[32] -4[32]) }
          value = { defs={0x08048580} expr=(extract[8] 0[32] 8[32] v7508[32]) }
          flags = { }
    init mem:
0x8048587:mov    ebx, 0x080495e8<.ctors>
    registers:
        ax      = { defs={} expr=v7503[32] }
        cx      = { defs={} expr=v7504[32] }
        dx      = { defs={} expr=v7505[32] }
        bx      = { defs={0x08048587} expr=0x080495e8[32] }
        sp      = { defs={0x08048580,0x08048583,0x08048584} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v7507[32] -4[32]) }
        si      = { defs={} expr=v7509[32] }
        di      = { defs={} expr=v7510[32] }
        es      = { defs={} expr=v7511[16] }
        cs      = { defs={} expr=v7512[16] }
        ss      = { defs={} expr=v7513[16] }
        ds      = { defs={} expr=v7514[16] }
        fs      = { defs={} expr=v7515[16] }
        gs      = { defs={} expr=v7516[16] }
        cf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) 4294967292[33])))))) }
        ?1      = { defs={} expr=v7518[1] }
        pf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]))))))) }
        ?3      = { defs={} expr=v7520[1] }
        af      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) 4294967292[33])))))) }
        ?5      = { defs={} expr=v7522[1] }
        zf      = { defs={0x08048580,0x08048583,0x08048584} expr=(zerop[1] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32])) }
        sf      = { defs={0x08048580,0x08048583,0x08048584} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32])) }
        tf      = { defs={} expr=v7525[1] }
        if      = { defs={} expr=v7526[1] }
        df      = { defs={} expr=v7527[1] }
        of      = { defs={0x08048580,0x08048583,0x08048584} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) 4294967292[33])))))) }
        iopl0   = { defs={} expr=v7529[1] }
        iopl1   = { defs={} expr=v7530[1] }
        nt      = { defs={} expr=v7531[1] }
        ?15     = { defs={} expr=v7532[1] }
        rf      = { defs={} expr=v7533[1] }
        vm      = { defs={} expr=v7534[1] }
        ac      = { defs={} expr=v7535[1] }
        vif     = { defs={} expr=v7536[1] }
        vip     = { defs={} expr=v7537[1] }
        id      = { defs={} expr=v7538[1] }
        ?22     = { defs={} expr=v7539[1] }
        ?23     = { defs={} expr=v7540[1] }
        ?24     = { defs={} expr=v7541[1] }
        ?25     = { defs={} expr=v7542[1] }
        ?26     = { defs={} expr=v7543[1] }
        ?27     = { defs={} expr=v7544[1] }
        ?28     = { defs={} expr=v7545[1] }
        ?29     = { defs={} expr=v7546[1] }
        ?30     = { defs={} expr=v7547[1] }
        ?31     = { defs={} expr=v7548[1] }
        ip      = { defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587} expr=0x0804858c[32] }
    memory:
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048583} expr=(extract[8] 24[32] 32[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048583} expr=(extract[8] 16[32] 24[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048583} expr=(extract[8] 8[32] 16[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v7507[32] -4[32]) -4[32]) }
          value = { defs={0x08048583} expr=(extract[8] 0[32] 8[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 3[32]) }
          value = { defs={0x08048580} expr=(extract[8] 24[32] 32[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 2[32]) }
          value = { defs={0x08048580} expr=(extract[8] 16[32] 24[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 1[32]) }
          value = { defs={0x08048580} expr=(extract[8] 8[32] 16[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] v7507[32] -4[32]) }
          value = { defs={0x08048580} expr=(extract[8] 0[32] 8[32] v7508[32]) }
          flags = { }
    init mem:
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8<.ctors>]
    registers:
        ax      = { defs={0x0804858c} expr=v7644[32] }
        cx      = { defs={} expr=v7504[32] }
        dx      = { defs={} expr=v7505[32] }
        bx      = { defs={0x08048587} expr=0x080495e8[32] }
        sp      = { defs={0x08048580,0x08048583,0x08048584} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v7507[32] -4[32]) }
        si      = { defs={} expr=v7509[32] }
        di      = { defs={} expr=v7510[32] }
        es      = { defs={} expr=v7511[16] }
        cs      = { defs={} expr=v7512[16] }
        ss      = { defs={} expr=v7513[16] }
        ds      = { defs={} expr=v7514[16] }
        fs      = { defs={} expr=v7515[16] }
        gs      = { defs={} expr=v7516[16] }
        cf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) 4294967292[33])))))) }
        ?1      = { defs={} expr=v7518[1] }
        pf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]))))))) }
        ?3      = { defs={} expr=v7520[1] }
        af      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) 4294967292[33])))))) }
        ?5      = { defs={} expr=v7522[1] }
        zf      = { defs={0x08048580,0x08048583,0x08048584} expr=(zerop[1] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32])) }
        sf      = { defs={0x08048580,0x08048583,0x08048584} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32])) }
        tf      = { defs={} expr=v7525[1] }
        if      = { defs={} expr=v7526[1] }
        df      = { defs={} expr=v7527[1] }
        of      = { defs={0x08048580,0x08048583,0x08048584} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v7507[32] -4[32]) -4[32])) 4294967292[33])))))) }
        iopl0   = { defs={} expr=v7529[1] }
        iopl1   = { defs={} expr=v7530[1] }
        nt      = { defs={} expr=v7531[1] }
        ?15     = { defs={} expr=v7532[1] }
        rf      = { defs={} expr=v7533[1] }
        vm      = { defs={} expr=v7534[1] }
        ac      = { defs={} expr=v7535[1] }
        vif     = { defs={} expr=v7536[1] }
        vip     = { defs={} expr=v7537[1] }
        id      = { defs={} expr=v7538[1] }
        ?22     = { defs={} expr=v7539[1] }
        ?23     = { defs={} expr=v7540[1] }
        ?24     = { defs={} expr=v7541[1] }
        ?25     = { defs={} expr=v7542[1] }
        ?26     = { defs={} expr=v7543[1] }
        ?27     = { defs={} expr=v7544[1] }
        ?28     = { defs={} expr=v7545[1] }
        ?29     = { defs={} expr=v7546[1] }
        ?30     = { defs={} expr=v7547[1] }
        ?31     = { defs={} expr=v7548[1] }
        ip      = { defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587,0x0804858c} expr=0x08048591[32] }
    memory:
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048583} expr=(extract[8] 24[32] 32[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048583} expr=(extract[8] 16[32] 24[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048583} expr=(extract[8] 8[32] 16[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v7507[32] -4[32]) -4[32]) }
          value = { defs={0x08048583} expr=(extract[8] 0[32] 8[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 3[32]) }
          value = { defs={0x08048580} expr=(extract[8] 24[32] 32[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 2[32]) }
          value = { defs={0x08048580} expr=(extract[8] 16[32] 24[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 1[32]) }
          value = { defs={0x08048580} expr=(extract[8] 8[32] 16[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] v7507[32] -4[32]) }
          value = { defs={0x08048580} expr=(extract[8] 0[32] 8[32] v7508[32]) }
          flags = { }
    init mem:
        address = { defs={0x0804858c} expr=0x080495eb[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7644[32]) }
          flags = { rdonly }
        address = { defs={0x0804858c} expr=0x080495ea[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7644[32]) }
          flags = { rdonly }
        address = { defs={0x0804858c} expr=0x080495e9[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7644[32]) }
          flags = { rdonly }
        address = { defs={0x0804858c} expr=0x080495e8[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7644[32]) }
          flags = { rdonly }
0x8048591:cmp    eax, 0xff<-0x01>
    registers:
        ax      = { defs={0x0804858c} expr=v7644[32] }
        cx      = { defs={} expr=v7504[32] }
        dx      = { defs={} expr=v7505[32] }
        bx      = { defs={0x08048587} expr=0x080495e8[32] }
        sp      = { defs={0x08048580,0x08048583,0x08048584} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v7507[32] -4[32]) }
        si      = { defs={} expr=v7509[32] }
        di      = { defs={} expr=v7510[32] }
        es      = { defs={} expr=v7511[16] }
        cs      = { defs={} expr=v7512[16] }
        ss      = { defs={} expr=v7513[16] }
        ds      = { defs={} expr=v7514[16] }
        fs      = { defs={} expr=v7515[16] }
        gs      = { defs={} expr=v7516[16] }
        cf      = { defs={0x0804858c,0x08048591} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7644[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v7644[32]) 1[33])))))) }
        ?1      = { defs={} expr=v7518[1] }
        pf      = { defs={0x0804858c,0x08048591} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7644[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7644[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7644[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7644[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7644[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7644[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7644[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7644[32] 1[32]))))))) }
        ?3      = { defs={} expr=v7520[1] }
        af      = { defs={0x0804858c,0x08048591} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7644[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v7644[32]) 1[33])))))) }
        ?5      = { defs={} expr=v7522[1] }
        zf      = { defs={0x0804858c,0x08048591} expr=(zerop[1] (add[32] v7644[32] 1[32])) }
        sf      = { defs={0x0804858c,0x08048591} expr=(extract[1] 31[32] 32[32] (add[32] v7644[32] 1[32])) }
        tf      = { defs={} expr=v7525[1] }
        if      = { defs={} expr=v7526[1] }
        df      = { defs={} expr=v7527[1] }
        of      = { defs={0x0804858c,0x08048591} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7644[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v7644[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7644[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v7644[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v7529[1] }
        iopl1   = { defs={} expr=v7530[1] }
        nt      = { defs={} expr=v7531[1] }
        ?15     = { defs={} expr=v7532[1] }
        rf      = { defs={} expr=v7533[1] }
        vm      = { defs={} expr=v7534[1] }
        ac      = { defs={} expr=v7535[1] }
        vif     = { defs={} expr=v7536[1] }
        vip     = { defs={} expr=v7537[1] }
        id      = { defs={} expr=v7538[1] }
        ?22     = { defs={} expr=v7539[1] }
        ?23     = { defs={} expr=v7540[1] }
        ?24     = { defs={} expr=v7541[1] }
        ?25     = { defs={} expr=v7542[1] }
        ?26     = { defs={} expr=v7543[1] }
        ?27     = { defs={} expr=v7544[1] }
        ?28     = { defs={} expr=v7545[1] }
        ?29     = { defs={} expr=v7546[1] }
        ?30     = { defs={} expr=v7547[1] }
        ?31     = { defs={} expr=v7548[1] }
        ip      = { defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587,0x0804858c,0x08048591} expr=0x08048594[32] }
    memory:
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048583} expr=(extract[8] 24[32] 32[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048583} expr=(extract[8] 16[32] 24[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048583} expr=(extract[8] 8[32] 16[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v7507[32] -4[32]) -4[32]) }
          value = { defs={0x08048583} expr=(extract[8] 0[32] 8[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 3[32]) }
          value = { defs={0x08048580} expr=(extract[8] 24[32] 32[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 2[32]) }
          value = { defs={0x08048580} expr=(extract[8] 16[32] 24[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 1[32]) }
          value = { defs={0x08048580} expr=(extract[8] 8[32] 16[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] v7507[32] -4[32]) }
          value = { defs={0x08048580} expr=(extract[8] 0[32] 8[32] v7508[32]) }
          flags = { }
    init mem:
        address = { defs={0x0804858c} expr=0x080495eb[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7644[32]) }
          flags = { rdonly }
        address = { defs={0x0804858c} expr=0x080495ea[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7644[32]) }
          flags = { rdonly }
        address = { defs={0x0804858c} expr=0x080495e9[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7644[32]) }
          flags = { rdonly }
        address = { defs={0x0804858c} expr=0x080495e8[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7644[32]) }
          flags = { rdonly }
0x8048594:je     0x080485ac<<Insn>>
    registers:
        ax      = { defs={0x0804858c} expr=v7644[32] }
        cx      = { defs={} expr=v7504[32] }
        dx      = { defs={} expr=v7505[32] }
        bx      = { defs={0x08048587} expr=0x080495e8[32] }
        sp      = { defs={0x08048580,0x08048583,0x08048584} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v7507[32] -4[32]) }
        si      = { defs={} expr=v7509[32] }
        di      = { defs={} expr=v7510[32] }
        es      = { defs={} expr=v7511[16] }
        cs      = { defs={} expr=v7512[16] }
        ss      = { defs={} expr=v7513[16] }
        ds      = { defs={} expr=v7514[16] }
        fs      = { defs={} expr=v7515[16] }
        gs      = { defs={} expr=v7516[16] }
        cf      = { defs={0x0804858c,0x08048591} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7644[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v7644[32]) 1[33])))))) }
        ?1      = { defs={} expr=v7518[1] }
        pf      = { defs={0x0804858c,0x08048591} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7644[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7644[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7644[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7644[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7644[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7644[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7644[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7644[32] 1[32]))))))) }
        ?3      = { defs={} expr=v7520[1] }
        af      = { defs={0x0804858c,0x08048591} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7644[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v7644[32]) 1[33])))))) }
        ?5      = { defs={} expr=v7522[1] }
        zf      = { defs={0x0804858c,0x08048591} expr=(zerop[1] (add[32] v7644[32] 1[32])) }
        sf      = { defs={0x0804858c,0x08048591} expr=(extract[1] 31[32] 32[32] (add[32] v7644[32] 1[32])) }
        tf      = { defs={} expr=v7525[1] }
        if      = { defs={} expr=v7526[1] }
        df      = { defs={} expr=v7527[1] }
        of      = { defs={0x0804858c,0x08048591} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7644[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v7644[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7644[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v7644[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v7529[1] }
        iopl1   = { defs={} expr=v7530[1] }
        nt      = { defs={} expr=v7531[1] }
        ?15     = { defs={} expr=v7532[1] }
        rf      = { defs={} expr=v7533[1] }
        vm      = { defs={} expr=v7534[1] }
        ac      = { defs={} expr=v7535[1] }
        vif     = { defs={} expr=v7536[1] }
        vip     = { defs={} expr=v7537[1] }
        id      = { defs={} expr=v7538[1] }
        ?22     = { defs={} expr=v7539[1] }
        ?23     = { defs={} expr=v7540[1] }
        ?24     = { defs={} expr=v7541[1] }
        ?25     = { defs={} expr=v7542[1] }
        ?26     = { defs={} expr=v7543[1] }
        ?27     = { defs={} expr=v7544[1] }
        ?28     = { defs={} expr=v7545[1] }
        ?29     = { defs={} expr=v7546[1] }
        ?30     = { defs={} expr=v7547[1] }
        ?31     = { defs={} expr=v7548[1] }
        ip      = { defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587,0x0804858c,0x08048591,0x08048594} expr=(ite[32] (zerop[1] (add[32] v7644[32] 1[32])) 0x080485ac[32] 0x08048596[32]) }
    memory:
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x08048583} expr=(extract[8] 24[32] 32[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x08048583} expr=(extract[8] 16[32] 24[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v7507[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x08048583} expr=(extract[8] 8[32] 16[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v7507[32] -4[32]) -4[32]) }
          value = { defs={0x08048583} expr=(extract[8] 0[32] 8[32] v7506[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 3[32]) }
          value = { defs={0x08048580} expr=(extract[8] 24[32] 32[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 2[32]) }
          value = { defs={0x08048580} expr=(extract[8] 16[32] 24[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] (add[32] v7507[32] -4[32]) 1[32]) }
          value = { defs={0x08048580} expr=(extract[8] 8[32] 16[32] v7508[32]) }
          flags = { }
        address = { defs={0x08048580} expr=(add[32] v7507[32] -4[32]) }
          value = { defs={0x08048580} expr=(extract[8] 0[32] 8[32] v7508[32]) }
          flags = { }
    init mem:
        address = { defs={0x0804858c} expr=0x080495eb[32] }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7644[32]) }
          flags = { rdonly }
        address = { defs={0x0804858c} expr=0x080495ea[32] }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7644[32]) }
          flags = { rdonly }
        address = { defs={0x0804858c} expr=0x080495e9[32] }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7644[32]) }
          flags = { rdonly }
        address = { defs={0x0804858c} expr=0x080495e8[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7644[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
    registers:
        ax      = { defs={} expr=v7762[32] }
        cx      = { defs={} expr=v7763[32] }
        dx      = { defs={} expr=v7764[32] }
        bx      = { defs={} expr=v7765[32] }
        sp      = { defs={} expr=v7766[32] }
        bp      = { defs={} expr=v7767[32] }
        si      = { defs={0x08048596} expr=v7768[32] }
        di      = { defs={} expr=v7769[32] }
        es      = { defs={} expr=v7770[16] }
        cs      = { defs={} expr=v7771[16] }
        ss      = { defs={} expr=v7772[16] }
        ds      = { defs={} expr=v7773[16] }
        fs      = { defs={} expr=v7774[16] }
        gs      = { defs={} expr=v7775[16] }
        cf      = { defs={} expr=v7776[1] }
        ?1      = { defs={} expr=v7777[1] }
        pf      = { defs={} expr=v7778[1] }
        ?3      = { defs={} expr=v7779[1] }
        af      = { defs={} expr=v7780[1] }
        ?5      = { defs={} expr=v7781[1] }
        zf      = { defs={} expr=v7782[1] }
        sf      = { defs={} expr=v7783[1] }
        tf      = { defs={} expr=v7784[1] }
        if      = { defs={} expr=v7785[1] }
        df      = { defs={} expr=v7786[1] }
        of      = { defs={} expr=v7787[1] }
        iopl0   = { defs={} expr=v7788[1] }
        iopl1   = { defs={} expr=v7789[1] }
        nt      = { defs={} expr=v7790[1] }
        ?15     = { defs={} expr=v7791[1] }
        rf      = { defs={} expr=v7792[1] }
        vm      = { defs={} expr=v7793[1] }
        ac      = { defs={} expr=v7794[1] }
        vif     = { defs={} expr=v7795[1] }
        vip     = { defs={} expr=v7796[1] }
        id      = { defs={} expr=v7797[1] }
        ?22     = { defs={} expr=v7798[1] }
        ?23     = { defs={} expr=v7799[1] }
        ?24     = { defs={} expr=v7800[1] }
        ?25     = { defs={} expr=v7801[1] }
        ?26     = { defs={} expr=v7802[1] }
        ?27     = { defs={} expr=v7803[1] }
        ?28     = { defs={} expr=v7804[1] }
        ?29     = { defs={} expr=v7805[1] }
        ?30     = { defs={} expr=v7806[1] }
        ?31     = { defs={} expr=v7807[1] }
        ip      = { defs={0x08048596} expr=0x08048599[32] }
    memory:
    init mem:
0x8048599:lea    edi, [edi + 0x00000000]
    registers:
        ax      = { defs={} expr=v7762[32] }
        cx      = { defs={} expr=v7763[32] }
        dx      = { defs={} expr=v7764[32] }
        bx      = { defs={} expr=v7765[32] }
        sp      = { defs={} expr=v7766[32] }
        bp      = { defs={} expr=v7767[32] }
        si      = { defs={0x08048596} expr=v7768[32] }
        di      = { defs={0x08048599} expr=v7769[32] }
        es      = { defs={} expr=v7770[16] }
        cs      = { defs={} expr=v7771[16] }
        ss      = { defs={} expr=v7772[16] }
        ds      = { defs={} expr=v7773[16] }
        fs      = { defs={} expr=v7774[16] }
        gs      = { defs={} expr=v7775[16] }
        cf      = { defs={} expr=v7776[1] }
        ?1      = { defs={} expr=v7777[1] }
        pf      = { defs={} expr=v7778[1] }
        ?3      = { defs={} expr=v7779[1] }
        af      = { defs={} expr=v7780[1] }
        ?5      = { defs={} expr=v7781[1] }
        zf      = { defs={} expr=v7782[1] }
        sf      = { defs={} expr=v7783[1] }
        tf      = { defs={} expr=v7784[1] }
        if      = { defs={} expr=v7785[1] }
        df      = { defs={} expr=v7786[1] }
        of      = { defs={} expr=v7787[1] }
        iopl0   = { defs={} expr=v7788[1] }
        iopl1   = { defs={} expr=v7789[1] }
        nt      = { defs={} expr=v7790[1] }
        ?15     = { defs={} expr=v7791[1] }
        rf      = { defs={} expr=v7792[1] }
        vm      = { defs={} expr=v7793[1] }
        ac      = { defs={} expr=v7794[1] }
        vif     = { defs={} expr=v7795[1] }
        vip     = { defs={} expr=v7796[1] }
        id      = { defs={} expr=v7797[1] }
        ?22     = { defs={} expr=v7798[1] }
        ?23     = { defs={} expr=v7799[1] }
        ?24     = { defs={} expr=v7800[1] }
        ?25     = { defs={} expr=v7801[1] }
        ?26     = { defs={} expr=v7802[1] }
        ?27     = { defs={} expr=v7803[1] }
        ?28     = { defs={} expr=v7804[1] }
        ?29     = { defs={} expr=v7805[1] }
        ?30     = { defs={} expr=v7806[1] }
        ?31     = { defs={} expr=v7807[1] }
        ip      = { defs={0x08048596,0x08048599} expr=0x080485a0[32] }
    memory:
    init mem:
0x80485a0:sub    ebx, 0x04
    registers:
        ax      = { defs={} expr=v7762[32] }
        cx      = { defs={} expr=v7763[32] }
        dx      = { defs={} expr=v7764[32] }
        bx      = { defs={0x080485a0} expr=(add[32] v7765[32] -4[32]) }
        sp      = { defs={} expr=v7766[32] }
        bp      = { defs={} expr=v7767[32] }
        si      = { defs={0x08048596} expr=v7768[32] }
        di      = { defs={0x08048599} expr=v7769[32] }
        es      = { defs={} expr=v7770[16] }
        cs      = { defs={} expr=v7771[16] }
        ss      = { defs={} expr=v7772[16] }
        ds      = { defs={} expr=v7773[16] }
        fs      = { defs={} expr=v7774[16] }
        gs      = { defs={} expr=v7775[16] }
        cf      = { defs={0x080485a0} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7765[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v7765[32]) 4294967292[33])))))) }
        ?1      = { defs={} expr=v7777[1] }
        pf      = { defs={0x080485a0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7765[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7765[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7765[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7765[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7765[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7765[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7765[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7765[32] -4[32]))))))) }
        ?3      = { defs={} expr=v7779[1] }
        af      = { defs={0x080485a0} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7765[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v7765[32]) 4294967292[33])))))) }
        ?5      = { defs={} expr=v7781[1] }
        zf      = { defs={0x080485a0} expr=(zerop[1] (add[32] v7765[32] -4[32])) }
        sf      = { defs={0x080485a0} expr=(extract[1] 31[32] 32[32] (add[32] v7765[32] -4[32])) }
        tf      = { defs={} expr=v7784[1] }
        if      = { defs={} expr=v7785[1] }
        df      = { defs={} expr=v7786[1] }
        of      = { defs={0x080485a0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7765[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v7765[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7765[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v7765[32]) 4294967292[33])))))) }
        iopl0   = { defs={} expr=v7788[1] }
        iopl1   = { defs={} expr=v7789[1] }
        nt      = { defs={} expr=v7790[1] }
        ?15     = { defs={} expr=v7791[1] }
        rf      = { defs={} expr=v7792[1] }
        vm      = { defs={} expr=v7793[1] }
        ac      = { defs={} expr=v7794[1] }
        vif     = { defs={} expr=v7795[1] }
        vip     = { defs={} expr=v7796[1] }
        id      = { defs={} expr=v7797[1] }
        ?22     = { defs={} expr=v7798[1] }
        ?23     = { defs={} expr=v7799[1] }
        ?24     = { defs={} expr=v7800[1] }
        ?25     = { defs={} expr=v7801[1] }
        ?26     = { defs={} expr=v7802[1] }
        ?27     = { defs={} expr=v7803[1] }
        ?28     = { defs={} expr=v7804[1] }
        ?29     = { defs={} expr=v7805[1] }
        ?30     = { defs={} expr=v7806[1] }
        ?31     = { defs={} expr=v7807[1] }
        ip      = { defs={0x08048596,0x08048599,0x080485a0} expr=0x080485a3[32] }
    memory:
    init mem:
0x80485a3:call   eax
    registers:
        ax      = { defs={} expr=v7762[32] }
        cx      = { defs={} expr=v7763[32] }
        dx      = { defs={} expr=v7764[32] }
        bx      = { defs={0x080485a0} expr=(add[32] v7765[32] -4[32]) }
        sp      = { defs={0x080485a3} expr=(add[32] v7766[32] -4[32]) }
        bp      = { defs={} expr=v7767[32] }
        si      = { defs={0x08048596} expr=v7768[32] }
        di      = { defs={0x08048599} expr=v7769[32] }
        es      = { defs={} expr=v7770[16] }
        cs      = { defs={} expr=v7771[16] }
        ss      = { defs={} expr=v7772[16] }
        ds      = { defs={} expr=v7773[16] }
        fs      = { defs={} expr=v7774[16] }
        gs      = { defs={} expr=v7775[16] }
        cf      = { defs={0x080485a0} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7765[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v7765[32]) 4294967292[33])))))) }
        ?1      = { defs={} expr=v7777[1] }
        pf      = { defs={0x080485a0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7765[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7765[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7765[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7765[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7765[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7765[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7765[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7765[32] -4[32]))))))) }
        ?3      = { defs={} expr=v7779[1] }
        af      = { defs={0x080485a0} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7765[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v7765[32]) 4294967292[33])))))) }
        ?5      = { defs={} expr=v7781[1] }
        zf      = { defs={0x080485a0} expr=(zerop[1] (add[32] v7765[32] -4[32])) }
        sf      = { defs={0x080485a0} expr=(extract[1] 31[32] 32[32] (add[32] v7765[32] -4[32])) }
        tf      = { defs={} expr=v7784[1] }
        if      = { defs={} expr=v7785[1] }
        df      = { defs={} expr=v7786[1] }
        of      = { defs={0x080485a0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7765[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v7765[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7765[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v7765[32]) 4294967292[33])))))) }
        iopl0   = { defs={} expr=v7788[1] }
        iopl1   = { defs={} expr=v7789[1] }
        nt      = { defs={} expr=v7790[1] }
        ?15     = { defs={} expr=v7791[1] }
        rf      = { defs={} expr=v7792[1] }
        vm      = { defs={} expr=v7793[1] }
        ac      = { defs={} expr=v7794[1] }
        vif     = { defs={} expr=v7795[1] }
        vip     = { defs={} expr=v7796[1] }
        id      = { defs={} expr=v7797[1] }
        ?22     = { defs={} expr=v7798[1] }
        ?23     = { defs={} expr=v7799[1] }
        ?24     = { defs={} expr=v7800[1] }
        ?25     = { defs={} expr=v7801[1] }
        ?26     = { defs={} expr=v7802[1] }
        ?27     = { defs={} expr=v7803[1] }
        ?28     = { defs={} expr=v7804[1] }
        ?29     = { defs={} expr=v7805[1] }
        ?30     = { defs={} expr=v7806[1] }
        ?31     = { defs={} expr=v7807[1] }
        ip      = { defs={0x080485a3} expr=v7762[32] }
    memory:
        address = { defs={0x080485a3} expr=(add[32] (add[32] v7766[32] -4[32]) 3[32]) }
          value = { defs={0x08048596,0x08048599,0x080485a0,0x080485a3} expr=8[8] }
          flags = { }
        address = { defs={0x080485a3} expr=(add[32] (add[32] v7766[32] -4[32]) 2[32]) }
          value = { defs={0x08048596,0x08048599,0x080485a0,0x080485a3} expr=4[8] }
          flags = { }
        address = { defs={0x080485a3} expr=(add[32] (add[32] v7766[32] -4[32]) 1[32]) }
          value = { defs={0x08048596,0x08048599,0x080485a0,0x080485a3} expr=-123[8] }
          flags = { }
        address = { defs={0x080485a3} expr=(add[32] v7766[32] -4[32]) }
          value = { defs={0x08048596,0x08048599,0x080485a0,0x080485a3} expr=-91[8] }
          flags = { }
    init mem:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    registers:
        ax      = { defs={0x080485a5} expr=v7989[32] }
        cx      = { defs={} expr=v7939[32] }
        dx      = { defs={} expr=v7940[32] }
        bx      = { defs={} expr=v7941[32] }
        sp      = { defs={} expr=v7942[32] }
        bp      = { defs={} expr=v7943[32] }
        si      = { defs={} expr=v7944[32] }
        di      = { defs={} expr=v7945[32] }
        es      = { defs={} expr=v7946[16] }
        cs      = { defs={} expr=v7947[16] }
        ss      = { defs={} expr=v7948[16] }
        ds      = { defs={} expr=v7949[16] }
        fs      = { defs={} expr=v7950[16] }
        gs      = { defs={} expr=v7951[16] }
        cf      = { defs={} expr=v7952[1] }
        ?1      = { defs={} expr=v7953[1] }
        pf      = { defs={} expr=v7954[1] }
        ?3      = { defs={} expr=v7955[1] }
        af      = { defs={} expr=v7956[1] }
        ?5      = { defs={} expr=v7957[1] }
        zf      = { defs={} expr=v7958[1] }
        sf      = { defs={} expr=v7959[1] }
        tf      = { defs={} expr=v7960[1] }
        if      = { defs={} expr=v7961[1] }
        df      = { defs={} expr=v7962[1] }
        of      = { defs={} expr=v7963[1] }
        iopl0   = { defs={} expr=v7964[1] }
        iopl1   = { defs={} expr=v7965[1] }
        nt      = { defs={} expr=v7966[1] }
        ?15     = { defs={} expr=v7967[1] }
        rf      = { defs={} expr=v7968[1] }
        vm      = { defs={} expr=v7969[1] }
        ac      = { defs={} expr=v7970[1] }
        vif     = { defs={} expr=v7971[1] }
        vip     = { defs={} expr=v7972[1] }
        id      = { defs={} expr=v7973[1] }
        ?22     = { defs={} expr=v7974[1] }
        ?23     = { defs={} expr=v7975[1] }
        ?24     = { defs={} expr=v7976[1] }
        ?25     = { defs={} expr=v7977[1] }
        ?26     = { defs={} expr=v7978[1] }
        ?27     = { defs={} expr=v7979[1] }
        ?28     = { defs={} expr=v7980[1] }
        ?29     = { defs={} expr=v7981[1] }
        ?30     = { defs={} expr=v7982[1] }
        ?31     = { defs={} expr=v7983[1] }
        ip      = { defs={0x080485a5} expr=0x080485a7[32] }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v7941[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7989[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v7941[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7989[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v7941[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7989[32]) }
          flags = { rdonly }
        address = { defs={} expr=v7941[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7989[32]) }
          flags = { rdonly }
0x80485a7:cmp    eax, 0xff<-0x01>
    registers:
        ax      = { defs={0x080485a5} expr=v7989[32] }
        cx      = { defs={} expr=v7939[32] }
        dx      = { defs={} expr=v7940[32] }
        bx      = { defs={} expr=v7941[32] }
        sp      = { defs={} expr=v7942[32] }
        bp      = { defs={} expr=v7943[32] }
        si      = { defs={} expr=v7944[32] }
        di      = { defs={} expr=v7945[32] }
        es      = { defs={} expr=v7946[16] }
        cs      = { defs={} expr=v7947[16] }
        ss      = { defs={} expr=v7948[16] }
        ds      = { defs={} expr=v7949[16] }
        fs      = { defs={} expr=v7950[16] }
        gs      = { defs={} expr=v7951[16] }
        cf      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7989[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v7989[32]) 1[33])))))) }
        ?1      = { defs={} expr=v7953[1] }
        pf      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7989[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7989[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7989[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7989[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7989[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7989[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7989[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7989[32] 1[32]))))))) }
        ?3      = { defs={} expr=v7955[1] }
        af      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7989[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v7989[32]) 1[33])))))) }
        ?5      = { defs={} expr=v7957[1] }
        zf      = { defs={0x080485a5,0x080485a7} expr=(zerop[1] (add[32] v7989[32] 1[32])) }
        sf      = { defs={0x080485a5,0x080485a7} expr=(extract[1] 31[32] 32[32] (add[32] v7989[32] 1[32])) }
        tf      = { defs={} expr=v7960[1] }
        if      = { defs={} expr=v7961[1] }
        df      = { defs={} expr=v7962[1] }
        of      = { defs={0x080485a5,0x080485a7} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7989[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v7989[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7989[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v7989[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v7964[1] }
        iopl1   = { defs={} expr=v7965[1] }
        nt      = { defs={} expr=v7966[1] }
        ?15     = { defs={} expr=v7967[1] }
        rf      = { defs={} expr=v7968[1] }
        vm      = { defs={} expr=v7969[1] }
        ac      = { defs={} expr=v7970[1] }
        vif     = { defs={} expr=v7971[1] }
        vip     = { defs={} expr=v7972[1] }
        id      = { defs={} expr=v7973[1] }
        ?22     = { defs={} expr=v7974[1] }
        ?23     = { defs={} expr=v7975[1] }
        ?24     = { defs={} expr=v7976[1] }
        ?25     = { defs={} expr=v7977[1] }
        ?26     = { defs={} expr=v7978[1] }
        ?27     = { defs={} expr=v7979[1] }
        ?28     = { defs={} expr=v7980[1] }
        ?29     = { defs={} expr=v7981[1] }
        ?30     = { defs={} expr=v7982[1] }
        ?31     = { defs={} expr=v7983[1] }
        ip      = { defs={0x080485a5,0x080485a7} expr=0x080485aa[32] }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v7941[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7989[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v7941[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7989[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v7941[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7989[32]) }
          flags = { rdonly }
        address = { defs={} expr=v7941[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7989[32]) }
          flags = { rdonly }
0x80485aa:jne    0x080485a0<<Insn>>
    registers:
        ax      = { defs={0x080485a5} expr=v7989[32] }
        cx      = { defs={} expr=v7939[32] }
        dx      = { defs={} expr=v7940[32] }
        bx      = { defs={} expr=v7941[32] }
        sp      = { defs={} expr=v7942[32] }
        bp      = { defs={} expr=v7943[32] }
        si      = { defs={} expr=v7944[32] }
        di      = { defs={} expr=v7945[32] }
        es      = { defs={} expr=v7946[16] }
        cs      = { defs={} expr=v7947[16] }
        ss      = { defs={} expr=v7948[16] }
        ds      = { defs={} expr=v7949[16] }
        fs      = { defs={} expr=v7950[16] }
        gs      = { defs={} expr=v7951[16] }
        cf      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7989[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v7989[32]) 1[33])))))) }
        ?1      = { defs={} expr=v7953[1] }
        pf      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7989[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7989[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7989[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7989[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7989[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7989[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7989[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7989[32] 1[32]))))))) }
        ?3      = { defs={} expr=v7955[1] }
        af      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7989[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v7989[32]) 1[33])))))) }
        ?5      = { defs={} expr=v7957[1] }
        zf      = { defs={0x080485a5,0x080485a7} expr=(zerop[1] (add[32] v7989[32] 1[32])) }
        sf      = { defs={0x080485a5,0x080485a7} expr=(extract[1] 31[32] 32[32] (add[32] v7989[32] 1[32])) }
        tf      = { defs={} expr=v7960[1] }
        if      = { defs={} expr=v7961[1] }
        df      = { defs={} expr=v7962[1] }
        of      = { defs={0x080485a5,0x080485a7} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7989[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v7989[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7989[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v7989[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v7964[1] }
        iopl1   = { defs={} expr=v7965[1] }
        nt      = { defs={} expr=v7966[1] }
        ?15     = { defs={} expr=v7967[1] }
        rf      = { defs={} expr=v7968[1] }
        vm      = { defs={} expr=v7969[1] }
        ac      = { defs={} expr=v7970[1] }
        vif     = { defs={} expr=v7971[1] }
        vip     = { defs={} expr=v7972[1] }
        id      = { defs={} expr=v7973[1] }
        ?22     = { defs={} expr=v7974[1] }
        ?23     = { defs={} expr=v7975[1] }
        ?24     = { defs={} expr=v7976[1] }
        ?25     = { defs={} expr=v7977[1] }
        ?26     = { defs={} expr=v7978[1] }
        ?27     = { defs={} expr=v7979[1] }
        ?28     = { defs={} expr=v7980[1] }
        ?29     = { defs={} expr=v7981[1] }
        ?30     = { defs={} expr=v7982[1] }
        ?31     = { defs={} expr=v7983[1] }
        ip      = { defs={0x080485a5,0x080485a7,0x080485aa} expr=(ite[32] (invert[1] (zerop[1] (add[32] v7989[32] 1[32]))) 0x080485a0[32] 0x080485ac[32]) }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v7941[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v7989[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v7941[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v7989[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v7941[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v7989[32]) }
          flags = { rdonly }
        address = { defs={} expr=v7941[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v7989[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
    registers:
        ax      = { defs={0x080485ac} expr=v8161[32] }
        cx      = { defs={} expr=v8109[32] }
        dx      = { defs={} expr=v8110[32] }
        bx      = { defs={} expr=v8111[32] }
        sp      = { defs={0x080485ac} expr=(add[32] v8112[32] 4[32]) }
        bp      = { defs={} expr=v8113[32] }
        si      = { defs={} expr=v8114[32] }
        di      = { defs={} expr=v8115[32] }
        es      = { defs={} expr=v8116[16] }
        cs      = { defs={} expr=v8117[16] }
        ss      = { defs={} expr=v8118[16] }
        ds      = { defs={} expr=v8119[16] }
        fs      = { defs={} expr=v8120[16] }
        gs      = { defs={} expr=v8121[16] }
        cf      = { defs={} expr=v8122[1] }
        ?1      = { defs={} expr=v8123[1] }
        pf      = { defs={} expr=v8124[1] }
        ?3      = { defs={} expr=v8125[1] }
        af      = { defs={} expr=v8126[1] }
        ?5      = { defs={} expr=v8127[1] }
        zf      = { defs={} expr=v8128[1] }
        sf      = { defs={} expr=v8129[1] }
        tf      = { defs={} expr=v8130[1] }
        if      = { defs={} expr=v8131[1] }
        df      = { defs={} expr=v8132[1] }
        of      = { defs={} expr=v8133[1] }
        iopl0   = { defs={} expr=v8134[1] }
        iopl1   = { defs={} expr=v8135[1] }
        nt      = { defs={} expr=v8136[1] }
        ?15     = { defs={} expr=v8137[1] }
        rf      = { defs={} expr=v8138[1] }
        vm      = { defs={} expr=v8139[1] }
        ac      = { defs={} expr=v8140[1] }
        vif     = { defs={} expr=v8141[1] }
        vip     = { defs={} expr=v8142[1] }
        id      = { defs={} expr=v8143[1] }
        ?22     = { defs={} expr=v8144[1] }
        ?23     = { defs={} expr=v8145[1] }
        ?24     = { defs={} expr=v8146[1] }
        ?25     = { defs={} expr=v8147[1] }
        ?26     = { defs={} expr=v8148[1] }
        ?27     = { defs={} expr=v8149[1] }
        ?28     = { defs={} expr=v8150[1] }
        ?29     = { defs={} expr=v8151[1] }
        ?30     = { defs={} expr=v8152[1] }
        ?31     = { defs={} expr=v8153[1] }
        ip      = { defs={0x080485ac} expr=0x080485ad[32] }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v8112[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8161[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8112[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8161[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8112[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8161[32]) }
          flags = { rdonly }
        address = { defs={} expr=v8112[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8161[32]) }
          flags = { rdonly }
0x80485ad:pop    ebx
    registers:
        ax      = { defs={0x080485ac} expr=v8161[32] }
        cx      = { defs={} expr=v8109[32] }
        dx      = { defs={} expr=v8110[32] }
        bx      = { defs={0x080485ad} expr=v8179[32] }
        sp      = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] v8112[32] 4[32]) 4[32]) }
        bp      = { defs={} expr=v8113[32] }
        si      = { defs={} expr=v8114[32] }
        di      = { defs={} expr=v8115[32] }
        es      = { defs={} expr=v8116[16] }
        cs      = { defs={} expr=v8117[16] }
        ss      = { defs={} expr=v8118[16] }
        ds      = { defs={} expr=v8119[16] }
        fs      = { defs={} expr=v8120[16] }
        gs      = { defs={} expr=v8121[16] }
        cf      = { defs={} expr=v8122[1] }
        ?1      = { defs={} expr=v8123[1] }
        pf      = { defs={} expr=v8124[1] }
        ?3      = { defs={} expr=v8125[1] }
        af      = { defs={} expr=v8126[1] }
        ?5      = { defs={} expr=v8127[1] }
        zf      = { defs={} expr=v8128[1] }
        sf      = { defs={} expr=v8129[1] }
        tf      = { defs={} expr=v8130[1] }
        if      = { defs={} expr=v8131[1] }
        df      = { defs={} expr=v8132[1] }
        of      = { defs={} expr=v8133[1] }
        iopl0   = { defs={} expr=v8134[1] }
        iopl1   = { defs={} expr=v8135[1] }
        nt      = { defs={} expr=v8136[1] }
        ?15     = { defs={} expr=v8137[1] }
        rf      = { defs={} expr=v8138[1] }
        vm      = { defs={} expr=v8139[1] }
        ac      = { defs={} expr=v8140[1] }
        vif     = { defs={} expr=v8141[1] }
        vip     = { defs={} expr=v8142[1] }
        id      = { defs={} expr=v8143[1] }
        ?22     = { defs={} expr=v8144[1] }
        ?23     = { defs={} expr=v8145[1] }
        ?24     = { defs={} expr=v8146[1] }
        ?25     = { defs={} expr=v8147[1] }
        ?26     = { defs={} expr=v8148[1] }
        ?27     = { defs={} expr=v8149[1] }
        ?28     = { defs={} expr=v8150[1] }
        ?29     = { defs={} expr=v8151[1] }
        ?30     = { defs={} expr=v8152[1] }
        ?31     = { defs={} expr=v8153[1] }
        ip      = { defs={0x080485ac,0x080485ad} expr=0x080485ae[32] }
    memory:
    init mem:
        address = { defs={0x080485ac} expr=(add[32] (add[32] v8112[32] 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8179[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac} expr=(add[32] (add[32] v8112[32] 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8179[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac} expr=(add[32] (add[32] v8112[32] 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8179[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac} expr=(add[32] v8112[32] 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8179[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8112[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8161[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8112[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8161[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8112[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8161[32]) }
          flags = { rdonly }
        address = { defs={} expr=v8112[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8161[32]) }
          flags = { rdonly }
0x80485ae:pop    ebp
    registers:
        ax      = { defs={0x080485ac} expr=v8161[32] }
        cx      = { defs={} expr=v8109[32] }
        dx      = { defs={} expr=v8110[32] }
        bx      = { defs={0x080485ad} expr=v8179[32] }
        sp      = { defs={0x080485ac,0x080485ad,0x080485ae} expr=(add[32] (add[32] (add[32] v8112[32] 4[32]) 4[32]) 4[32]) }
        bp      = { defs={0x080485ae} expr=v8197[32] }
        si      = { defs={} expr=v8114[32] }
        di      = { defs={} expr=v8115[32] }
        es      = { defs={} expr=v8116[16] }
        cs      = { defs={} expr=v8117[16] }
        ss      = { defs={} expr=v8118[16] }
        ds      = { defs={} expr=v8119[16] }
        fs      = { defs={} expr=v8120[16] }
        gs      = { defs={} expr=v8121[16] }
        cf      = { defs={} expr=v8122[1] }
        ?1      = { defs={} expr=v8123[1] }
        pf      = { defs={} expr=v8124[1] }
        ?3      = { defs={} expr=v8125[1] }
        af      = { defs={} expr=v8126[1] }
        ?5      = { defs={} expr=v8127[1] }
        zf      = { defs={} expr=v8128[1] }
        sf      = { defs={} expr=v8129[1] }
        tf      = { defs={} expr=v8130[1] }
        if      = { defs={} expr=v8131[1] }
        df      = { defs={} expr=v8132[1] }
        of      = { defs={} expr=v8133[1] }
        iopl0   = { defs={} expr=v8134[1] }
        iopl1   = { defs={} expr=v8135[1] }
        nt      = { defs={} expr=v8136[1] }
        ?15     = { defs={} expr=v8137[1] }
        rf      = { defs={} expr=v8138[1] }
        vm      = { defs={} expr=v8139[1] }
        ac      = { defs={} expr=v8140[1] }
        vif     = { defs={} expr=v8141[1] }
        vip     = { defs={} expr=v8142[1] }
        id      = { defs={} expr=v8143[1] }
        ?22     = { defs={} expr=v8144[1] }
        ?23     = { defs={} expr=v8145[1] }
        ?24     = { defs={} expr=v8146[1] }
        ?25     = { defs={} expr=v8147[1] }
        ?26     = { defs={} expr=v8148[1] }
        ?27     = { defs={} expr=v8149[1] }
        ?28     = { defs={} expr=v8150[1] }
        ?29     = { defs={} expr=v8151[1] }
        ?30     = { defs={} expr=v8152[1] }
        ?31     = { defs={} expr=v8153[1] }
        ip      = { defs={0x080485ac,0x080485ad,0x080485ae} expr=0x080485af[32] }
    memory:
    init mem:
        address = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] (add[32] v8112[32] 4[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8197[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] (add[32] v8112[32] 4[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8197[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] (add[32] v8112[32] 4[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8197[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] v8112[32] 4[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8197[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac} expr=(add[32] (add[32] v8112[32] 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8179[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac} expr=(add[32] (add[32] v8112[32] 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8179[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac} expr=(add[32] (add[32] v8112[32] 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8179[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac} expr=(add[32] v8112[32] 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8179[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8112[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8161[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8112[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8161[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8112[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8161[32]) }
          flags = { rdonly }
        address = { defs={} expr=v8112[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8161[32]) }
          flags = { rdonly }
0x80485af:ret    
    registers:
        ax      = { defs={0x080485ac} expr=v8161[32] }
        cx      = { defs={} expr=v8109[32] }
        dx      = { defs={} expr=v8110[32] }
        bx      = { defs={0x080485ad} expr=v8179[32] }
        sp      = { defs={0x080485ac,0x080485ad,0x080485ae,0x080485af} expr=(add[32] (add[32] (add[32] (add[32] v8112[32] 4[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={0x080485ae} expr=v8197[32] }
        si      = { defs={} expr=v8114[32] }
        di      = { defs={} expr=v8115[32] }
        es      = { defs={} expr=v8116[16] }
        cs      = { defs={} expr=v8117[16] }
        ss      = { defs={} expr=v8118[16] }
        ds      = { defs={} expr=v8119[16] }
        fs      = { defs={} expr=v8120[16] }
        gs      = { defs={} expr=v8121[16] }
        cf      = { defs={} expr=v8122[1] }
        ?1      = { defs={} expr=v8123[1] }
        pf      = { defs={} expr=v8124[1] }
        ?3      = { defs={} expr=v8125[1] }
        af      = { defs={} expr=v8126[1] }
        ?5      = { defs={} expr=v8127[1] }
        zf      = { defs={} expr=v8128[1] }
        sf      = { defs={} expr=v8129[1] }
        tf      = { defs={} expr=v8130[1] }
        if      = { defs={} expr=v8131[1] }
        df      = { defs={} expr=v8132[1] }
        of      = { defs={} expr=v8133[1] }
        iopl0   = { defs={} expr=v8134[1] }
        iopl1   = { defs={} expr=v8135[1] }
        nt      = { defs={} expr=v8136[1] }
        ?15     = { defs={} expr=v8137[1] }
        rf      = { defs={} expr=v8138[1] }
        vm      = { defs={} expr=v8139[1] }
        ac      = { defs={} expr=v8140[1] }
        vif     = { defs={} expr=v8141[1] }
        vip     = { defs={} expr=v8142[1] }
        id      = { defs={} expr=v8143[1] }
        ?22     = { defs={} expr=v8144[1] }
        ?23     = { defs={} expr=v8145[1] }
        ?24     = { defs={} expr=v8146[1] }
        ?25     = { defs={} expr=v8147[1] }
        ?26     = { defs={} expr=v8148[1] }
        ?27     = { defs={} expr=v8149[1] }
        ?28     = { defs={} expr=v8150[1] }
        ?29     = { defs={} expr=v8151[1] }
        ?30     = { defs={} expr=v8152[1] }
        ?31     = { defs={} expr=v8153[1] }
        ip      = { defs={0x080485af} expr=v8215[32] }
    memory:
    init mem:
        address = { defs={0x080485ac,0x080485ad,0x080485ae} expr=(add[32] (add[32] (add[32] (add[32] v8112[32] 4[32]) 4[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8215[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac,0x080485ad,0x080485ae} expr=(add[32] (add[32] (add[32] (add[32] v8112[32] 4[32]) 4[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8215[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac,0x080485ad,0x080485ae} expr=(add[32] (add[32] (add[32] (add[32] v8112[32] 4[32]) 4[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8215[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac,0x080485ad,0x080485ae} expr=(add[32] (add[32] (add[32] v8112[32] 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8215[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] (add[32] v8112[32] 4[32]) 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8197[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] (add[32] v8112[32] 4[32]) 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8197[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] (add[32] v8112[32] 4[32]) 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8197[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] v8112[32] 4[32]) 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8197[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac} expr=(add[32] (add[32] v8112[32] 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8179[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac} expr=(add[32] (add[32] v8112[32] 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8179[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac} expr=(add[32] (add[32] v8112[32] 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8179[32]) }
          flags = { rdonly }
        address = { defs={0x080485ac} expr=(add[32] v8112[32] 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8179[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8112[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8161[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8112[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8161[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8112[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8161[32]) }
          flags = { rdonly }
        address = { defs={} expr=v8112[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8161[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
    registers:
        ax      = { defs={} expr=v8276[32] }
        cx      = { defs={} expr=v8277[32] }
        dx      = { defs={} expr=v8278[32] }
        bx      = { defs={} expr=v8279[32] }
        sp      = { defs={0x080485b0} expr=(add[32] v8280[32] -4[32]) }
        bp      = { defs={} expr=v8281[32] }
        si      = { defs={} expr=v8282[32] }
        di      = { defs={} expr=v8283[32] }
        es      = { defs={} expr=v8284[16] }
        cs      = { defs={} expr=v8285[16] }
        ss      = { defs={} expr=v8286[16] }
        ds      = { defs={} expr=v8287[16] }
        fs      = { defs={} expr=v8288[16] }
        gs      = { defs={} expr=v8289[16] }
        cf      = { defs={} expr=v8290[1] }
        ?1      = { defs={} expr=v8291[1] }
        pf      = { defs={} expr=v8292[1] }
        ?3      = { defs={} expr=v8293[1] }
        af      = { defs={} expr=v8294[1] }
        ?5      = { defs={} expr=v8295[1] }
        zf      = { defs={} expr=v8296[1] }
        sf      = { defs={} expr=v8297[1] }
        tf      = { defs={} expr=v8298[1] }
        if      = { defs={} expr=v8299[1] }
        df      = { defs={} expr=v8300[1] }
        of      = { defs={} expr=v8301[1] }
        iopl0   = { defs={} expr=v8302[1] }
        iopl1   = { defs={} expr=v8303[1] }
        nt      = { defs={} expr=v8304[1] }
        ?15     = { defs={} expr=v8305[1] }
        rf      = { defs={} expr=v8306[1] }
        vm      = { defs={} expr=v8307[1] }
        ac      = { defs={} expr=v8308[1] }
        vif     = { defs={} expr=v8309[1] }
        vip     = { defs={} expr=v8310[1] }
        id      = { defs={} expr=v8311[1] }
        ?22     = { defs={} expr=v8312[1] }
        ?23     = { defs={} expr=v8313[1] }
        ?24     = { defs={} expr=v8314[1] }
        ?25     = { defs={} expr=v8315[1] }
        ?26     = { defs={} expr=v8316[1] }
        ?27     = { defs={} expr=v8317[1] }
        ?28     = { defs={} expr=v8318[1] }
        ?29     = { defs={} expr=v8319[1] }
        ?30     = { defs={} expr=v8320[1] }
        ?31     = { defs={} expr=v8321[1] }
        ip      = { defs={0x080485b0} expr=0x080485b1[32] }
    memory:
        address = { defs={0x080485b0} expr=(add[32] (add[32] v8280[32] -4[32]) 3[32]) }
          value = { defs={0x080485b0} expr=(extract[8] 24[32] 32[32] v8281[32]) }
          flags = { }
        address = { defs={0x080485b0} expr=(add[32] (add[32] v8280[32] -4[32]) 2[32]) }
          value = { defs={0x080485b0} expr=(extract[8] 16[32] 24[32] v8281[32]) }
          flags = { }
        address = { defs={0x080485b0} expr=(add[32] (add[32] v8280[32] -4[32]) 1[32]) }
          value = { defs={0x080485b0} expr=(extract[8] 8[32] 16[32] v8281[32]) }
          flags = { }
        address = { defs={0x080485b0} expr=(add[32] v8280[32] -4[32]) }
          value = { defs={0x080485b0} expr=(extract[8] 0[32] 8[32] v8281[32]) }
          flags = { }
    init mem:
0x80485b1:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v8276[32] }
        cx      = { defs={} expr=v8277[32] }
        dx      = { defs={} expr=v8278[32] }
        bx      = { defs={} expr=v8279[32] }
        sp      = { defs={0x080485b0} expr=(add[32] v8280[32] -4[32]) }
        bp      = { defs={0x080485b0,0x080485b1} expr=(add[32] v8280[32] -4[32]) }
        si      = { defs={} expr=v8282[32] }
        di      = { defs={} expr=v8283[32] }
        es      = { defs={} expr=v8284[16] }
        cs      = { defs={} expr=v8285[16] }
        ss      = { defs={} expr=v8286[16] }
        ds      = { defs={} expr=v8287[16] }
        fs      = { defs={} expr=v8288[16] }
        gs      = { defs={} expr=v8289[16] }
        cf      = { defs={} expr=v8290[1] }
        ?1      = { defs={} expr=v8291[1] }
        pf      = { defs={} expr=v8292[1] }
        ?3      = { defs={} expr=v8293[1] }
        af      = { defs={} expr=v8294[1] }
        ?5      = { defs={} expr=v8295[1] }
        zf      = { defs={} expr=v8296[1] }
        sf      = { defs={} expr=v8297[1] }
        tf      = { defs={} expr=v8298[1] }
        if      = { defs={} expr=v8299[1] }
        df      = { defs={} expr=v8300[1] }
        of      = { defs={} expr=v8301[1] }
        iopl0   = { defs={} expr=v8302[1] }
        iopl1   = { defs={} expr=v8303[1] }
        nt      = { defs={} expr=v8304[1] }
        ?15     = { defs={} expr=v8305[1] }
        rf      = { defs={} expr=v8306[1] }
        vm      = { defs={} expr=v8307[1] }
        ac      = { defs={} expr=v8308[1] }
        vif     = { defs={} expr=v8309[1] }
        vip     = { defs={} expr=v8310[1] }
        id      = { defs={} expr=v8311[1] }
        ?22     = { defs={} expr=v8312[1] }
        ?23     = { defs={} expr=v8313[1] }
        ?24     = { defs={} expr=v8314[1] }
        ?25     = { defs={} expr=v8315[1] }
        ?26     = { defs={} expr=v8316[1] }
        ?27     = { defs={} expr=v8317[1] }
        ?28     = { defs={} expr=v8318[1] }
        ?29     = { defs={} expr=v8319[1] }
        ?30     = { defs={} expr=v8320[1] }
        ?31     = { defs={} expr=v8321[1] }
        ip      = { defs={0x080485b0,0x080485b1} expr=0x080485b3[32] }
    memory:
        address = { defs={0x080485b0} expr=(add[32] (add[32] v8280[32] -4[32]) 3[32]) }
          value = { defs={0x080485b0} expr=(extract[8] 24[32] 32[32] v8281[32]) }
          flags = { }
        address = { defs={0x080485b0} expr=(add[32] (add[32] v8280[32] -4[32]) 2[32]) }
          value = { defs={0x080485b0} expr=(extract[8] 16[32] 24[32] v8281[32]) }
          flags = { }
        address = { defs={0x080485b0} expr=(add[32] (add[32] v8280[32] -4[32]) 1[32]) }
          value = { defs={0x080485b0} expr=(extract[8] 8[32] 16[32] v8281[32]) }
          flags = { }
        address = { defs={0x080485b0} expr=(add[32] v8280[32] -4[32]) }
          value = { defs={0x080485b0} expr=(extract[8] 0[32] 8[32] v8281[32]) }
          flags = { }
    init mem:
0x80485b3:push   ebx
    registers:
        ax      = { defs={} expr=v8276[32] }
        cx      = { defs={} expr=v8277[32] }
        dx      = { defs={} expr=v8278[32] }
        bx      = { defs={} expr=v8279[32] }
        sp      = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] v8280[32] -4[32]) -4[32]) }
        bp      = { defs={0x080485b0,0x080485b1} expr=(add[32] v8280[32] -4[32]) }
        si      = { defs={} expr=v8282[32] }
        di      = { defs={} expr=v8283[32] }
        es      = { defs={} expr=v8284[16] }
        cs      = { defs={} expr=v8285[16] }
        ss      = { defs={} expr=v8286[16] }
        ds      = { defs={} expr=v8287[16] }
        fs      = { defs={} expr=v8288[16] }
        gs      = { defs={} expr=v8289[16] }
        cf      = { defs={} expr=v8290[1] }
        ?1      = { defs={} expr=v8291[1] }
        pf      = { defs={} expr=v8292[1] }
        ?3      = { defs={} expr=v8293[1] }
        af      = { defs={} expr=v8294[1] }
        ?5      = { defs={} expr=v8295[1] }
        zf      = { defs={} expr=v8296[1] }
        sf      = { defs={} expr=v8297[1] }
        tf      = { defs={} expr=v8298[1] }
        if      = { defs={} expr=v8299[1] }
        df      = { defs={} expr=v8300[1] }
        of      = { defs={} expr=v8301[1] }
        iopl0   = { defs={} expr=v8302[1] }
        iopl1   = { defs={} expr=v8303[1] }
        nt      = { defs={} expr=v8304[1] }
        ?15     = { defs={} expr=v8305[1] }
        rf      = { defs={} expr=v8306[1] }
        vm      = { defs={} expr=v8307[1] }
        ac      = { defs={} expr=v8308[1] }
        vif     = { defs={} expr=v8309[1] }
        vip     = { defs={} expr=v8310[1] }
        id      = { defs={} expr=v8311[1] }
        ?22     = { defs={} expr=v8312[1] }
        ?23     = { defs={} expr=v8313[1] }
        ?24     = { defs={} expr=v8314[1] }
        ?25     = { defs={} expr=v8315[1] }
        ?26     = { defs={} expr=v8316[1] }
        ?27     = { defs={} expr=v8317[1] }
        ?28     = { defs={} expr=v8318[1] }
        ?29     = { defs={} expr=v8319[1] }
        ?30     = { defs={} expr=v8320[1] }
        ?31     = { defs={} expr=v8321[1] }
        ip      = { defs={0x080485b0,0x080485b1,0x080485b3} expr=0x080485b4[32] }
    memory:
        address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x080485b3} expr=(extract[8] 24[32] 32[32] v8279[32]) }
          flags = { }
        address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x080485b3} expr=(extract[8] 16[32] 24[32] v8279[32]) }
          flags = { }
        address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x080485b3} expr=(extract[8] 8[32] 16[32] v8279[32]) }
          flags = { }
        address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] v8280[32] -4[32]) -4[32]) }
          value = { defs={0x080485b3} expr=(extract[8] 0[32] 8[32] v8279[32]) }
          flags = { }
        address = { defs={0x080485b0} expr=(add[32] (add[32] v8280[32] -4[32]) 3[32]) }
          value = { defs={0x080485b0} expr=(extract[8] 24[32] 32[32] v8281[32]) }
          flags = { }
        address = { defs={0x080485b0} expr=(add[32] (add[32] v8280[32] -4[32]) 2[32]) }
          value = { defs={0x080485b0} expr=(extract[8] 16[32] 24[32] v8281[32]) }
          flags = { }
        address = { defs={0x080485b0} expr=(add[32] (add[32] v8280[32] -4[32]) 1[32]) }
          value = { defs={0x080485b0} expr=(extract[8] 8[32] 16[32] v8281[32]) }
          flags = { }
        address = { defs={0x080485b0} expr=(add[32] v8280[32] -4[32]) }
          value = { defs={0x080485b0} expr=(extract[8] 0[32] 8[32] v8281[32]) }
          flags = { }
    init mem:
0x80485b4:push   eax
    registers:
        ax      = { defs={} expr=v8276[32] }
        cx      = { defs={} expr=v8277[32] }
        dx      = { defs={} expr=v8278[32] }
        bx      = { defs={} expr=v8279[32] }
        sp      = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x080485b0,0x080485b1} expr=(add[32] v8280[32] -4[32]) }
        si      = { defs={} expr=v8282[32] }
        di      = { defs={} expr=v8283[32] }
        es      = { defs={} expr=v8284[16] }
        cs      = { defs={} expr=v8285[16] }
        ss      = { defs={} expr=v8286[16] }
        ds      = { defs={} expr=v8287[16] }
        fs      = { defs={} expr=v8288[16] }
        gs      = { defs={} expr=v8289[16] }
        cf      = { defs={} expr=v8290[1] }
        ?1      = { defs={} expr=v8291[1] }
        pf      = { defs={} expr=v8292[1] }
        ?3      = { defs={} expr=v8293[1] }
        af      = { defs={} expr=v8294[1] }
        ?5      = { defs={} expr=v8295[1] }
        zf      = { defs={} expr=v8296[1] }
        sf      = { defs={} expr=v8297[1] }
        tf      = { defs={} expr=v8298[1] }
        if      = { defs={} expr=v8299[1] }
        df      = { defs={} expr=v8300[1] }
        of      = { defs={} expr=v8301[1] }
        iopl0   = { defs={} expr=v8302[1] }
        iopl1   = { defs={} expr=v8303[1] }
        nt      = { defs={} expr=v8304[1] }
        ?15     = { defs={} expr=v8305[1] }
        rf      = { defs={} expr=v8306[1] }
        vm      = { defs={} expr=v8307[1] }
        ac      = { defs={} expr=v8308[1] }
        vif     = { defs={} expr=v8309[1] }
        vip     = { defs={} expr=v8310[1] }
        id      = { defs={} expr=v8311[1] }
        ?22     = { defs={} expr=v8312[1] }
        ?23     = { defs={} expr=v8313[1] }
        ?24     = { defs={} expr=v8314[1] }
        ?25     = { defs={} expr=v8315[1] }
        ?26     = { defs={} expr=v8316[1] }
        ?27     = { defs={} expr=v8317[1] }
        ?28     = { defs={} expr=v8318[1] }
        ?29     = { defs={} expr=v8319[1] }
        ?30     = { defs={} expr=v8320[1] }
        ?31     = { defs={} expr=v8321[1] }
        ip      = { defs={0x080485b0,0x080485b1,0x080485b3,0x080485b4} expr=0x080485b5[32] }
    memory:
        address = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x080485b4} expr=(extract[8] 24[32] 32[32] v8276[32]) }
          flags = { }
        address = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x080485b4} expr=(extract[8] 16[32] 24[32] v8276[32]) }
          flags = { }
        address = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x080485b4} expr=(extract[8] 8[32] 16[32] v8276[32]) }
          flags = { }
        address = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080485b4} expr=(extract[8] 0[32] 8[32] v8276[32]) }
          flags = { }
        address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x080485b3} expr=(extract[8] 24[32] 32[32] v8279[32]) }
          flags = { }
        address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x080485b3} expr=(extract[8] 16[32] 24[32] v8279[32]) }
          flags = { }
        address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x080485b3} expr=(extract[8] 8[32] 16[32] v8279[32]) }
          flags = { }
        address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] v8280[32] -4[32]) -4[32]) }
          value = { defs={0x080485b3} expr=(extract[8] 0[32] 8[32] v8279[32]) }
          flags = { }
        address = { defs={0x080485b0} expr=(add[32] (add[32] v8280[32] -4[32]) 3[32]) }
          value = { defs={0x080485b0} expr=(extract[8] 24[32] 32[32] v8281[32]) }
          flags = { }
        address = { defs={0x080485b0} expr=(add[32] (add[32] v8280[32] -4[32]) 2[32]) }
          value = { defs={0x080485b0} expr=(extract[8] 16[32] 24[32] v8281[32]) }
          flags = { }
        address = { defs={0x080485b0} expr=(add[32] (add[32] v8280[32] -4[32]) 1[32]) }
          value = { defs={0x080485b0} expr=(extract[8] 8[32] 16[32] v8281[32]) }
          flags = { }
        address = { defs={0x080485b0} expr=(add[32] v8280[32] -4[32]) }
          value = { defs={0x080485b0} expr=(extract[8] 0[32] 8[32] v8281[32]) }
          flags = { }
    init mem:
0x80485b5:call   0x080485ba<<Insn>>
    registers:
        ax      = { defs={} expr=v8276[32] }
        cx      = { defs={} expr=v8277[32] }
        dx      = { defs={} expr=v8278[32] }
        bx      = { defs={} expr=v8279[32] }
        sp      = { defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5} expr=(add[32] (add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x080485b0,0x080485b1} expr=(add[32] v8280[32] -4[32]) }
        si      = { defs={} expr=v8282[32] }
        di      = { defs={} expr=v8283[32] }
        es      = { defs={} expr=v8284[16] }
        cs      = { defs={} expr=v8285[16] }
        ss      = { defs={} expr=v8286[16] }
        ds      = { defs={} expr=v8287[16] }
        fs      = { defs={} expr=v8288[16] }
        gs      = { defs={} expr=v8289[16] }
        cf      = { defs={} expr=v8290[1] }
        ?1      = { defs={} expr=v8291[1] }
        pf      = { defs={} expr=v8292[1] }
        ?3      = { defs={} expr=v8293[1] }
        af      = { defs={} expr=v8294[1] }
        ?5      = { defs={} expr=v8295[1] }
        zf      = { defs={} expr=v8296[1] }
        sf      = { defs={} expr=v8297[1] }
        tf      = { defs={} expr=v8298[1] }
        if      = { defs={} expr=v8299[1] }
        df      = { defs={} expr=v8300[1] }
        of      = { defs={} expr=v8301[1] }
        iopl0   = { defs={} expr=v8302[1] }
        iopl1   = { defs={} expr=v8303[1] }
        nt      = { defs={} expr=v8304[1] }
        ?15     = { defs={} expr=v8305[1] }
        rf      = { defs={} expr=v8306[1] }
        vm      = { defs={} expr=v8307[1] }
        ac      = { defs={} expr=v8308[1] }
        vif     = { defs={} expr=v8309[1] }
        vip     = { defs={} expr=v8310[1] }
        id      = { defs={} expr=v8311[1] }
        ?22     = { defs={} expr=v8312[1] }
        ?23     = { defs={} expr=v8313[1] }
        ?24     = { defs={} expr=v8314[1] }
        ?25     = { defs={} expr=v8315[1] }
        ?26     = { defs={} expr=v8316[1] }
        ?27     = { defs={} expr=v8317[1] }
        ?28     = { defs={} expr=v8318[1] }
        ?29     = { defs={} expr=v8319[1] }
        ?30     = { defs={} expr=v8320[1] }
        ?31     = { defs={} expr=v8321[1] }
        ip      = { defs={0x080485b5} expr=0x080485ba[32] }
    memory:
        address = { defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x080485b0,0x080485b1,0x080485b3,0x080485b4,0x080485b5} expr=8[8] }
          flags = { }
        address = { defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x080485b0,0x080485b1,0x080485b3,0x080485b4,0x080485b5} expr=4[8] }
          flags = { }
        address = { defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x080485b0,0x080485b1,0x080485b3,0x080485b4,0x080485b5} expr=-123[8] }
          flags = { }
        address = { defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5} expr=(add[32] (add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080485b0,0x080485b1,0x080485b3,0x080485b4,0x080485b5} expr=-70[8] }
          flags = { }
        address = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) -4[32]) 3[32]) }
          value = { defs={0x080485b4} expr=(extract[8] 24[32] 32[32] v8276[32]) }
          flags = { }
        address = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) -4[32]) 2[32]) }
          value = { defs={0x080485b4} expr=(extract[8] 16[32] 24[32] v8276[32]) }
          flags = { }
        address = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) -4[32]) 1[32]) }
          value = { defs={0x080485b4} expr=(extract[8] 8[32] 16[32] v8276[32]) }
          flags = { }
        address = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080485b4} expr=(extract[8] 0[32] 8[32] v8276[32]) }
          flags = { }
        address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) 3[32]) }
          value = { defs={0x080485b3} expr=(extract[8] 24[32] 32[32] v8279[32]) }
          flags = { }
        address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) 2[32]) }
          value = { defs={0x080485b3} expr=(extract[8] 16[32] 24[32] v8279[32]) }
          flags = { }
        address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] (add[32] v8280[32] -4[32]) -4[32]) 1[32]) }
          value = { defs={0x080485b3} expr=(extract[8] 8[32] 16[32] v8279[32]) }
          flags = { }
        address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] v8280[32] -4[32]) -4[32]) }
          value = { defs={0x080485b3} expr=(extract[8] 0[32] 8[32] v8279[32]) }
          flags = { }
        address = { defs={0x080485b0} expr=(add[32] (add[32] v8280[32] -4[32]) 3[32]) }
          value = { defs={0x080485b0} expr=(extract[8] 24[32] 32[32] v8281[32]) }
          flags = { }
        address = { defs={0x080485b0} expr=(add[32] (add[32] v8280[32] -4[32]) 2[32]) }
          value = { defs={0x080485b0} expr=(extract[8] 16[32] 24[32] v8281[32]) }
          flags = { }
        address = { defs={0x080485b0} expr=(add[32] (add[32] v8280[32] -4[32]) 1[32]) }
          value = { defs={0x080485b0} expr=(extract[8] 8[32] 16[32] v8281[32]) }
          flags = { }
        address = { defs={0x080485b0} expr=(add[32] v8280[32] -4[32]) }
          value = { defs={0x080485b0} expr=(extract[8] 0[32] 8[32] v8281[32]) }
          flags = { }
    init mem:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
    registers:
        ax      = { defs={} expr=v8437[32] }
        cx      = { defs={} expr=v8438[32] }
        dx      = { defs={} expr=v8439[32] }
        bx      = { defs={0x080485ba} expr=v8490[32] }
        sp      = { defs={0x080485ba} expr=(add[32] v8441[32] 4[32]) }
        bp      = { defs={} expr=v8442[32] }
        si      = { defs={} expr=v8443[32] }
        di      = { defs={} expr=v8444[32] }
        es      = { defs={} expr=v8445[16] }
        cs      = { defs={} expr=v8446[16] }
        ss      = { defs={} expr=v8447[16] }
        ds      = { defs={} expr=v8448[16] }
        fs      = { defs={} expr=v8449[16] }
        gs      = { defs={} expr=v8450[16] }
        cf      = { defs={} expr=v8451[1] }
        ?1      = { defs={} expr=v8452[1] }
        pf      = { defs={} expr=v8453[1] }
        ?3      = { defs={} expr=v8454[1] }
        af      = { defs={} expr=v8455[1] }
        ?5      = { defs={} expr=v8456[1] }
        zf      = { defs={} expr=v8457[1] }
        sf      = { defs={} expr=v8458[1] }
        tf      = { defs={} expr=v8459[1] }
        if      = { defs={} expr=v8460[1] }
        df      = { defs={} expr=v8461[1] }
        of      = { defs={} expr=v8462[1] }
        iopl0   = { defs={} expr=v8463[1] }
        iopl1   = { defs={} expr=v8464[1] }
        nt      = { defs={} expr=v8465[1] }
        ?15     = { defs={} expr=v8466[1] }
        rf      = { defs={} expr=v8467[1] }
        vm      = { defs={} expr=v8468[1] }
        ac      = { defs={} expr=v8469[1] }
        vif     = { defs={} expr=v8470[1] }
        vip     = { defs={} expr=v8471[1] }
        id      = { defs={} expr=v8472[1] }
        ?22     = { defs={} expr=v8473[1] }
        ?23     = { defs={} expr=v8474[1] }
        ?24     = { defs={} expr=v8475[1] }
        ?25     = { defs={} expr=v8476[1] }
        ?26     = { defs={} expr=v8477[1] }
        ?27     = { defs={} expr=v8478[1] }
        ?28     = { defs={} expr=v8479[1] }
        ?29     = { defs={} expr=v8480[1] }
        ?30     = { defs={} expr=v8481[1] }
        ?31     = { defs={} expr=v8482[1] }
        ip      = { defs={0x080485ba} expr=0x080485bb[32] }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v8441[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8490[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8441[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8490[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8441[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8490[32]) }
          flags = { rdonly }
        address = { defs={} expr=v8441[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8490[32]) }
          flags = { rdonly }
0x80485bb:add    ebx, 0x0000110e
    registers:
        ax      = { defs={} expr=v8437[32] }
        cx      = { defs={} expr=v8438[32] }
        dx      = { defs={} expr=v8439[32] }
        bx      = { defs={0x080485ba,0x080485bb} expr=(add[32] v8490[32] 4366[32]) }
        sp      = { defs={0x080485ba} expr=(add[32] v8441[32] 4[32]) }
        bp      = { defs={} expr=v8442[32] }
        si      = { defs={} expr=v8443[32] }
        di      = { defs={} expr=v8444[32] }
        es      = { defs={} expr=v8445[16] }
        cs      = { defs={} expr=v8446[16] }
        ss      = { defs={} expr=v8447[16] }
        ds      = { defs={} expr=v8448[16] }
        fs      = { defs={} expr=v8449[16] }
        gs      = { defs={} expr=v8450[16] }
        cf      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v8490[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v8490[32]) 4366[33]))))) }
        ?1      = { defs={} expr=v8452[1] }
        pf      = { defs={0x080485ba,0x080485bb} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v8490[32] 4366[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v8490[32] 4366[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v8490[32] 4366[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v8490[32] 4366[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v8490[32] 4366[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v8490[32] 4366[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v8490[32] 4366[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v8490[32] 4366[32]))))))) }
        ?3      = { defs={} expr=v8454[1] }
        af      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v8490[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v8490[32]) 4366[33]))))) }
        ?5      = { defs={} expr=v8456[1] }
        zf      = { defs={0x080485ba,0x080485bb} expr=(zerop[1] (add[32] v8490[32] 4366[32])) }
        sf      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 31[32] 32[32] (add[32] v8490[32] 4366[32])) }
        tf      = { defs={} expr=v8459[1] }
        if      = { defs={} expr=v8460[1] }
        df      = { defs={} expr=v8461[1] }
        of      = { defs={0x080485ba,0x080485bb} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v8490[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v8490[32]) 4366[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v8490[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v8490[32]) 4366[33])))))) }
        iopl0   = { defs={} expr=v8463[1] }
        iopl1   = { defs={} expr=v8464[1] }
        nt      = { defs={} expr=v8465[1] }
        ?15     = { defs={} expr=v8466[1] }
        rf      = { defs={} expr=v8467[1] }
        vm      = { defs={} expr=v8468[1] }
        ac      = { defs={} expr=v8469[1] }
        vif     = { defs={} expr=v8470[1] }
        vip     = { defs={} expr=v8471[1] }
        id      = { defs={} expr=v8472[1] }
        ?22     = { defs={} expr=v8473[1] }
        ?23     = { defs={} expr=v8474[1] }
        ?24     = { defs={} expr=v8475[1] }
        ?25     = { defs={} expr=v8476[1] }
        ?26     = { defs={} expr=v8477[1] }
        ?27     = { defs={} expr=v8478[1] }
        ?28     = { defs={} expr=v8479[1] }
        ?29     = { defs={} expr=v8480[1] }
        ?30     = { defs={} expr=v8481[1] }
        ?31     = { defs={} expr=v8482[1] }
        ip      = { defs={0x080485ba,0x080485bb} expr=0x080485c1[32] }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v8441[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8490[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8441[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8490[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8441[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8490[32]) }
          flags = { rdonly }
        address = { defs={} expr=v8441[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8490[32]) }
          flags = { rdonly }
0x80485c1:call   0x08048390<__do_global_dtors_aux>
    registers:
        ax      = { defs={} expr=v8437[32] }
        cx      = { defs={} expr=v8438[32] }
        dx      = { defs={} expr=v8439[32] }
        bx      = { defs={0x080485ba,0x080485bb} expr=(add[32] v8490[32] 4366[32]) }
        sp      = { defs={0x080485ba,0x080485c1} expr=(add[32] (add[32] v8441[32] 4[32]) -4[32]) }
        bp      = { defs={} expr=v8442[32] }
        si      = { defs={} expr=v8443[32] }
        di      = { defs={} expr=v8444[32] }
        es      = { defs={} expr=v8445[16] }
        cs      = { defs={} expr=v8446[16] }
        ss      = { defs={} expr=v8447[16] }
        ds      = { defs={} expr=v8448[16] }
        fs      = { defs={} expr=v8449[16] }
        gs      = { defs={} expr=v8450[16] }
        cf      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v8490[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v8490[32]) 4366[33]))))) }
        ?1      = { defs={} expr=v8452[1] }
        pf      = { defs={0x080485ba,0x080485bb} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v8490[32] 4366[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v8490[32] 4366[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v8490[32] 4366[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v8490[32] 4366[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v8490[32] 4366[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v8490[32] 4366[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v8490[32] 4366[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v8490[32] 4366[32]))))))) }
        ?3      = { defs={} expr=v8454[1] }
        af      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v8490[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v8490[32]) 4366[33]))))) }
        ?5      = { defs={} expr=v8456[1] }
        zf      = { defs={0x080485ba,0x080485bb} expr=(zerop[1] (add[32] v8490[32] 4366[32])) }
        sf      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 31[32] 32[32] (add[32] v8490[32] 4366[32])) }
        tf      = { defs={} expr=v8459[1] }
        if      = { defs={} expr=v8460[1] }
        df      = { defs={} expr=v8461[1] }
        of      = { defs={0x080485ba,0x080485bb} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v8490[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v8490[32]) 4366[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v8490[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v8490[32]) 4366[33])))))) }
        iopl0   = { defs={} expr=v8463[1] }
        iopl1   = { defs={} expr=v8464[1] }
        nt      = { defs={} expr=v8465[1] }
        ?15     = { defs={} expr=v8466[1] }
        rf      = { defs={} expr=v8467[1] }
        vm      = { defs={} expr=v8468[1] }
        ac      = { defs={} expr=v8469[1] }
        vif     = { defs={} expr=v8470[1] }
        vip     = { defs={} expr=v8471[1] }
        id      = { defs={} expr=v8472[1] }
        ?22     = { defs={} expr=v8473[1] }
        ?23     = { defs={} expr=v8474[1] }
        ?24     = { defs={} expr=v8475[1] }
        ?25     = { defs={} expr=v8476[1] }
        ?26     = { defs={} expr=v8477[1] }
        ?27     = { defs={} expr=v8478[1] }
        ?28     = { defs={} expr=v8479[1] }
        ?29     = { defs={} expr=v8480[1] }
        ?30     = { defs={} expr=v8481[1] }
        ?31     = { defs={} expr=v8482[1] }
        ip      = { defs={0x080485c1} expr=0x08048390[32] }
    memory:
        address = { defs={0x080485ba,0x080485c1} expr=(add[32] (add[32] (add[32] v8441[32] 4[32]) -4[32]) 3[32]) }
          value = { defs={0x080485ba,0x080485bb,0x080485c1} expr=8[8] }
          flags = { }
        address = { defs={0x080485ba,0x080485c1} expr=(add[32] (add[32] (add[32] v8441[32] 4[32]) -4[32]) 2[32]) }
          value = { defs={0x080485ba,0x080485bb,0x080485c1} expr=4[8] }
          flags = { }
        address = { defs={0x080485ba,0x080485c1} expr=(add[32] (add[32] (add[32] v8441[32] 4[32]) -4[32]) 1[32]) }
          value = { defs={0x080485ba,0x080485bb,0x080485c1} expr=-123[8] }
          flags = { }
        address = { defs={0x080485ba,0x080485c1} expr=(add[32] (add[32] v8441[32] 4[32]) -4[32]) }
          value = { defs={0x080485ba,0x080485bb,0x080485c1} expr=-58[8] }
          flags = { }
    init mem:
        address = { defs={} expr=(add[32] v8441[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8490[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8441[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8490[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8441[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8490[32]) }
          flags = { rdonly }
        address = { defs={} expr=v8441[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8490[32]) }
          flags = { rdonly }
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
    registers:
        ax      = { defs={0x080485c6} expr=v8667[32] }
        cx      = { defs={} expr=v8615[32] }
        dx      = { defs={} expr=v8616[32] }
        bx      = { defs={} expr=v8617[32] }
        sp      = { defs={0x080485c6} expr=(add[32] v8618[32] 4[32]) }
        bp      = { defs={} expr=v8619[32] }
        si      = { defs={} expr=v8620[32] }
        di      = { defs={} expr=v8621[32] }
        es      = { defs={} expr=v8622[16] }
        cs      = { defs={} expr=v8623[16] }
        ss      = { defs={} expr=v8624[16] }
        ds      = { defs={} expr=v8625[16] }
        fs      = { defs={} expr=v8626[16] }
        gs      = { defs={} expr=v8627[16] }
        cf      = { defs={} expr=v8628[1] }
        ?1      = { defs={} expr=v8629[1] }
        pf      = { defs={} expr=v8630[1] }
        ?3      = { defs={} expr=v8631[1] }
        af      = { defs={} expr=v8632[1] }
        ?5      = { defs={} expr=v8633[1] }
        zf      = { defs={} expr=v8634[1] }
        sf      = { defs={} expr=v8635[1] }
        tf      = { defs={} expr=v8636[1] }
        if      = { defs={} expr=v8637[1] }
        df      = { defs={} expr=v8638[1] }
        of      = { defs={} expr=v8639[1] }
        iopl0   = { defs={} expr=v8640[1] }
        iopl1   = { defs={} expr=v8641[1] }
        nt      = { defs={} expr=v8642[1] }
        ?15     = { defs={} expr=v8643[1] }
        rf      = { defs={} expr=v8644[1] }
        vm      = { defs={} expr=v8645[1] }
        ac      = { defs={} expr=v8646[1] }
        vif     = { defs={} expr=v8647[1] }
        vip     = { defs={} expr=v8648[1] }
        id      = { defs={} expr=v8649[1] }
        ?22     = { defs={} expr=v8650[1] }
        ?23     = { defs={} expr=v8651[1] }
        ?24     = { defs={} expr=v8652[1] }
        ?25     = { defs={} expr=v8653[1] }
        ?26     = { defs={} expr=v8654[1] }
        ?27     = { defs={} expr=v8655[1] }
        ?28     = { defs={} expr=v8656[1] }
        ?29     = { defs={} expr=v8657[1] }
        ?30     = { defs={} expr=v8658[1] }
        ?31     = { defs={} expr=v8659[1] }
        ip      = { defs={0x080485c6} expr=0x080485c7[32] }
    memory:
    init mem:
        address = { defs={} expr=(add[32] v8618[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8667[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8618[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8667[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8618[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8667[32]) }
          flags = { rdonly }
        address = { defs={} expr=v8618[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8667[32]) }
          flags = { rdonly }
0x80485c7:pop    ebx
    registers:
        ax      = { defs={0x080485c6} expr=v8667[32] }
        cx      = { defs={} expr=v8615[32] }
        dx      = { defs={} expr=v8616[32] }
        bx      = { defs={0x080485c7} expr=v8685[32] }
        sp      = { defs={0x080485c6,0x080485c7} expr=(add[32] (add[32] v8618[32] 4[32]) 4[32]) }
        bp      = { defs={} expr=v8619[32] }
        si      = { defs={} expr=v8620[32] }
        di      = { defs={} expr=v8621[32] }
        es      = { defs={} expr=v8622[16] }
        cs      = { defs={} expr=v8623[16] }
        ss      = { defs={} expr=v8624[16] }
        ds      = { defs={} expr=v8625[16] }
        fs      = { defs={} expr=v8626[16] }
        gs      = { defs={} expr=v8627[16] }
        cf      = { defs={} expr=v8628[1] }
        ?1      = { defs={} expr=v8629[1] }
        pf      = { defs={} expr=v8630[1] }
        ?3      = { defs={} expr=v8631[1] }
        af      = { defs={} expr=v8632[1] }
        ?5      = { defs={} expr=v8633[1] }
        zf      = { defs={} expr=v8634[1] }
        sf      = { defs={} expr=v8635[1] }
        tf      = { defs={} expr=v8636[1] }
        if      = { defs={} expr=v8637[1] }
        df      = { defs={} expr=v8638[1] }
        of      = { defs={} expr=v8639[1] }
        iopl0   = { defs={} expr=v8640[1] }
        iopl1   = { defs={} expr=v8641[1] }
        nt      = { defs={} expr=v8642[1] }
        ?15     = { defs={} expr=v8643[1] }
        rf      = { defs={} expr=v8644[1] }
        vm      = { defs={} expr=v8645[1] }
        ac      = { defs={} expr=v8646[1] }
        vif     = { defs={} expr=v8647[1] }
        vip     = { defs={} expr=v8648[1] }
        id      = { defs={} expr=v8649[1] }
        ?22     = { defs={} expr=v8650[1] }
        ?23     = { defs={} expr=v8651[1] }
        ?24     = { defs={} expr=v8652[1] }
        ?25     = { defs={} expr=v8653[1] }
        ?26     = { defs={} expr=v8654[1] }
        ?27     = { defs={} expr=v8655[1] }
        ?28     = { defs={} expr=v8656[1] }
        ?29     = { defs={} expr=v8657[1] }
        ?30     = { defs={} expr=v8658[1] }
        ?31     = { defs={} expr=v8659[1] }
        ip      = { defs={0x080485c6,0x080485c7} expr=0x080485c8[32] }
    memory:
    init mem:
        address = { defs={0x080485c6} expr=(add[32] (add[32] v8618[32] 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8685[32]) }
          flags = { rdonly }
        address = { defs={0x080485c6} expr=(add[32] (add[32] v8618[32] 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8685[32]) }
          flags = { rdonly }
        address = { defs={0x080485c6} expr=(add[32] (add[32] v8618[32] 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8685[32]) }
          flags = { rdonly }
        address = { defs={0x080485c6} expr=(add[32] v8618[32] 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8685[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8618[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8667[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8618[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8667[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8618[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8667[32]) }
          flags = { rdonly }
        address = { defs={} expr=v8618[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8667[32]) }
          flags = { rdonly }
0x80485c8:leave  
    registers:
        ax      = { defs={0x080485c6} expr=v8667[32] }
        cx      = { defs={} expr=v8615[32] }
        dx      = { defs={} expr=v8616[32] }
        bx      = { defs={0x080485c7} expr=v8685[32] }
        sp      = { defs={0x080485c8} expr=(add[32] v8619[32] 4[32]) }
        bp      = { defs={0x080485c8} expr=v8704[32] }
        si      = { defs={} expr=v8620[32] }
        di      = { defs={} expr=v8621[32] }
        es      = { defs={} expr=v8622[16] }
        cs      = { defs={} expr=v8623[16] }
        ss      = { defs={} expr=v8624[16] }
        ds      = { defs={} expr=v8625[16] }
        fs      = { defs={} expr=v8626[16] }
        gs      = { defs={} expr=v8627[16] }
        cf      = { defs={} expr=v8628[1] }
        ?1      = { defs={} expr=v8629[1] }
        pf      = { defs={} expr=v8630[1] }
        ?3      = { defs={} expr=v8631[1] }
        af      = { defs={} expr=v8632[1] }
        ?5      = { defs={} expr=v8633[1] }
        zf      = { defs={} expr=v8634[1] }
        sf      = { defs={} expr=v8635[1] }
        tf      = { defs={} expr=v8636[1] }
        if      = { defs={} expr=v8637[1] }
        df      = { defs={} expr=v8638[1] }
        of      = { defs={} expr=v8639[1] }
        iopl0   = { defs={} expr=v8640[1] }
        iopl1   = { defs={} expr=v8641[1] }
        nt      = { defs={} expr=v8642[1] }
        ?15     = { defs={} expr=v8643[1] }
        rf      = { defs={} expr=v8644[1] }
        vm      = { defs={} expr=v8645[1] }
        ac      = { defs={} expr=v8646[1] }
        vif     = { defs={} expr=v8647[1] }
        vip     = { defs={} expr=v8648[1] }
        id      = { defs={} expr=v8649[1] }
        ?22     = { defs={} expr=v8650[1] }
        ?23     = { defs={} expr=v8651[1] }
        ?24     = { defs={} expr=v8652[1] }
        ?25     = { defs={} expr=v8653[1] }
        ?26     = { defs={} expr=v8654[1] }
        ?27     = { defs={} expr=v8655[1] }
        ?28     = { defs={} expr=v8656[1] }
        ?29     = { defs={} expr=v8657[1] }
        ?30     = { defs={} expr=v8658[1] }
        ?31     = { defs={} expr=v8659[1] }
        ip      = { defs={0x080485c6,0x080485c7,0x080485c8} expr=0x080485c9[32] }
    memory:
    init mem:
        address = { defs={0x080485c8} expr=(add[32] v8619[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8704[32]) }
          flags = { rdonly }
        address = { defs={0x080485c8} expr=(add[32] v8619[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8704[32]) }
          flags = { rdonly }
        address = { defs={0x080485c8} expr=(add[32] v8619[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8704[32]) }
          flags = { rdonly }
        address = { defs={0x080485c8} expr=v8619[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8704[32]) }
          flags = { rdonly }
        address = { defs={0x080485c6} expr=(add[32] (add[32] v8618[32] 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8685[32]) }
          flags = { rdonly }
        address = { defs={0x080485c6} expr=(add[32] (add[32] v8618[32] 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8685[32]) }
          flags = { rdonly }
        address = { defs={0x080485c6} expr=(add[32] (add[32] v8618[32] 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8685[32]) }
          flags = { rdonly }
        address = { defs={0x080485c6} expr=(add[32] v8618[32] 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8685[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8618[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8667[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8618[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8667[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8618[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8667[32]) }
          flags = { rdonly }
        address = { defs={} expr=v8618[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8667[32]) }
          flags = { rdonly }
0x80485c9:ret    
    registers:
        ax      = { defs={0x080485c6} expr=v8667[32] }
        cx      = { defs={} expr=v8615[32] }
        dx      = { defs={} expr=v8616[32] }
        bx      = { defs={0x080485c7} expr=v8685[32] }
        sp      = { defs={0x080485c8,0x080485c9} expr=(add[32] (add[32] v8619[32] 4[32]) 4[32]) }
        bp      = { defs={0x080485c8} expr=v8704[32] }
        si      = { defs={} expr=v8620[32] }
        di      = { defs={} expr=v8621[32] }
        es      = { defs={} expr=v8622[16] }
        cs      = { defs={} expr=v8623[16] }
        ss      = { defs={} expr=v8624[16] }
        ds      = { defs={} expr=v8625[16] }
        fs      = { defs={} expr=v8626[16] }
        gs      = { defs={} expr=v8627[16] }
        cf      = { defs={} expr=v8628[1] }
        ?1      = { defs={} expr=v8629[1] }
        pf      = { defs={} expr=v8630[1] }
        ?3      = { defs={} expr=v8631[1] }
        af      = { defs={} expr=v8632[1] }
        ?5      = { defs={} expr=v8633[1] }
        zf      = { defs={} expr=v8634[1] }
        sf      = { defs={} expr=v8635[1] }
        tf      = { defs={} expr=v8636[1] }
        if      = { defs={} expr=v8637[1] }
        df      = { defs={} expr=v8638[1] }
        of      = { defs={} expr=v8639[1] }
        iopl0   = { defs={} expr=v8640[1] }
        iopl1   = { defs={} expr=v8641[1] }
        nt      = { defs={} expr=v8642[1] }
        ?15     = { defs={} expr=v8643[1] }
        rf      = { defs={} expr=v8644[1] }
        vm      = { defs={} expr=v8645[1] }
        ac      = { defs={} expr=v8646[1] }
        vif     = { defs={} expr=v8647[1] }
        vip     = { defs={} expr=v8648[1] }
        id      = { defs={} expr=v8649[1] }
        ?22     = { defs={} expr=v8650[1] }
        ?23     = { defs={} expr=v8651[1] }
        ?24     = { defs={} expr=v8652[1] }
        ?25     = { defs={} expr=v8653[1] }
        ?26     = { defs={} expr=v8654[1] }
        ?27     = { defs={} expr=v8655[1] }
        ?28     = { defs={} expr=v8656[1] }
        ?29     = { defs={} expr=v8657[1] }
        ?30     = { defs={} expr=v8658[1] }
        ?31     = { defs={} expr=v8659[1] }
        ip      = { defs={0x080485c9} expr=v8723[32] }
    memory:
    init mem:
        address = { defs={0x080485c8} expr=(add[32] (add[32] v8619[32] 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8723[32]) }
          flags = { rdonly }
        address = { defs={0x080485c8} expr=(add[32] (add[32] v8619[32] 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8723[32]) }
          flags = { rdonly }
        address = { defs={0x080485c8} expr=(add[32] (add[32] v8619[32] 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8723[32]) }
          flags = { rdonly }
        address = { defs={0x080485c8} expr=(add[32] v8619[32] 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8723[32]) }
          flags = { rdonly }
        address = { defs={0x080485c8} expr=(add[32] v8619[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8704[32]) }
          flags = { rdonly }
        address = { defs={0x080485c8} expr=(add[32] v8619[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8704[32]) }
          flags = { rdonly }
        address = { defs={0x080485c8} expr=(add[32] v8619[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8704[32]) }
          flags = { rdonly }
        address = { defs={0x080485c8} expr=v8619[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8704[32]) }
          flags = { rdonly }
        address = { defs={0x080485c6} expr=(add[32] (add[32] v8618[32] 4[32]) 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8685[32]) }
          flags = { rdonly }
        address = { defs={0x080485c6} expr=(add[32] (add[32] v8618[32] 4[32]) 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8685[32]) }
          flags = { rdonly }
        address = { defs={0x080485c6} expr=(add[32] (add[32] v8618[32] 4[32]) 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8685[32]) }
          flags = { rdonly }
        address = { defs={0x080485c6} expr=(add[32] v8618[32] 4[32]) }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8685[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8618[32] 3[32]) }
          value = { defs={} expr=(extract[8] 24[32] 32[32] v8667[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8618[32] 2[32]) }
          value = { defs={} expr=(extract[8] 16[32] 24[32] v8667[32]) }
          flags = { rdonly }
        address = { defs={} expr=(add[32] v8618[32] 1[32]) }
          value = { defs={} expr=(extract[8] 8[32] 16[32] v8667[32]) }
          flags = { rdonly }
        address = { defs={} expr=v8618[32] }
          value = { defs={} expr=(extract[8] 0[32] 8[32] v8667[32]) }
          flags = { rdonly }
analyzed headers: 1

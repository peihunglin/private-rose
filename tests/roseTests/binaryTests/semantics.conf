# Test configuration file (see scripts/test_harness.pl for details).

cmd = ${VALGRIND} ./${CMD} ${BINARY_SAMPLES}/${INPUT}
answer = ${srcdir}/${CMD}.ans

# These instruction semantics tests are *very* sensitive to changes to the Disassembler and Partitioner classes
# because they and this test all use the instruction semantics. If the Disassembler or Partitioner is even slightly
# changed, it could make a different number of calls to the instruction semantics, which changes the sequence number
# used to generate constant names. Therefore, when comparing the test output with the expected answer, we will renumber
# all constant names sequentially.
#
# This renumbering causes values to change size, messing up things that are alinged in columns. The difference in spacing
# could be interpreted as significant, so we'll squash all horizontal white space down to a single character.
#
# These tests are still sensitive to minor formatting changes in unparseInstruction().
#
filter = perl -p -e '/====/ && ($seq=0); tr/\t/ /; s/\b([vm])(\d+)\b/$map{$2} ||= ucfirst($1) . ++$seq/ge; tr/ / /s'
